com.kbdunn.nimbus.web.NimbusLayout -> com.kbdunn.nimbus.a:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.header.HeaderPanel header -> a
    com.vaadin.ui.ComponentContainer pageContent -> b
    com.kbdunn.nimbus.web.tasks.Taskbar taskbar -> c
    com.vaadin.ui.CssLayout loadingOverlay -> d
    com.vaadin.ui.CssLayout hiddenLayout -> e
    void <init>() -> <init>
    void setTaskbar(com.kbdunn.nimbus.web.tasks.Taskbar) -> a
    com.vaadin.ui.ComponentContainer getContentContainer() -> a
    com.kbdunn.nimbus.web.header.HeaderPanel getHeaderPanel() -> b
    void showLoadingOverlay() -> c
    void hideLoadingOverlay() -> d
    void addHiddenComponent(com.vaadin.ui.AbstractComponent) -> a
    void removeAllHiddenComponents() -> e
    void removeHiddenComponent(com.vaadin.ui.AbstractComponent) -> b
    void refresh() -> refresh
com.kbdunn.nimbus.web.NimbusUI -> com.kbdunn.nimbus.b:
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger log -> f
    com.vaadin.navigator.Navigator navigator -> g
    com.kbdunn.nimbus.web.error.ErrorView errorView -> h
    com.kbdunn.nimbus.web.NimbusLayout uiLayout -> i
    com.kbdunn.nimbus.web.event.EventRouter eventRouter -> j
    com.kbdunn.nimbus.web.tasks.TaskController taskController -> k
    com.kbdunn.nimbus.web.files.FileManagerController fileController -> l
    com.kbdunn.nimbus.web.share.ShareController shareController -> m
    com.kbdunn.nimbus.web.share.ExternalShareController extShareController -> n
    com.kbdunn.nimbus.web.files.editor.TextEditorController textEditorController -> o
    com.kbdunn.nimbus.web.settings.SettingsController settingsController -> p
    void <init>() -> <init>
    void init(com.vaadin.server.VaadinRequest) -> init
    com.kbdunn.nimbus.web.NimbusUI getCurrent() -> f
    com.kbdunn.nimbus.api.model.NimbusUser getCurrentUser() -> g
    java.lang.String getCurrentIP() -> h
    com.kbdunn.nimbus.web.event.EventRouter getEventRouter() -> i
    com.kbdunn.nimbus.web.event.EventRouter getCurrentEventRouter() -> j
    com.kbdunn.nimbus.api.server.UserService getUserService() -> k
    com.kbdunn.nimbus.api.server.FileService getFileService() -> l
    com.kbdunn.nimbus.api.server.StorageService getStorageService() -> m
    com.kbdunn.nimbus.api.server.MediaLibraryService getMediaLibraryService() -> n
    com.kbdunn.nimbus.api.server.FileShareService getFileShareService() -> o
    com.kbdunn.nimbus.api.server.PropertiesService getPropertiesService() -> p
    com.kbdunn.nimbus.api.server.AsyncService getAsyncService() -> q
    com.kbdunn.nimbus.api.server.OAuthService getOAuthService() -> getOAuthService
    java.lang.String getUrlGuess() -> r
    boolean isDevMode() -> isDevMode
    boolean isDemoMode() -> isDemoMode
    void showLoadingOverlay() -> c
    void hideLoadingOverlay() -> d
    void refresh() -> refresh
    void addView(java.lang.String,com.vaadin.navigator.View) -> addView
    void removeView(java.lang.String) -> removeView
    com.kbdunn.nimbus.web.header.MediaPlayer getMediaController() -> s
    com.kbdunn.nimbus.web.tasks.TaskController getTaskController() -> t
    com.kbdunn.nimbus.web.share.ShareController getShareController() -> u
    com.kbdunn.nimbus.web.share.ExternalShareController getExternalShareController() -> v
    com.kbdunn.nimbus.web.files.FileManagerController getFileController() -> w
    com.kbdunn.nimbus.web.files.editor.TextEditorController getTextEditorController() -> x
    com.kbdunn.nimbus.web.settings.SettingsController getSettingsController() -> y
    void addHiddenComponent(com.vaadin.ui.AbstractComponent) -> a
    void removeHiddenComponent(com.vaadin.ui.AbstractComponent) -> b
    void setAuthenticated(boolean) -> a
    java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda) -> a
    void lambda$init$a1d28b15$1(com.vaadin.server.ErrorEvent) -> a
    void lambda$null$0(com.vaadin.server.ErrorEvent) -> b
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.NimbusVaadinServlet -> com.kbdunn.nimbus.c:
    long serialVersionUID -> serialVersionUID
    java.util.concurrent.atomic.AtomicInteger activeSessions -> q
    com.kbdunn.nimbus.api.server.UserService userService -> r
    com.kbdunn.nimbus.api.server.FileService fileService -> s
    com.kbdunn.nimbus.api.server.StorageService storageService -> t
    com.kbdunn.nimbus.api.server.MediaLibraryService mediaLibraryService -> u
    com.kbdunn.nimbus.api.server.FileShareService fileShareService -> v
    com.kbdunn.nimbus.api.server.PropertiesService propertiesService -> w
    com.kbdunn.nimbus.api.server.AsyncService asyncService -> x
    com.kbdunn.nimbus.api.server.OAuthService oAuthService -> y
    void <init>() -> <init>
    void servletInitialized() -> servletInitialized
    void sessionDestroy(com.vaadin.server.SessionDestroyEvent) -> sessionDestroy
    void sessionInit(com.vaadin.server.SessionInitEvent) -> sessionInit
    void contextInitialized(javax.servlet.ServletContextEvent) -> contextInitialized
    void contextDestroyed(javax.servlet.ServletContextEvent) -> contextDestroyed
    com.kbdunn.nimbus.web.NimbusVaadinServlet getCurrent() -> z
    com.kbdunn.nimbus.api.server.UserService getUserService() -> k
    com.kbdunn.nimbus.api.server.FileService getFileService() -> l
    com.kbdunn.nimbus.api.server.StorageService getStorageService() -> m
    com.kbdunn.nimbus.api.server.MediaLibraryService getMediaLibraryService() -> n
    com.kbdunn.nimbus.api.server.FileShareService getFileShareService() -> o
    com.kbdunn.nimbus.api.server.PropertiesService getPropertiesService() -> p
    com.kbdunn.nimbus.api.server.AsyncService getAsyncService() -> q
    com.kbdunn.nimbus.api.server.OAuthService getOAuthService() -> getOAuthService
    com.kbdunn.nimbus.api.server.PropertiesService access$000(com.kbdunn.nimbus.web.NimbusVaadinServlet) -> a
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.NimbusVaadinServlet$1 -> com.kbdunn.nimbus.d:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.NimbusVaadinServlet this$0 -> z
    void <init>(com.kbdunn.nimbus.web.NimbusVaadinServlet) -> <init>
    com.vaadin.server.SystemMessages getSystemMessages(com.vaadin.server.SystemMessagesInfo) -> getSystemMessages
com.kbdunn.nimbus.web.NimbusVaadinServlet$2 -> com.kbdunn.nimbus.e:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.NimbusVaadinServlet this$0 -> z
    void <init>(com.kbdunn.nimbus.web.NimbusVaadinServlet) -> <init>
    void modifyBootstrapFragment(com.vaadin.server.BootstrapFragmentResponse) -> modifyBootstrapFragment
    void modifyBootstrapPage(com.vaadin.server.BootstrapPageResponse) -> modifyBootstrapPage
com.kbdunn.nimbus.web.NimbusViewChangeListener -> com.kbdunn.nimbus.f:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.NimbusUI ui -> A
    void <init>(com.kbdunn.nimbus.web.NimbusUI) -> <init>
    boolean beforeViewChange(com.vaadin.navigator.ViewChangeListener$ViewChangeEvent) -> beforeViewChange
    void afterViewChange(com.vaadin.navigator.ViewChangeListener$ViewChangeEvent) -> afterViewChange
com.kbdunn.nimbus.web.bean.FileBean -> com.kbdunn.nimbus.g:
    java.lang.String PROPERTY_ITEM_ID -> B
    java.lang.String PROPERTY_NAME -> PROPERTY_NAME
    java.lang.String PROPERTY_UPPER_NAME -> C
    java.lang.String PROPERTY_MODIFIED -> D
    java.lang.String PROPERTY_SIZE -> PROPERTY_SIZE
    java.lang.String PROPERTY_ICON -> PROPERTY_ICON
    java.lang.String PROPERTY_ICON_LABEL -> E
    java.lang.String PROPERTY_IS_DIRECTORY -> F
    com.kbdunn.nimbus.api.model.NimbusFile file -> G
    void <init>() -> <init>
    void <init>(com.kbdunn.nimbus.api.model.NimbusFile) -> <init>
    com.kbdunn.nimbus.api.model.NimbusFile getNimbusFile() -> A
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome getIconResource() -> B
    com.kbdunn.vaadin.addons.fontawesome.FontAwesomeLabel getIconLabel() -> C
    java.lang.Object getItemId() -> getItemId
    java.lang.Long getId() -> getId
    java.lang.String getName() -> getName
    java.lang.String getModifiedDateString() -> D
    java.lang.String getSizeString() -> E
    boolean isDirectory() -> isDirectory
    java.lang.String[] convertToSortColumnNames(java.lang.Object[]) -> a
    java.lang.String convertToSortColumnName(java.lang.String) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.kbdunn.nimbus.web.bean.FileBeanQuery -> com.kbdunn.nimbus.h:
    long serialVersionUID -> serialVersionUID
    java.lang.String ROOT_CONTAINER_KEY -> H
    void <init>(org.vaadin.addons.lazyquerycontainer.QueryDefinition,java.util.Map,java.lang.Object[],boolean[]) -> <init>
    com.kbdunn.nimbus.web.bean.FileBean constructBean() -> F
    java.util.List loadBeans(int,int) -> loadBeans
    void saveBeans(java.util.List,java.util.List,java.util.List) -> saveBeans
    int size() -> size
    com.kbdunn.nimbus.api.model.FileContainer getRootContainer() -> G
    java.lang.Object constructBean() -> constructBean
com.kbdunn.nimbus.web.bean.MediaGroupBean -> com.kbdunn.nimbus.i:
    java.lang.String PROPERTY_ITEM_ID -> B
    java.lang.String PROPERTY_NAME -> PROPERTY_NAME
    com.kbdunn.nimbus.api.model.MediaGroup group -> I
    void <init>() -> <init>
    void <init>(com.kbdunn.nimbus.api.model.MediaGroup) -> <init>
    com.kbdunn.nimbus.api.model.MediaGroup getMediaGroup() -> H
    java.lang.Object getItemId() -> getItemId
    java.lang.String getName() -> getName
    java.util.List getSongs() -> I
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.kbdunn.nimbus.web.bean.MediaGroupBeanQuery -> com.kbdunn.nimbus.j:
    long serialVersionUID -> serialVersionUID
    java.lang.String CONTROLLER_KEY -> J
    void <init>(org.vaadin.addons.lazyquerycontainer.QueryDefinition,java.util.Map,java.lang.Object[],boolean[]) -> <init>
    com.kbdunn.nimbus.web.bean.MediaGroupBean constructBean() -> J
    java.util.List loadBeans(int,int) -> loadBeans
    void saveBeans(java.util.List,java.util.List,java.util.List) -> saveBeans
    int size() -> size
    com.kbdunn.nimbus.web.bean.MediaGroupBeanQuery$MediaGroupBeanQueryController getController() -> K
    java.lang.Object constructBean() -> constructBean
com.kbdunn.nimbus.web.bean.MediaGroupBeanQuery$MediaGroupBeanQueryController -> com.kbdunn.nimbus.k:
    java.util.List getCurrentMediaGroups(com.kbdunn.nimbus.web.bean.MediaGroupBeanQuery,int,int) -> a
    int getCurrentMediaGroupCount(com.kbdunn.nimbus.web.bean.MediaGroupBeanQuery) -> a
com.kbdunn.nimbus.web.bean.SongBean -> com.kbdunn.nimbus.l:
    java.lang.String PROPERTY_ITEM_ID -> B
    java.lang.String PROPERTY_ARTIST -> K
    java.lang.String PROPERTY_TITLE -> L
    java.lang.String PROPERTY_LENGTH -> M
    java.lang.String PROPERTY_ALBUM -> N
    java.lang.String PROPERTY_ALBUM_YEAR -> O
    java.lang.String PROPERTY_TRACK_NO -> P
    com.kbdunn.nimbus.api.model.Song song -> Q
    java.lang.Integer playlistOrder -> R
    void <init>() -> <init>
    void <init>(com.kbdunn.nimbus.api.model.Song) -> <init>
    com.kbdunn.nimbus.api.model.Song getSong() -> L
    java.lang.Integer getPlaylistOrder() -> M
    void setPlaylistOrder(java.lang.Integer) -> a
    java.lang.Object getItemId() -> getItemId
    java.lang.Long getId() -> getId
    java.lang.String getArtist() -> getArtist
    java.lang.String getTitle() -> getTitle
    java.lang.String getLengthString() -> N
    java.lang.String getAlbum() -> getAlbum
    java.lang.String getYear() -> O
    java.lang.Integer getTrackNo() -> P
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.kbdunn.nimbus.web.bean.SongBeanQuery -> com.kbdunn.nimbus.m:
    long serialVersionUID -> serialVersionUID
    java.lang.String CONTROLLER_KEY -> J
    void <init>(org.vaadin.addons.lazyquerycontainer.QueryDefinition,java.util.Map,java.lang.Object[],boolean[]) -> <init>
    com.kbdunn.nimbus.web.bean.SongBean constructBean() -> Q
    java.util.List loadBeans(int,int) -> loadBeans
    void saveBeans(java.util.List,java.util.List,java.util.List) -> saveBeans
    int size() -> size
    com.kbdunn.nimbus.web.bean.SongBeanQuery$SongBeanQueryController getController() -> R
    java.lang.Object constructBean() -> constructBean
com.kbdunn.nimbus.web.bean.SongBeanQuery$SongBeanQueryController -> com.kbdunn.nimbus.n:
    java.util.List getCurrentSongs(com.kbdunn.nimbus.web.bean.SongBeanQuery,int,int) -> a
    int getCurrentSongCount(com.kbdunn.nimbus.web.bean.SongBeanQuery) -> a
com.kbdunn.nimbus.web.bean.VideoBean -> com.kbdunn.nimbus.o:
    java.lang.String PROPERTY_ITEM_ID -> B
    java.lang.String PROPERTY_TITLE -> L
    java.lang.String PROPERTY_LENGTH -> M
    com.kbdunn.nimbus.api.model.Video video -> S
    void <init>() -> <init>
    void <init>(com.kbdunn.nimbus.api.model.Video) -> <init>
    com.kbdunn.nimbus.api.model.Video getVideo() -> S
    java.lang.Object getItemId() -> getItemId
    java.lang.Long getId() -> getId
    java.lang.String getTitle() -> getTitle
    java.lang.String getLengthString() -> N
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.kbdunn.nimbus.web.bean.VideoBeanQuery -> com.kbdunn.nimbus.p:
    long serialVersionUID -> serialVersionUID
    java.lang.String CONTROLLER_KEY -> J
    void <init>(org.vaadin.addons.lazyquerycontainer.QueryDefinition,java.util.Map,java.lang.Object[],boolean[]) -> <init>
    com.kbdunn.nimbus.web.bean.VideoBean constructBean() -> T
    java.util.List loadBeans(int,int) -> loadBeans
    void saveBeans(java.util.List,java.util.List,java.util.List) -> saveBeans
    int size() -> size
    com.kbdunn.nimbus.web.bean.VideoBeanQuery$VideoBeanQueryController getController() -> U
    java.lang.Object constructBean() -> constructBean
com.kbdunn.nimbus.web.bean.VideoBeanQuery$VideoBeanQueryController -> com.kbdunn.nimbus.q:
    java.util.List getCurrentVideos(com.kbdunn.nimbus.web.bean.VideoBeanQuery,int,int) -> a
    int getCurrentVideoCount(com.kbdunn.nimbus.web.bean.VideoBeanQuery) -> a
com.kbdunn.nimbus.web.component.BreadCrumbs -> com.kbdunn.nimbus.r:
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger log -> f
    com.vaadin.ui.Label overflowLabel -> T
    java.lang.String currentPath -> U
    java.lang.String homeCrumb -> V
    boolean autoHide -> W
    boolean hidden -> hidden
    boolean lastCrumbHidden -> X
    boolean showEndSeparator -> Y
    com.vaadin.ui.HorizontalLayout content -> Z
    com.kbdunn.vaadin.addons.fontawesome.FontAwesomeLabel homeLabel -> aa
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void buildLayout() -> V
    void setCurrentPath(java.lang.String) -> b
    void setHomeCrumb(java.lang.String) -> c
    void setAutoHide(boolean) -> b
    void setLastCrumbHidden(boolean) -> c
    void setShowEndSeparator(boolean) -> d
    void buildBreadCrumbs() -> W
    com.vaadin.ui.Label getCrumbLabel(java.lang.String,java.lang.String) -> a
    void addCrumb(com.vaadin.ui.Label) -> a
    void addSeparator() -> addSeparator
    void hide() -> hide
    void show() -> show
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.component.FileContainerComboBox -> com.kbdunn.nimbus.s:
    long serialVersionUID -> serialVersionUID
    boolean showShareBlocks -> ab
    void <init>(boolean) -> <init>
    void refresh() -> refresh
    com.kbdunn.nimbus.api.model.FileContainer getValue() -> X
    com.kbdunn.nimbus.api.model.FileContainer getItemByIndex(int) -> a
    java.util.List getAllItems() -> Y
    java.lang.Object getValue() -> getValue
com.kbdunn.nimbus.web.component.FileContainerComboBox$1 -> com.kbdunn.nimbus.t:
    com.kbdunn.nimbus.web.component.FileContainerComboBox this$0 -> ac
    void <init>(com.kbdunn.nimbus.web.component.FileContainerComboBox) -> <init>
    void notifyEvent(com.kbdunn.nimbus.web.event.HardDriveModificationEvent) -> a
    void notifyEvent(com.kbdunn.nimbus.web.event.Event) -> a
com.kbdunn.nimbus.web.component.FileContainerComboBox$2 -> com.kbdunn.nimbus.u:
    com.kbdunn.nimbus.web.component.FileContainerComboBox this$0 -> ac
    void <init>(com.kbdunn.nimbus.web.component.FileContainerComboBox) -> <init>
    void notifyEvent(com.kbdunn.nimbus.web.event.ShareBlockModificationEvent) -> a
    void notifyEvent(com.kbdunn.nimbus.web.event.Event) -> a
com.kbdunn.nimbus.web.component.FileSelectTree -> com.kbdunn.nimbus.v:
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger log -> f
    java.lang.String PROPERTY_NAME -> PROPERTY_NAME
    com.kbdunn.nimbus.api.server.FileService fileService -> s
    com.kbdunn.nimbus.api.server.FileShareService shareService -> ad
    com.kbdunn.nimbus.api.server.UserService userService -> r
    com.kbdunn.nimbus.web.component.FileSelectTree$FileSelectTreeController controller -> ae
    com.vaadin.data.util.HierarchicalContainer fileContainer -> af
    java.util.ArrayList currentSelection -> ag
    void <init>(com.kbdunn.nimbus.web.component.FileSelectTree$FileSelectTreeController) -> <init>
    void build() -> Z
    void select(java.util.List) -> select
    void select(com.kbdunn.nimbus.api.model.NimbusFile) -> a
    void unselect(com.kbdunn.nimbus.api.model.NimbusFile) -> b
    java.util.List getSelected() -> aa
    void refresh() -> refresh
    void addParentItems(com.kbdunn.nimbus.api.model.NimbusFile) -> c
    java.util.List getCurrentRootItems() -> ab
    java.util.List getChildItems(com.kbdunn.nimbus.api.model.FileContainer) -> a
    java.util.List addChildItems(com.kbdunn.nimbus.api.model.FileContainer) -> b
    void addFile(com.kbdunn.nimbus.api.model.NimbusFile,java.lang.Object) -> a
    void nodeExpand(com.vaadin.ui.Tree$ExpandEvent) -> nodeExpand
    java.lang.String getStyle(com.vaadin.ui.Tree,java.lang.Object) -> getStyle
    void itemClick(com.vaadin.event.ItemClickEvent) -> itemClick
    boolean fileSelected(com.kbdunn.nimbus.api.model.NimbusFile) -> d
    boolean parentSelected(com.kbdunn.nimbus.api.model.NimbusFile) -> e
    void unselectChildren(com.kbdunn.nimbus.api.model.NimbusFile) -> f
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.component.FileSelectTree$FileSelectTreeController -> com.kbdunn.nimbus.w:
    java.util.List getInitialSelection() -> ac
    com.kbdunn.nimbus.api.model.FileContainer getCurrentFileContainer() -> ad
    com.kbdunn.nimbus.api.model.NimbusUser getCurrentUser() -> g
com.kbdunn.nimbus.web.component.FileTable -> com.kbdunn.nimbus.x:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.api.model.FileContainer currentDirectory -> ah
    com.kbdunn.nimbus.web.files.MoveFilesDropHandler dropHandler -> ai
    boolean dropEnabled -> aj
    java.util.List selected -> ak
    boolean selectionChanged -> al
    void <init>() -> <init>
    void <init>(com.kbdunn.nimbus.api.model.NimbusFile) -> <init>
    void buildFileTable() -> ae
    boolean setCurrentContainer(com.kbdunn.nimbus.api.model.FileContainer) -> c
    com.kbdunn.nimbus.api.model.FileContainer getCurrentDirectory() -> af
    void enableDropListener() -> ag
    void refresh() -> refresh
    java.util.List getCurrentDirectoryFolderContents() -> ah
    java.util.List getSelectedFiles() -> ai
    com.vaadin.ui.Tree getselectedItemsTree() -> aj
    void addChildItems(com.vaadin.ui.Tree,com.kbdunn.nimbus.api.model.NimbusFile) -> a
    void unselectAll() -> ak
    void select(java.lang.Object) -> select
    void itemClick(com.vaadin.event.ItemClickEvent) -> itemClick
com.kbdunn.nimbus.web.component.FolderTree -> com.kbdunn.nimbus.y:
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger log -> f
    java.lang.String PROPERTY_NAME -> PROPERTY_NAME
    com.vaadin.data.util.HierarchicalContainer folderContainer -> am
    com.kbdunn.nimbus.api.model.FileContainer rootContainer -> an
    com.kbdunn.nimbus.web.files.MoveFilesDropHandler dropHandler -> ai
    void <init>() -> <init>
    void <init>(com.kbdunn.nimbus.api.model.FileContainer) -> <init>
    void setRootContainer(com.kbdunn.nimbus.api.model.FileContainer) -> d
    com.kbdunn.nimbus.api.model.FileContainer getRootContainer() -> G
    void buildFolderTree() -> al
    void refresh() -> refresh
    void addChildItems(java.lang.Object) -> a
    void addFolder(com.kbdunn.nimbus.api.model.NimbusFile) -> g
    void addFolder(com.kbdunn.nimbus.api.model.NimbusFile,java.lang.Object) -> b
    void nodeExpand(com.vaadin.ui.Tree$ExpandEvent) -> nodeExpand
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.controlbar.ControlBar -> com.kbdunn.nimbus.z:
    long serialVersionUID -> serialVersionUID
    boolean captionsHidden -> ao
    void <init>() -> <init>
    void setCaptionsHidden(boolean) -> e
    void hideEmptyControlGroups() -> am
    com.vaadin.ui.Panel addControlGroup(java.lang.String,com.vaadin.ui.Button[]) -> a
    com.vaadin.ui.Panel setControlGroupButtons(com.vaadin.ui.Panel,com.vaadin.ui.Button[]) -> a
    com.vaadin.ui.Panel addPanel(java.lang.String) -> d
    com.vaadin.ui.Panel addButtons(com.vaadin.ui.Panel,com.vaadin.ui.Button[]) -> b
com.kbdunn.nimbus.web.controlbar.FileControlBar -> com.kbdunn.nimbus.A:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.files.FileManagerController handler -> ap
    void <init>(com.kbdunn.nimbus.web.files.FileManagerController) -> <init>
    void refresh() -> refresh
com.kbdunn.nimbus.web.controlbar.MediaControlBar -> com.kbdunn.nimbus.B:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.media.MediaController controller -> aq
    com.vaadin.ui.Panel playlistControls -> ar
    com.vaadin.ui.Panel editControls -> as
    void <init>(com.kbdunn.nimbus.web.media.MediaController) -> <init>
    void addGroupSelectButtons() -> an
    void addEditControls() -> ao
    void addPlaylistControls() -> ap
    com.vaadin.ui.Button$ClickListener getNavigatorClickListener(com.kbdunn.nimbus.web.media.MediaBrowserUri) -> a
    void showPlaylistControls() -> aq
    void hidePlaylistControls() -> ar
    void showEditControls() -> as
    void hideEditControls() -> at
com.kbdunn.nimbus.web.controlbar.MediaControlBar$1 -> com.kbdunn.nimbus.C:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.media.action.AddToLibrary val$addAction -> at
    com.kbdunn.nimbus.web.controlbar.MediaControlBar this$0 -> au
    void <init>(com.kbdunn.nimbus.web.controlbar.MediaControlBar,com.kbdunn.nimbus.web.media.action.AddToLibrary) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.controlbar.MediaControlBar$2 -> com.kbdunn.nimbus.D:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.media.action.EditMetadata val$editAction -> av
    com.kbdunn.nimbus.web.controlbar.MediaControlBar this$0 -> au
    void <init>(com.kbdunn.nimbus.web.controlbar.MediaControlBar,com.kbdunn.nimbus.web.media.action.EditMetadata) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.controlbar.MediaControlBar$3 -> com.kbdunn.nimbus.E:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.media.action.RemoveFromLibrary val$removeAction -> aw
    com.kbdunn.nimbus.web.controlbar.MediaControlBar this$0 -> au
    void <init>(com.kbdunn.nimbus.web.controlbar.MediaControlBar,com.kbdunn.nimbus.web.media.action.RemoveFromLibrary) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.controlbar.MediaControlBar$4 -> com.kbdunn.nimbus.F:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.media.action.CreatePlaylist val$createPlaylistDialog -> ax
    com.kbdunn.nimbus.web.controlbar.MediaControlBar this$0 -> au
    void <init>(com.kbdunn.nimbus.web.controlbar.MediaControlBar,com.kbdunn.nimbus.web.media.action.CreatePlaylist) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.controlbar.MediaControlBar$5 -> com.kbdunn.nimbus.G:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.media.action.EditPlaylist val$editPlaylistDialog -> ay
    com.kbdunn.nimbus.web.controlbar.MediaControlBar this$0 -> au
    void <init>(com.kbdunn.nimbus.web.controlbar.MediaControlBar,com.kbdunn.nimbus.web.media.action.EditPlaylist) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.controlbar.MediaControlBar$6 -> com.kbdunn.nimbus.H:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.media.action.DeletePlaylist val$deletePlaylistAction -> az
    com.kbdunn.nimbus.web.controlbar.MediaControlBar this$0 -> au
    void <init>(com.kbdunn.nimbus.web.controlbar.MediaControlBar,com.kbdunn.nimbus.web.media.action.DeletePlaylist) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.controlbar.MediaControlBar$7 -> com.kbdunn.nimbus.I:
    long serialVersionUID -> serialVersionUID
    java.lang.String val$navigationState -> aA
    com.kbdunn.nimbus.web.controlbar.MediaControlBar this$0 -> au
    void <init>(com.kbdunn.nimbus.web.controlbar.MediaControlBar,java.lang.String) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.dashboard.DashboardView -> com.kbdunn.nimbus.J:
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger log -> f
    java.lang.String NAME -> NAME
    com.vaadin.ui.Label dUsage -> aB
    com.vaadin.ui.Label dSub -> aC
    com.vaadin.ui.Label fUsage -> aD
    com.vaadin.ui.Label mUsage -> aE
    com.vaadin.ui.Label mSub -> aF
    void <init>() -> <init>
    void enter(com.vaadin.navigator.ViewChangeListener$ViewChangeEvent) -> enter
    void setDiskUsage() -> au
    void setNFileCount() -> av
    void setMemoryUsage() -> aw
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.email.EmailForm -> com.kbdunn.nimbus.K:
    long serialVersionUID -> serialVersionUID
    java.lang.String EMAIL_PATTERN -> aG
    java.util.regex.Pattern emailPattern -> aH
    com.vaadin.ui.FormLayout formContent -> aI
    com.vaadin.ui.TextField nimbusAddress -> aJ
    com.vaadin.ui.TextField subject -> aK
    com.vaadin.ui.TextArea recipients -> aL
    com.vaadin.ui.TextArea message -> aM
    com.vaadin.ui.Button send -> aN
    boolean urlGuess -> aO
    void <init>(java.lang.String,com.vaadin.ui.Button$ClickListener) -> <init>
    java.lang.String getNimbusUrl() -> ax
    java.lang.String getSubject() -> getSubject
    void setSubject(java.lang.String) -> setSubject
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getRecipientsString() -> ay
    void setRecipientsString(java.lang.String) -> e
    void enableUrlGuess() -> az
    void addSendListener(com.vaadin.ui.Button$ClickListener) -> a
    void refresh() -> refresh
    java.util.List getRecipients() -> getRecipients
    java.util.List getInvalidRecipients() -> aA
    boolean validateAndNotify() -> aB
    void setRecipientsEditable(boolean) -> f
    void setSubjectEditable(boolean) -> g
    void setMessageEditable(boolean) -> h
    void buildEmailLayout() -> aC
    boolean access$000(com.kbdunn.nimbus.web.email.EmailForm) -> a
    com.vaadin.ui.TextField access$100(com.kbdunn.nimbus.web.email.EmailForm) -> b
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.email.EmailForm$1 -> com.kbdunn.nimbus.L:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.email.EmailForm this$0 -> aP
    void <init>(com.kbdunn.nimbus.web.email.EmailForm) -> <init>
    void attach(com.vaadin.server.ClientConnector$AttachEvent) -> attach
com.kbdunn.nimbus.web.email.EmailService -> com.kbdunn.nimbus.M:
    com.kbdunn.nimbus.web.email.EmailService GMAIL -> aQ
    com.kbdunn.nimbus.web.email.EmailService HOTMAIL -> aR
    com.kbdunn.nimbus.web.email.EmailService OFFICE_365 -> aS
    com.kbdunn.nimbus.web.email.EmailService OUTLOOK -> aT
    com.kbdunn.nimbus.web.email.EmailService YAHOO -> aU
    com.kbdunn.nimbus.web.email.EmailService YAHOO_AU_NZ -> aV
    com.kbdunn.nimbus.web.email.EmailService YAHOO_PLUS -> aW
    com.kbdunn.nimbus.web.email.EmailService YAHOO_UK -> aX
    com.kbdunn.nimbus.web.email.EmailService$Type type -> aY
    java.lang.String name -> name
    java.lang.String server -> aZ
    java.lang.String port -> ba
    java.lang.String sslPort -> bb
    boolean sslEnabled -> bc
    com.kbdunn.nimbus.api.security.OAuthAPIService$Type oAuthServiceType -> bd
    com.kbdunn.nimbus.web.email.EmailService[] $VALUES -> be
    com.kbdunn.nimbus.web.email.EmailService[] values() -> aD
    com.kbdunn.nimbus.web.email.EmailService valueOf(java.lang.String) -> f
    void <init>(java.lang.String,int,com.kbdunn.nimbus.web.email.EmailService$Type,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,com.kbdunn.nimbus.api.security.OAuthAPIService$Type) -> <init>
    com.kbdunn.nimbus.web.email.EmailService$Type getType() -> aE
    java.lang.String getName() -> getName
    java.lang.String getServer() -> aF
    java.lang.String getPort() -> aG
    boolean sslEnabled() -> aH
    java.lang.String getSslPort() -> getSslPort
    com.kbdunn.nimbus.api.security.OAuthAPIService$Type getOAuthServiceType() -> aI
    com.kbdunn.nimbus.web.email.EmailService valueOf(com.kbdunn.nimbus.api.model.SMTPSettings) -> a
    com.kbdunn.nimbus.web.email.EmailService valueOf(com.kbdunn.nimbus.api.security.OAuthAPIService$Type) -> a
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.email.EmailService$Type -> com.kbdunn.nimbus.N:
    com.kbdunn.nimbus.web.email.EmailService$Type SMTP -> bf
    com.kbdunn.nimbus.web.email.EmailService$Type OAUTH2 -> bg
    com.kbdunn.nimbus.web.email.EmailService$Type[] $VALUES -> bh
    com.kbdunn.nimbus.web.email.EmailService$Type[] values() -> aJ
    com.kbdunn.nimbus.web.email.EmailService$Type valueOf(java.lang.String) -> g
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.error.Error -> com.kbdunn.nimbus.O:
    com.kbdunn.nimbus.web.error.Error UNKNOWN -> bi
    com.kbdunn.nimbus.web.error.Error NO_DRIVES -> bj
    com.kbdunn.nimbus.web.error.Error DRIVE_DISCONNECTED -> bk
    com.kbdunn.nimbus.web.error.Error NO_DRIVES_ASSIGNED -> bl
    com.kbdunn.nimbus.web.error.Error DRIVE_NOT_ACTIVATED -> bm
    com.kbdunn.nimbus.web.error.Error USER_DIRECTORIES_MISSING -> bn
    com.kbdunn.nimbus.web.error.Error SHARE_NOT_FOUND -> bo
    com.kbdunn.nimbus.web.error.Error ACCESS_DENIED -> bp
    com.kbdunn.nimbus.web.error.Error INVALID_FILE -> bq
    com.kbdunn.nimbus.web.error.Error EMAIL_CONFIGURATION -> br
    com.kbdunn.nimbus.web.error.Error UNCAUGHT_EXCEPTION -> bs
    java.lang.String fragment -> bt
    java.lang.String title -> title
    java.lang.String adminMessage -> bu
    java.lang.String userMessage -> bv
    com.kbdunn.nimbus.web.error.Error[] $VALUES -> bw
    com.kbdunn.nimbus.web.error.Error[] values() -> aK
    com.kbdunn.nimbus.web.error.Error valueOf(java.lang.String) -> h
    void <init>(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> <init>
    java.lang.String getPath() -> getPath
    com.kbdunn.nimbus.web.error.Error fromFragment(java.lang.String) -> i
    java.lang.String getTitle() -> getTitle
    java.lang.String getAdminMessage() -> aL
    java.lang.String getUserMessage() -> aM
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.error.ErrorView -> com.kbdunn.nimbus.P:
    long serialVersionUID -> serialVersionUID
    java.lang.String NAME -> NAME
    com.vaadin.ui.Label main -> bx
    com.vaadin.ui.Label sub -> by
    com.vaadin.ui.Label stack -> bz
    java.lang.Throwable currentError -> bA
    boolean layoutBuilt -> bB
    void <init>() -> <init>
    void enter(com.vaadin.navigator.ViewChangeListener$ViewChangeEvent) -> enter
    void setCurrentError(java.lang.Throwable) -> a
    void buildLayout() -> V
com.kbdunn.nimbus.web.event.Event -> com.kbdunn.nimbus.Q:
    java.lang.Object source -> source
    void <init>(java.lang.Object) -> <init>
    java.lang.Object getSource() -> getSource
com.kbdunn.nimbus.web.event.EventListener -> com.kbdunn.nimbus.R:
    void notifyEvent(com.kbdunn.nimbus.web.event.Event) -> a
com.kbdunn.nimbus.web.event.EventRouter -> com.kbdunn.nimbus.S:
    java.util.List hardDriveModificationListeners -> bC
    java.util.List shareBlockModificationListeners -> bD
    void <init>() -> <init>
    void addHardDriveModificationListener(com.kbdunn.nimbus.web.event.HardDriveModificationEvent$HardDriveModificationListener) -> a
    void removeHardDriveModificationListener(com.kbdunn.nimbus.web.event.HardDriveModificationEvent$HardDriveModificationListener) -> b
    void publishHardDriveModificationEvent(com.kbdunn.nimbus.web.event.HardDriveModificationEvent) -> b
    void addShareBlockModificationListener(com.kbdunn.nimbus.web.event.ShareBlockModificationEvent$ShareBlockModificationListener) -> a
    void removeShareBlockModificationListener(com.kbdunn.nimbus.web.event.ShareBlockModificationEvent$ShareBlockModificationListener) -> b
    void publishShareBlockModificationEvent(com.kbdunn.nimbus.web.event.ShareBlockModificationEvent) -> b
com.kbdunn.nimbus.web.event.HardDriveModificationEvent -> com.kbdunn.nimbus.T:
    com.kbdunn.nimbus.api.model.NimbusUser affectedUser -> bE
    void <init>(java.lang.Object,com.kbdunn.nimbus.api.model.NimbusUser) -> <init>
    com.kbdunn.nimbus.api.model.NimbusUser geAtffectedUser() -> aN
com.kbdunn.nimbus.web.event.HardDriveModificationEvent$HardDriveModificationListener -> com.kbdunn.nimbus.U:
com.kbdunn.nimbus.web.event.ShareBlockModificationEvent -> com.kbdunn.nimbus.V:
    void <init>(java.lang.Object) -> <init>
com.kbdunn.nimbus.web.event.ShareBlockModificationEvent$ShareBlockModificationListener -> com.kbdunn.nimbus.W:
com.kbdunn.nimbus.web.files.ClassicUploadField -> com.kbdunn.nimbus.X:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.api.async.UploadActionProcessor controller -> bF
    com.kbdunn.nimbus.api.async.VaadinUploadOperation operation -> bG
    com.vaadin.ui.Upload upload -> bH
    void <init>(com.kbdunn.nimbus.api.async.UploadActionProcessor) -> <init>
    void buildUploadField() -> aO
    void refresh() -> refresh
com.kbdunn.nimbus.web.files.DragAndDropUploadField -> com.kbdunn.nimbus.Y:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.api.async.UploadActionProcessor controller -> bF
    com.kbdunn.nimbus.web.files.DragAndDropUploadField$NDragAndDropWrapper dropWrapper -> bI
    void <init>(com.kbdunn.nimbus.api.async.UploadActionProcessor) -> <init>
    void buildLayout() -> V
    com.kbdunn.nimbus.api.async.UploadActionProcessor access$000(com.kbdunn.nimbus.web.files.DragAndDropUploadField) -> a
com.kbdunn.nimbus.web.files.DragAndDropUploadField$NDragAndDropWrapper -> com.kbdunn.nimbus.Z:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.files.DragAndDropUploadField this$0 -> bJ
    void <init>(com.kbdunn.nimbus.web.files.DragAndDropUploadField,com.vaadin.ui.Component) -> <init>
    void drop(com.vaadin.event.dd.DragAndDropEvent) -> drop
    com.vaadin.event.dd.acceptcriteria.AcceptCriterion getAcceptCriterion() -> getAcceptCriterion
com.kbdunn.nimbus.web.files.FileManagerController -> com.kbdunn.nimbus.aa:
    org.apache.log4j.Logger log -> f
    com.kbdunn.nimbus.web.files.FileManagerUri uri -> bK
    com.kbdunn.nimbus.web.files.FileView fileView -> bL
    com.kbdunn.nimbus.web.share.ShareView shareView -> bM
    com.kbdunn.nimbus.web.files.action.EditTextFileAction editAction -> bN
    com.kbdunn.nimbus.web.files.action.CreateFileAction createFileAction -> bO
    com.kbdunn.nimbus.web.files.action.CreateFolderAction createFolderAction -> bP
    com.kbdunn.nimbus.web.files.action.RenameAction renameAction -> bQ
    com.kbdunn.nimbus.web.files.action.CopyAction copyAction -> bR
    com.kbdunn.nimbus.web.files.action.MoveAction moveAction -> bS
    com.kbdunn.nimbus.web.files.action.DeleteAction deleteAction -> bT
    com.kbdunn.nimbus.web.files.action.DownloadAction downloadAction -> bU
    com.kbdunn.nimbus.web.files.action.UploadAction uploadAction -> bV
    java.util.List actions -> actions
    java.util.List tempConflictSources -> bW
    com.kbdunn.nimbus.api.model.NimbusFile tempConflictTargetFolder -> bX
    boolean conflictsBeingResolved -> bY
    boolean deleteAfterCopy -> bZ
    void <init>() -> <init>
    com.kbdunn.nimbus.web.files.FileManagerUri getUri() -> aP
    void refreshActions() -> aQ
    java.util.List getActions() -> aR
    void handle(com.kbdunn.nimbus.web.files.action.AbstractFileAction) -> a
    java.util.List getUserStorageDevices() -> aS
    com.kbdunn.nimbus.web.files.FileView getFileManagerView() -> aT
    com.kbdunn.nimbus.api.model.FileContainer getCurrentFileContainer() -> ad
    com.kbdunn.nimbus.api.model.FileContainer getCurrentRootFileContainer() -> aU
    void navigateToDirectory(com.kbdunn.nimbus.api.model.NimbusFile) -> h
    void navigateToFileContainer(com.kbdunn.nimbus.api.model.FileContainer) -> e
    boolean currentUserIsBlockOwner() -> aV
    void handleUri(java.lang.String) -> j
    void refreshView() -> aW
    java.util.List getSelectedFiles() -> ai
    com.kbdunn.nimbus.api.model.FileContainer getRootContainer() -> G
    boolean filesAreSelected() -> aX
    boolean requireSelectedFiles() -> aY
    boolean requireCopyTarget() -> aZ
    int getCurrentContainerRecursiveContentCount() -> ba
    long getCurrentContainerContentSize() -> bb
    java.lang.String getContainerShortDescription() -> bc
    void handleOpenTextEditor() -> bd
    boolean canOpenTextFile(com.kbdunn.nimbus.api.model.NimbusFile) -> i
    void handleOpenTextEditor(com.kbdunn.nimbus.api.model.NimbusFile) -> j
    void handleCreateFile() -> be
    boolean validateFileName(java.lang.String) -> k
    void processCreateFile(java.lang.String) -> l
    void handleCreateFolder() -> bf
    boolean validateFolderName(java.lang.String) -> m
    void processCreateFolder(java.lang.String) -> n
    void handleRename() -> bg
    void processRename(com.kbdunn.nimbus.api.model.NimbusFile,java.lang.String) -> a
    void handleCopy() -> bh
    void handleMove() -> bi
    boolean validateCopyLocation(java.util.List,com.kbdunn.nimbus.api.model.NimbusFile) -> a
    void processCopy(java.util.List,com.kbdunn.nimbus.api.model.NimbusFile) -> b
    void processMove(java.util.List,com.kbdunn.nimbus.api.model.NimbusFile) -> c
    void processCopyOrMove(java.util.List,com.kbdunn.nimbus.api.model.NimbusFile,boolean) -> a
    void handleDelete() -> bj
    void processDelete(java.util.List) -> a
    void handleDownload() -> bk
    boolean userCanUploadFile(com.kbdunn.nimbus.api.model.NimbusFile) -> userCanUploadFile
    com.kbdunn.nimbus.api.model.NimbusFile getUploadDirectory() -> getUploadDirectory
    void handleUpload() -> handleUpload
    void processFinishedMultiUpload() -> processFinishedMultiUpload
    void processFinishedUpload(com.kbdunn.nimbus.api.model.NimbusFile,boolean) -> processFinishedUpload
    boolean conflictsBeingResolved() -> bl
    java.util.List getConflicts(java.util.List,com.kbdunn.nimbus.api.model.NimbusFile) -> d
    void resolveConflicts(java.util.List,java.util.List,com.kbdunn.nimbus.api.model.NimbusFile,boolean) -> a
    void conflictsResolved(java.util.List) -> b
    com.kbdunn.nimbus.web.files.FileManagerUri access$000(com.kbdunn.nimbus.web.files.FileManagerController) -> a
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.files.FileManagerController$1 -> com.kbdunn.nimbus.ab:
    com.kbdunn.nimbus.api.model.NimbusFile val$targetFolder -> ca
    java.util.List val$sources -> cb
    com.kbdunn.nimbus.web.files.FileManagerController this$0 -> cc
    void <init>(com.kbdunn.nimbus.web.files.FileManagerController,com.kbdunn.nimbus.api.model.NimbusFile,java.util.List) -> <init>
    void operationFinished(com.kbdunn.nimbus.api.async.AsyncOperation) -> operationFinished
com.kbdunn.nimbus.web.files.FileManagerController$1$1 -> com.kbdunn.nimbus.ac:
    com.kbdunn.nimbus.web.files.FileManagerController$1 this$1 -> cd
    void <init>(com.kbdunn.nimbus.web.files.FileManagerController$1) -> <init>
    void run() -> run
com.kbdunn.nimbus.web.files.FileManagerLayout -> com.kbdunn.nimbus.ad:
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger log -> f
    com.kbdunn.nimbus.web.files.FileManagerController controller -> ce
    com.kbdunn.nimbus.web.component.FileContainerComboBox driveSelect -> cf
    com.kbdunn.nimbus.web.component.FileTable fileTable -> cg
    com.kbdunn.nimbus.web.component.FolderTree folderTree -> ch
    com.kbdunn.nimbus.web.component.BreadCrumbs breadCrumbs -> ci
    com.kbdunn.nimbus.web.controlbar.FileControlBar controlBar -> cj
    com.kbdunn.nimbus.web.files.action.FileContextMenu contextMenu -> ck
    com.vaadin.ui.HorizontalLayout topRow -> cl
    com.vaadin.ui.HorizontalLayout browsers -> cm
    com.vaadin.ui.CssLayout spacer -> cn
    com.vaadin.ui.Panel folderPanel -> co
    com.vaadin.ui.Label containerDescLabel -> cp
    boolean layoutBuilt -> bB
    void <init>(com.kbdunn.nimbus.web.files.FileManagerController) -> <init>
    void refresh() -> refresh
    void setFolderBrowserVisible(boolean) -> i
    void setDriveSelectVisible(boolean) -> j
    com.kbdunn.nimbus.web.component.FileTable getFileTable() -> bm
    com.kbdunn.nimbus.web.component.FolderTree getFolderTree() -> bn
    com.kbdunn.nimbus.web.component.BreadCrumbs getBreadCrumbs() -> bo
    com.vaadin.ui.Label getContainerDescriptionLabel() -> bp
    java.util.List getSelectedFiles() -> ai
    void buildLayout() -> V
    void initialize() -> initialize
    void itemClick(com.vaadin.event.ItemClickEvent) -> itemClick
    void refreshDriveSelector() -> bq
    void valueChange(com.vaadin.data.Property$ValueChangeEvent) -> valueChange
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.files.FileManagerUri -> com.kbdunn.nimbus.ae:
    org.apache.log4j.Logger log -> f
    java.lang.String STORAGE_DEVICE_PREFIX -> cq
    com.kbdunn.nimbus.api.server.FileService fileService -> s
    com.kbdunn.nimbus.api.server.FileShareService shareService -> ad
    java.lang.String uri -> uri
    com.kbdunn.nimbus.web.files.FileManagerUri$Subject subject -> cr
    com.kbdunn.nimbus.api.model.StorageDevice storageDevice -> cs
    com.kbdunn.nimbus.api.model.NimbusFile file -> G
    com.kbdunn.nimbus.api.model.ShareBlock shareBlock -> ct
    boolean isValid -> cu
    void <init>(com.kbdunn.nimbus.api.model.ShareBlockFile) -> <init>
    void <init>(com.kbdunn.nimbus.api.model.ShareBlock,com.kbdunn.nimbus.api.model.NimbusFile) -> <init>
    void <init>(com.kbdunn.nimbus.api.model.FileContainer) -> <init>
    void <init>(java.lang.String) -> <init>
    void compose() -> br
    void parse() -> parse
    boolean isValid() -> isValid
    java.lang.String getUri() -> getUri
    com.kbdunn.nimbus.web.files.FileManagerUri$Subject getSubject() -> bs
    com.kbdunn.nimbus.api.model.StorageDevice getStorageDevice() -> getStorageDevice
    com.kbdunn.nimbus.api.model.NimbusFile getFile() -> bt
    void setFile(com.kbdunn.nimbus.api.model.NimbusFile) -> k
    com.kbdunn.nimbus.api.model.ShareBlock getShareBlock() -> bu
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.files.FileManagerUri$Subject -> com.kbdunn.nimbus.af:
    com.kbdunn.nimbus.web.files.FileManagerUri$Subject FILES -> cv
    com.kbdunn.nimbus.web.files.FileManagerUri$Subject SHARE_BLOCK -> cw
    com.kbdunn.nimbus.web.files.FileManagerUri$Subject[] $VALUES -> cx
    com.kbdunn.nimbus.web.files.FileManagerUri$Subject[] values() -> bv
    com.kbdunn.nimbus.web.files.FileManagerUri$Subject valueOf(java.lang.String) -> o
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.files.FileView -> com.kbdunn.nimbus.ag:
    long serialVersionUID -> serialVersionUID
    java.lang.String NAME -> NAME
    void <init>(com.kbdunn.nimbus.web.files.FileManagerController) -> <init>
    com.kbdunn.nimbus.web.files.FileManagerController getFileController() -> w
    void enter(com.vaadin.navigator.ViewChangeListener$ViewChangeEvent) -> enter
com.kbdunn.nimbus.web.files.MoveFilesDropHandler -> com.kbdunn.nimbus.ah:
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger log -> f
    java.lang.Object[] droppableIds -> cy
    com.vaadin.ui.AbstractSelect dropTarget -> cz
    java.util.List sources -> sources
    com.kbdunn.nimbus.api.model.NimbusFile targetFolder -> cA
    void <init>(com.vaadin.ui.AbstractSelect) -> <init>
    void <init>(com.vaadin.ui.AbstractSelect,java.lang.Object[]) -> <init>
    void setDroppableIds(java.lang.Object[]) -> b
    void drop(com.vaadin.event.dd.DragAndDropEvent) -> drop
    void resolveConflicts(java.util.List) -> c
    void conflictsResolved(java.util.List) -> b
    com.vaadin.event.dd.acceptcriteria.AcceptCriterion getAcceptCriterion() -> getAcceptCriterion
    java.util.List access$000(com.kbdunn.nimbus.web.files.MoveFilesDropHandler) -> a
    com.kbdunn.nimbus.api.model.NimbusFile access$100(com.kbdunn.nimbus.web.files.MoveFilesDropHandler) -> b
    void access$200(com.kbdunn.nimbus.web.files.MoveFilesDropHandler,java.util.List) -> a
    org.apache.log4j.Logger access$300() -> bw
    com.vaadin.ui.AbstractSelect access$400(com.kbdunn.nimbus.web.files.MoveFilesDropHandler) -> c
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.files.MoveFilesDropHandler$1 -> com.kbdunn.nimbus.ai:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.popup.PopupWindow val$popup -> cB
    com.kbdunn.nimbus.web.component.FileTable val$dropSource -> cC
    com.kbdunn.nimbus.web.files.MoveFilesDropHandler this$0 -> cD
    void <init>(com.kbdunn.nimbus.web.files.MoveFilesDropHandler,com.kbdunn.nimbus.web.popup.PopupWindow,com.kbdunn.nimbus.web.component.FileTable) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.files.action.AbstractActionHandler -> com.kbdunn.nimbus.aj:
    java.util.List actions -> actions
    void <init>() -> <init>
    boolean registerAction(com.kbdunn.nimbus.web.files.action.AbstractFileAction) -> b
    boolean unregisterAction(com.kbdunn.nimbus.web.files.action.AbstractFileAction) -> c
    java.util.List getActions() -> aR
    com.kbdunn.nimbus.web.files.action.AbstractFileAction getAction(java.lang.Class) -> a
    boolean canProcess(com.kbdunn.nimbus.web.files.action.AbstractFileAction) -> d
    void handle(com.kbdunn.nimbus.web.files.action.AbstractFileAction) -> a
com.kbdunn.nimbus.web.files.action.AbstractFileAction -> com.kbdunn.nimbus.ak:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.files.action.AbstractActionHandler actionHandler -> cE
    com.vaadin.ui.Button button -> button
    com.kbdunn.nimbus.web.popup.PopupWindow popupWindow -> cF
    void <init>() -> <init>
    void <init>(com.kbdunn.nimbus.web.files.action.AbstractActionHandler) -> <init>
    void init() -> init
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome getIcon() -> bx
    java.lang.String getCaption() -> getCaption
    com.kbdunn.nimbus.web.files.action.AbstractFileAction$Category getCategory() -> by
    com.vaadin.ui.AbstractComponentContainer getPopupLayout() -> bz
    void refresh() -> refresh
    void doAction() -> bA
    void displayError(com.vaadin.server.AbstractErrorMessage) -> a
    com.kbdunn.nimbus.web.files.action.AbstractActionHandler getActionHandler() -> bB
    com.vaadin.ui.Button getButton() -> getButton
    com.kbdunn.nimbus.web.popup.PopupWindow getPopupWindow() -> bC
    com.vaadin.server.Resource getIcon() -> getIcon
    com.kbdunn.nimbus.web.files.action.AbstractActionHandler access$000(com.kbdunn.nimbus.web.files.action.AbstractFileAction) -> e
com.kbdunn.nimbus.web.files.action.AbstractFileAction$1 -> com.kbdunn.nimbus.al:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.files.action.AbstractFileAction val$me -> cG
    com.kbdunn.nimbus.web.files.action.AbstractFileAction this$0 -> cH
    void <init>(com.kbdunn.nimbus.web.files.action.AbstractFileAction,com.kbdunn.nimbus.web.files.action.AbstractFileAction) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.files.action.AbstractFileAction$2 -> com.kbdunn.nimbus.am:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.files.action.AbstractFileAction this$0 -> cH
    void <init>(com.kbdunn.nimbus.web.files.action.AbstractFileAction) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.files.action.AbstractFileAction$Category -> com.kbdunn.nimbus.an:
    com.kbdunn.nimbus.web.files.action.AbstractFileAction$Category VIEW_EDIT -> cI
    com.kbdunn.nimbus.web.files.action.AbstractFileAction$Category MANAGE -> cJ
    com.kbdunn.nimbus.web.files.action.AbstractFileAction$Category TRANSFER -> cK
    java.lang.String description -> description
    com.kbdunn.nimbus.web.files.action.AbstractFileAction$Category[] $VALUES -> cL
    com.kbdunn.nimbus.web.files.action.AbstractFileAction$Category[] values() -> bD
    com.kbdunn.nimbus.web.files.action.AbstractFileAction$Category valueOf(java.lang.String) -> p
    void <init>(java.lang.String,int,java.lang.String) -> <init>
    java.lang.String getDescription() -> getDescription
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.files.action.CopyAction -> com.kbdunn.nimbus.ao:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.component.FolderTree targetFolderTree -> cM
    com.vaadin.ui.VerticalLayout popupLayout -> cN
    java.util.List sources -> sources
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome ICON -> cO
    java.lang.String CAPTION -> cP
    void <init>(com.kbdunn.nimbus.web.files.action.AbstractActionHandler) -> <init>
    void setCopySources(java.util.List) -> d
    void buildLayout() -> V
    boolean canDoAction() -> bE
    void doAction() -> bA
    void displayError(com.vaadin.server.AbstractErrorMessage) -> a
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome getIcon() -> bx
    java.lang.String getCaption() -> getCaption
    void refresh() -> refresh
    com.vaadin.ui.AbstractComponentContainer getPopupLayout() -> bz
    com.kbdunn.nimbus.web.files.action.AbstractFileAction$Category getCategory() -> by
    com.vaadin.server.Resource getIcon() -> getIcon
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.files.action.CopyActionProcessor -> com.kbdunn.nimbus.ap:
    void handleCopy() -> bh
    void processCopy(java.util.List,com.kbdunn.nimbus.api.model.NimbusFile) -> b
    com.kbdunn.nimbus.api.model.FileContainer getRootContainer() -> G
com.kbdunn.nimbus.web.files.action.CreateFileAction -> com.kbdunn.nimbus.aq:
    long serialVersionUID -> serialVersionUID
    void <init>(com.kbdunn.nimbus.web.files.action.AbstractActionHandler) -> <init>
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome getIcon() -> bx
    java.lang.String getCaption() -> getCaption
    com.kbdunn.nimbus.web.files.action.AbstractFileAction$Category getCategory() -> by
    void doAction() -> bA
    com.vaadin.server.Resource getIcon() -> getIcon
com.kbdunn.nimbus.web.files.action.CreateFileActionProcessor -> com.kbdunn.nimbus.ar:
    void handleCreateFile() -> be
    void processCreateFile(java.lang.String) -> l
com.kbdunn.nimbus.web.files.action.CreateFolderAction -> com.kbdunn.nimbus.as:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome ICON -> cO
    java.lang.String CAPTION -> cP
    com.vaadin.ui.TextField folderName -> cQ
    com.vaadin.ui.HorizontalLayout popupLayout -> cR
    void <init>(com.kbdunn.nimbus.web.files.action.AbstractActionHandler) -> <init>
    void buildLayout() -> V
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome getIcon() -> bx
    java.lang.String getCaption() -> getCaption
    void refresh() -> refresh
    void doAction() -> bA
    void displayError(com.vaadin.server.AbstractErrorMessage) -> a
    com.vaadin.ui.AbstractComponentContainer getPopupLayout() -> bz
    com.kbdunn.nimbus.web.files.action.AbstractFileAction$Category getCategory() -> by
    com.vaadin.server.Resource getIcon() -> getIcon
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.files.action.CreateFolderActionProcessor -> com.kbdunn.nimbus.at:
    void handleCreateFolder() -> bf
    void processCreateFolder(java.lang.String) -> n
com.kbdunn.nimbus.web.files.action.DeleteAction -> com.kbdunn.nimbus.au:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome ICON -> cO
    java.lang.String CAPTION -> cP
    java.util.List targetFiles -> cS
    com.vaadin.ui.VerticalLayout popupLayout -> cN
    void <init>(com.kbdunn.nimbus.web.files.action.AbstractActionHandler) -> <init>
    void setTargetFiles(java.util.List) -> e
    java.lang.String getDescription() -> getDescription
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome getIcon() -> bx
    java.lang.String getCaption() -> getCaption
    com.vaadin.ui.AbstractComponentContainer getPopupLayout() -> bz
    void refresh() -> refresh
    void doAction() -> bA
    void displayError(com.vaadin.server.AbstractErrorMessage) -> a
    com.kbdunn.nimbus.web.files.action.AbstractFileAction$Category getCategory() -> by
    com.vaadin.server.Resource getIcon() -> getIcon
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.files.action.DeleteActionProcessor -> com.kbdunn.nimbus.av:
    void handleDelete() -> bj
    void processDelete(java.util.List) -> a
com.kbdunn.nimbus.web.files.action.DownloadAction -> com.kbdunn.nimbus.aw:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome ICON -> cO
    java.lang.String CAPTION -> cP
    com.kbdunn.nimbus.api.model.NimbusFile targetFile -> cT
    com.vaadin.ui.VerticalLayout popupLayout -> cN
    com.vaadin.ui.Label info -> cU
    com.vaadin.ui.Button dl -> cV
    com.vaadin.server.FileDownloader fileDownloader -> cW
    void <init>(com.kbdunn.nimbus.web.files.action.AbstractActionHandler) -> <init>
    void <init>(com.kbdunn.nimbus.api.model.NimbusFile) -> <init>
    void buildLayout() -> V
    void setTargetFile(com.kbdunn.nimbus.api.model.NimbusFile) -> l
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome getIcon() -> bx
    java.lang.String getCaption() -> getCaption
    com.vaadin.ui.AbstractComponentContainer getPopupLayout() -> bz
    void refresh() -> refresh
    void doAction() -> bA
    void displayError(com.vaadin.server.AbstractErrorMessage) -> a
    com.kbdunn.nimbus.web.files.action.AbstractFileAction$Category getCategory() -> by
    com.vaadin.server.Resource getIcon() -> getIcon
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.files.action.DownloadActionProcessor -> com.kbdunn.nimbus.ax:
    void handleDownload() -> bk
com.kbdunn.nimbus.web.files.action.EditTextFileAction -> com.kbdunn.nimbus.ay:
    long serialVersionUID -> serialVersionUID
    void <init>(com.kbdunn.nimbus.web.files.action.AbstractActionHandler) -> <init>
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome getIcon() -> bx
    java.lang.String getCaption() -> getCaption
    com.kbdunn.nimbus.web.files.action.AbstractFileAction$Category getCategory() -> by
    void editTextFile(com.kbdunn.nimbus.api.model.NimbusFile) -> m
    com.vaadin.ui.AbstractComponentContainer getPopupLayout() -> bz
    void refresh() -> refresh
    void doAction() -> bA
    void displayError(com.vaadin.server.AbstractErrorMessage) -> a
    com.vaadin.server.Resource getIcon() -> getIcon
com.kbdunn.nimbus.web.files.action.EditTextFileActionProcessor -> com.kbdunn.nimbus.az:
    void handleOpenTextEditor() -> bd
    void handleOpenTextEditor(com.kbdunn.nimbus.api.model.NimbusFile) -> j
com.kbdunn.nimbus.web.files.action.FileContextMenu -> com.kbdunn.nimbus.aA:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.files.FileManagerController handler -> ap
    void <init>(com.kbdunn.nimbus.web.files.FileManagerController) -> <init>
    com.vaadin.event.Action[] getActions(java.lang.Object,java.lang.Object) -> getActions
    void handleAction(com.vaadin.event.Action,java.lang.Object,java.lang.Object) -> handleAction
com.kbdunn.nimbus.web.files.action.MoveAction -> com.kbdunn.nimbus.aB:
    long serialVersionUID -> serialVersionUID
    void <init>(com.kbdunn.nimbus.web.files.action.AbstractActionHandler) -> <init>
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome getIcon() -> bx
    java.lang.String getCaption() -> getCaption
    void doAction() -> bA
    com.vaadin.server.Resource getIcon() -> getIcon
com.kbdunn.nimbus.web.files.action.MoveActionProcessor -> com.kbdunn.nimbus.aC:
    void handleMove() -> bi
    void processMove(java.util.List,com.kbdunn.nimbus.api.model.NimbusFile) -> c
    com.kbdunn.nimbus.api.model.FileContainer getRootContainer() -> G
com.kbdunn.nimbus.web.files.action.RenameAction -> com.kbdunn.nimbus.aD:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome ICON -> cO
    java.lang.String CAPTION -> cP
    com.kbdunn.nimbus.api.model.NimbusFile targetFile -> cT
    com.vaadin.ui.VerticalLayout popupLayout -> cN
    com.vaadin.ui.TextField rename -> cX
    void <init>(com.kbdunn.nimbus.web.files.action.AbstractActionHandler) -> <init>
    void buildLayout() -> V
    void setTargetFile(com.kbdunn.nimbus.api.model.NimbusFile) -> l
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome getIcon() -> bx
    java.lang.String getCaption() -> getCaption
    com.vaadin.ui.AbstractComponentContainer getPopupLayout() -> bz
    void refresh() -> refresh
    void doAction() -> bA
    void displayError(com.vaadin.server.AbstractErrorMessage) -> a
    com.kbdunn.nimbus.web.files.action.AbstractFileAction$Category getCategory() -> by
    com.vaadin.server.Resource getIcon() -> getIcon
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.files.action.RenameActionProcessor -> com.kbdunn.nimbus.aE:
    void handleRename() -> bg
    void processRename(com.kbdunn.nimbus.api.model.NimbusFile,java.lang.String) -> a
com.kbdunn.nimbus.web.files.action.ResolveConflictsDialog -> com.kbdunn.nimbus.aF:
    long serialVersionUID -> serialVersionUID
    java.util.List listeners -> cY
    java.util.List conflicts -> cZ
    com.kbdunn.nimbus.web.files.action.ResolveConflictsDialog$FileDisplay sourceDisplay -> da
    com.kbdunn.nimbus.web.files.action.ResolveConflictsDialog$FileDisplay targetDisplay -> db
    com.kbdunn.nimbus.web.files.action.ResolveConflictsDialog$CopyDisplay copyDisplay -> dc
    com.vaadin.ui.CheckBox ubiquity -> dd
    com.kbdunn.nimbus.web.popup.PopupWindow popup -> de
    void <init>(java.util.List) -> <init>
    void showDialog() -> bF
    void buildLayout() -> V
    void displayConflict(int) -> b
    void resolveAll(int,com.kbdunn.nimbus.api.model.FileConflict$Resolution) -> a
    void addResolutionListener(com.kbdunn.nimbus.web.interfaces.ConflictResolver$ResolutionListener) -> a
    void removeResolutionListener(com.kbdunn.nimbus.web.interfaces.ConflictResolver$ResolutionListener) -> b
    void fireResolutionEvent() -> bG
    java.util.List access$000(com.kbdunn.nimbus.web.files.action.ResolveConflictsDialog) -> a
    com.vaadin.ui.CheckBox access$100(com.kbdunn.nimbus.web.files.action.ResolveConflictsDialog) -> b
    void access$200(com.kbdunn.nimbus.web.files.action.ResolveConflictsDialog,int,com.kbdunn.nimbus.api.model.FileConflict$Resolution) -> a
    void access$300(com.kbdunn.nimbus.web.files.action.ResolveConflictsDialog,int) -> a
com.kbdunn.nimbus.web.files.action.ResolveConflictsDialog$CopyDisplay -> com.kbdunn.nimbus.aG:
    long serialVersionUID -> serialVersionUID
    int currentConflict -> df
    com.vaadin.ui.Label newFile -> dg
    com.kbdunn.nimbus.web.files.action.ResolveConflictsDialog this$0 -> dh
    void <init>(com.kbdunn.nimbus.web.files.action.ResolveConflictsDialog) -> <init>
    void setCurrentConflict(int) -> c
    void refresh() -> refresh
    void layoutClick(com.vaadin.event.LayoutEvents$LayoutClickEvent) -> layoutClick
com.kbdunn.nimbus.web.files.action.ResolveConflictsDialog$FileDisplay -> com.kbdunn.nimbus.aH:
    long serialVersionUID -> serialVersionUID
    java.lang.String SOURCE -> di
    java.lang.String TARGET -> dj
    int currentConflict -> df
    java.lang.String type -> type
    com.vaadin.ui.VerticalLayout details -> dk
    com.vaadin.ui.Label icon -> dl
    com.vaadin.ui.Label fileName -> dm
    com.vaadin.ui.Label filePath -> dn
    com.vaadin.ui.Label fileSize -> do
    com.kbdunn.nimbus.web.files.action.ResolveConflictsDialog this$0 -> dh
    void <init>(com.kbdunn.nimbus.web.files.action.ResolveConflictsDialog,java.lang.String) -> <init>
    void setCurrentConflict(int) -> c
    void refresh() -> refresh
    void layoutClick(com.vaadin.event.LayoutEvents$LayoutClickEvent) -> layoutClick
com.kbdunn.nimbus.web.files.action.UploadAction -> com.kbdunn.nimbus.aI:
    long serialVersionUID -> serialVersionUID
    com.vaadin.ui.VerticalLayout popupLayout -> cN
    com.vaadin.ui.TabSheet content -> dp
    com.kbdunn.nimbus.web.files.DragAndDropUploadField ddupload -> dq
    com.vaadin.ui.VerticalLayout classicLayout -> dr
    com.vaadin.ui.Button addUpload -> ds
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome ICON -> cO
    java.lang.String CAPTION -> cP
    void <init>(com.kbdunn.nimbus.web.files.action.AbstractActionHandler) -> <init>
    void buildLayout() -> V
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome getIcon() -> bx
    java.lang.String getCaption() -> getCaption
    com.vaadin.ui.AbstractComponentContainer getPopupLayout() -> bz
    void refresh() -> refresh
    void doAction() -> bA
    void displayError(com.vaadin.server.AbstractErrorMessage) -> a
    com.kbdunn.nimbus.web.files.action.AbstractFileAction$Category getCategory() -> by
    com.vaadin.server.Resource getIcon() -> getIcon
    com.kbdunn.nimbus.web.files.DragAndDropUploadField access$000(com.kbdunn.nimbus.web.files.action.UploadAction) -> a
    com.vaadin.ui.TabSheet access$100(com.kbdunn.nimbus.web.files.action.UploadAction) -> b
    com.vaadin.ui.VerticalLayout access$200(com.kbdunn.nimbus.web.files.action.UploadAction) -> c
    com.vaadin.ui.Button access$300(com.kbdunn.nimbus.web.files.action.UploadAction) -> d
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.files.action.UploadAction$1 -> com.kbdunn.nimbus.aJ:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.files.action.UploadAction this$0 -> dt
    void <init>(com.kbdunn.nimbus.web.files.action.UploadAction) -> <init>
    void windowClose(com.vaadin.ui.Window$CloseEvent) -> windowClose
com.kbdunn.nimbus.web.files.action.UploadAction$2 -> com.kbdunn.nimbus.aK:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.files.action.UploadAction this$0 -> dt
    void <init>(com.kbdunn.nimbus.web.files.action.UploadAction) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.files.action.ViewImagesAction -> com.kbdunn.nimbus.aL:
    long serialVersionUID -> serialVersionUID
    void <init>(com.kbdunn.nimbus.web.files.action.AbstractActionHandler) -> <init>
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome getIcon() -> bx
    java.lang.String getCaption() -> getCaption
    com.kbdunn.nimbus.web.files.action.AbstractFileAction$Category getCategory() -> by
    void viewImage(com.kbdunn.nimbus.api.model.NimbusFile) -> n
    com.vaadin.ui.AbstractComponentContainer getPopupLayout() -> bz
    void refresh() -> refresh
    void doAction() -> bA
    void displayError(com.vaadin.server.AbstractErrorMessage) -> a
    com.vaadin.server.Resource getIcon() -> getIcon
com.kbdunn.nimbus.web.files.action.ViewImagesActionProcessor -> com.kbdunn.nimbus.aM:
    void handleViewImages() -> bH
    void handleViewImage(com.kbdunn.nimbus.api.model.NimbusFile) -> o
com.kbdunn.nimbus.web.files.action.ZipDownloadButton -> com.kbdunn.nimbus.aN:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String,com.kbdunn.nimbus.api.model.NimbusFile,java.lang.String) -> <init>
    void <init>(java.lang.String,java.util.List,java.lang.String) -> <init>
    java.lang.String getCaption() -> getCaption
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome getIcon() -> bx
    com.vaadin.server.Resource getIcon() -> getIcon
com.kbdunn.nimbus.web.files.action.ZipDownloadButton$ZipStreamSource -> com.kbdunn.nimbus.aO:
    long serialVersionUID -> serialVersionUID
    java.io.InputStream is -> du
    com.kbdunn.nimbus.web.files.action.ZipDownloadButton this$0 -> dv
    void <init>(com.kbdunn.nimbus.web.files.action.ZipDownloadButton,java.io.InputStream) -> <init>
    java.io.InputStream getStream() -> getStream
com.kbdunn.nimbus.web.files.editor.TextEditorController -> com.kbdunn.nimbus.aP:
    org.apache.log4j.Logger log -> f
    com.kbdunn.nimbus.web.files.editor.TextEditorView view -> dw
    com.kbdunn.nimbus.api.model.ShareBlock shareBlock -> ct
    com.kbdunn.nimbus.api.model.NimbusFile file -> G
    void <init>() -> <init>
    void handleUri(java.lang.String) -> j
    void openFile() -> bI
    void refreshView() -> aW
    void saveFile() -> bJ
    java.lang.String getFileContents() -> bK
    boolean currentUserCanReadFile(com.kbdunn.nimbus.api.model.NimbusFile) -> p
    boolean currentUserCanEditFile(com.kbdunn.nimbus.api.model.NimbusFile) -> q
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.files.editor.TextEditorView -> com.kbdunn.nimbus.aQ:
    long serialVersionUID -> serialVersionUID
    java.lang.String NAME -> NAME
    com.kbdunn.nimbus.web.files.editor.TextEditorController controller -> dx
    com.vaadin.ui.HorizontalLayout controls -> dy
    com.vaadin.ui.TextField filename -> dz
    com.vaadin.ui.ComboBox syntax -> dA
    org.vaadin.aceeditor.AceEditor editor -> dB
    com.vaadin.ui.Button save -> dC
    boolean layoutBuilt -> bB
    void <init>(com.kbdunn.nimbus.web.files.editor.TextEditorController) -> <init>
    void enter(com.vaadin.navigator.ViewChangeListener$ViewChangeEvent) -> enter
    java.lang.String getFileName() -> getFileName
    void setFileName(java.lang.String) -> setFileName
    org.vaadin.aceeditor.AceMode getAceMode() -> bL
    void setAceMode(org.vaadin.aceeditor.AceMode) -> a
    java.lang.String getEditorContent() -> bM
    void setEditorContent(java.lang.String) -> q
    void setSaveEnabled(boolean) -> k
    void buildLayout() -> V
    com.vaadin.ui.ComboBox access$000(com.kbdunn.nimbus.web.files.editor.TextEditorView) -> a
    org.vaadin.aceeditor.AceEditor access$100(com.kbdunn.nimbus.web.files.editor.TextEditorView) -> b
    com.kbdunn.nimbus.web.files.editor.TextEditorController access$200(com.kbdunn.nimbus.web.files.editor.TextEditorView) -> c
com.kbdunn.nimbus.web.files.editor.TextEditorView$1 -> com.kbdunn.nimbus.aR:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.files.editor.TextEditorView this$0 -> dD
    void <init>(com.kbdunn.nimbus.web.files.editor.TextEditorView) -> <init>
    void valueChange(com.vaadin.data.Property$ValueChangeEvent) -> valueChange
com.kbdunn.nimbus.web.files.editor.TextEditorView$2 -> com.kbdunn.nimbus.aS:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.files.editor.TextEditorView this$0 -> dD
    void <init>(com.kbdunn.nimbus.web.files.editor.TextEditorView) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.files.editor.TextEditorView$3 -> com.kbdunn.nimbus.aT:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.files.editor.TextEditorView this$0 -> dD
    void <init>(com.kbdunn.nimbus.web.files.editor.TextEditorView) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.header.AboutPopup -> com.kbdunn.nimbus.aU:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.popup.PopupWindow popup -> de
    com.kbdunn.nimbus.web.header.NimbusLogo logo -> dE
    com.vaadin.ui.Label version -> dF
    com.vaadin.ui.Label desc -> dG
    com.vaadin.ui.Label link -> dH
    void <init>() -> <init>
    void open() -> open
    void close() -> close
com.kbdunn.nimbus.web.header.Authenticator -> com.kbdunn.nimbus.aV:
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger log -> f
    com.kbdunn.nimbus.web.header.LoginDialog loginDialog -> dI
    void <init>(com.kbdunn.nimbus.web.header.LoginDialog) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.header.HeaderPanel -> com.kbdunn.nimbus.aW:
    long serialVersionUID -> serialVersionUID
    java.lang.String[][] navLinkToViewMap -> dJ
    com.vaadin.ui.CssLayout content -> dK
    com.vaadin.ui.CssLayout leftLayout -> dL
    com.vaadin.ui.CssLayout rightLayout -> dM
    com.vaadin.ui.CssLayout navigation -> dN
    com.kbdunn.nimbus.api.model.NimbusUser user -> dO
    com.kbdunn.nimbus.web.header.MediaPlayerPanel playerPanel -> dP
    com.kbdunn.nimbus.web.header.AboutPopup aboutPopup -> dQ
    void <init>() -> <init>
    com.kbdunn.nimbus.web.header.MediaPlayerPanel getPlayerPanel() -> bN
    void refresh() -> refresh
    void buildLayout() -> V
    void showLoggedInHeader() -> bO
    void showLoggedOutHeader() -> bP
    void logout() -> logout
    com.kbdunn.nimbus.web.header.AboutPopup access$000(com.kbdunn.nimbus.web.header.HeaderPanel) -> a
    void access$100(com.kbdunn.nimbus.web.header.HeaderPanel) -> b
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.header.HeaderPanel$1 -> com.kbdunn.nimbus.aX:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.header.HeaderPanel this$0 -> dR
    void <init>(com.kbdunn.nimbus.web.header.HeaderPanel) -> <init>
    void menuSelected(com.vaadin.ui.MenuBar$MenuItem) -> menuSelected
com.kbdunn.nimbus.web.header.HeaderPanel$2 -> com.kbdunn.nimbus.aY:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.header.HeaderPanel this$0 -> dR
    void <init>(com.kbdunn.nimbus.web.header.HeaderPanel) -> <init>
    void menuSelected(com.vaadin.ui.MenuBar$MenuItem) -> menuSelected
com.kbdunn.nimbus.web.header.HeaderPanel$3 -> com.kbdunn.nimbus.aZ:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.header.HeaderPanel this$0 -> dR
    void <init>(com.kbdunn.nimbus.web.header.HeaderPanel) -> <init>
    void menuSelected(com.vaadin.ui.MenuBar$MenuItem) -> menuSelected
com.kbdunn.nimbus.web.header.HeaderPanel$4 -> com.kbdunn.nimbus.ba:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.header.HeaderPanel this$0 -> dR
    void <init>(com.kbdunn.nimbus.web.header.HeaderPanel) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.header.LoginDialog -> com.kbdunn.nimbus.bb:
    long serialVersionUID -> serialVersionUID
    com.vaadin.ui.TextField username -> dS
    com.vaadin.ui.PasswordField password -> dT
    com.kbdunn.nimbus.web.popup.PopupWindow popup -> de
    java.lang.String caption -> caption
    void <init>() -> <init>
    void showDialog() -> bF
    void close() -> close
    void buildLayout() -> V
    boolean isValid() -> isValid
    java.lang.String getUsername() -> getUsername
    java.lang.String getPassword() -> getPassword
com.kbdunn.nimbus.web.header.MediaPlayer -> com.kbdunn.nimbus.bc:
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger log -> f
    boolean repeatOne -> dU
    boolean repeatAll -> dV
    boolean shuffle -> dW
    com.kbdunn.nimbus.web.header.MediaPlayerPanel playerPanel -> dP
    com.kbdunn.nimbus.web.media.MediaController mediaBrowser -> dX
    java.util.List currentPlayList -> dY
    com.kbdunn.nimbus.api.model.NimbusFile playing -> dZ
    java.lang.Integer firstPlayedIndex -> ea
    void <init>() -> <init>
    void setPlayerPanel(com.kbdunn.nimbus.web.header.MediaPlayerPanel) -> a
    void setMediaBrowser(com.kbdunn.nimbus.web.media.MediaController) -> a
    boolean isRepeatOne() -> bQ
    void setRepeatOne(boolean) -> l
    boolean isRepeatAll() -> bR
    void setRepeatAll(boolean) -> m
    boolean isShuffle() -> bS
    void setShuffle(boolean) -> n
    com.kbdunn.nimbus.api.model.NimbusFile getPlaying() -> bT
    void play(com.kbdunn.nimbus.api.model.NimbusFile) -> r
    void stop() -> stop
    void playFirst(com.kbdunn.nimbus.api.model.NimbusFile) -> s
    void playNext() -> bU
    void playPrevious() -> bV
    void refreshCurrentPlaylist() -> bW
    void playbackEnded(com.kbdunn.vaadin.addons.mediaelement.MediaElementPlayer) -> playbackEnded
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.header.MediaPlayerPanel -> com.kbdunn.nimbus.bd:
    long serialVersionUID -> serialVersionUID
    com.vaadin.ui.Button toggleButton -> eb
    com.kbdunn.nimbus.web.header.MediaPlayer mediaPlayer -> ec
    com.vaadin.ui.HorizontalLayout content -> Z
    com.vaadin.ui.VerticalLayout playerContent -> ed
    com.vaadin.ui.HorizontalLayout controlLayout -> ee
    com.vaadin.ui.Label nowPlaying -> ef
    com.kbdunn.vaadin.addons.mediaelement.MediaElementPlayer audioPlayer -> eg
    boolean isToggled -> eh
    void <init>(com.kbdunn.nimbus.web.header.MediaPlayer) -> <init>
    com.kbdunn.vaadin.addons.mediaelement.MediaElementPlayer getMejsPlayer() -> bX
    com.kbdunn.nimbus.web.header.MediaPlayer getMediaController() -> s
    com.vaadin.ui.Button getToggleButton() -> bY
    void buildLayout() -> V
    void buildControlLayout() -> bZ
    void initializeAudioPlayer() -> ca
    void setNowPlayingInfo() -> cb
    void initializeToggleButton() -> cc
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
    com.kbdunn.nimbus.web.header.MediaPlayer access$000(com.kbdunn.nimbus.web.header.MediaPlayerPanel) -> b
com.kbdunn.nimbus.web.header.MediaPlayerPanel$1 -> com.kbdunn.nimbus.be:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.header.MediaPlayerPanel this$0 -> ei
    void <init>(com.kbdunn.nimbus.web.header.MediaPlayerPanel) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.header.MediaPlayerPanel$2 -> com.kbdunn.nimbus.bf:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.header.MediaPlayerPanel this$0 -> ei
    void <init>(com.kbdunn.nimbus.web.header.MediaPlayerPanel) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.header.MediaPlayerPanel$3 -> com.kbdunn.nimbus.bg:
    long serialVersionUID -> serialVersionUID
    com.vaadin.ui.Button val$repeat -> ej
    com.kbdunn.nimbus.web.header.MediaPlayerPanel this$0 -> ei
    void <init>(com.kbdunn.nimbus.web.header.MediaPlayerPanel,com.vaadin.ui.Button) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.header.MediaPlayerPanel$4 -> com.kbdunn.nimbus.bh:
    long serialVersionUID -> serialVersionUID
    com.vaadin.ui.Button val$shuffle -> ek
    com.kbdunn.nimbus.web.header.MediaPlayerPanel this$0 -> ei
    void <init>(com.kbdunn.nimbus.web.header.MediaPlayerPanel,com.vaadin.ui.Button) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.header.NimbusLogo -> com.kbdunn.nimbus.bi:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void setSizeLg() -> cd
com.kbdunn.nimbus.web.interfaces.ConflictResolver -> com.kbdunn.nimbus.bj:
    void addResolutionListener(com.kbdunn.nimbus.web.interfaces.ConflictResolver$ResolutionListener) -> a
    void removeResolutionListener(com.kbdunn.nimbus.web.interfaces.ConflictResolver$ResolutionListener) -> b
    void fireResolutionEvent() -> bG
com.kbdunn.nimbus.web.interfaces.ConflictResolver$ResolutionListener -> com.kbdunn.nimbus.bk:
    void conflictsResolved(java.util.List) -> b
com.kbdunn.nimbus.web.interfaces.NimbusUri -> com.kbdunn.nimbus.bl:
    java.lang.String getUri() -> getUri
    boolean isValid() -> isValid
com.kbdunn.nimbus.web.interfaces.Refreshable -> com.kbdunn.nimbus.bm:
    void refresh() -> refresh
com.kbdunn.nimbus.web.landing.LandingView -> com.kbdunn.nimbus.bn:
    long serialVersionUID -> serialVersionUID
    java.lang.String NAME -> NAME
    void <init>() -> <init>
    void enter(com.vaadin.navigator.ViewChangeListener$ViewChangeEvent) -> enter
com.kbdunn.nimbus.web.landing.WelcomeView -> com.kbdunn.nimbus.bo:
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger log -> f
    java.lang.String UN_PATTERN -> el
    java.lang.String NAME -> NAME
    com.vaadin.ui.VerticalLayout content -> em
    com.vaadin.ui.TextField name -> en
    com.vaadin.ui.TextField email -> eo
    com.vaadin.ui.PasswordField password -> dT
    com.vaadin.ui.PasswordField confirmPassword -> ep
    com.vaadin.ui.Button submit -> eq
    void <init>() -> <init>
    void buildContent() -> ce
    void showLogin() -> cf
    void enter(com.vaadin.navigator.ViewChangeListener$ViewChangeEvent) -> enter
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
    boolean checkValidation(com.vaadin.ui.AbstractTextField) -> a
    org.apache.log4j.Logger access$000() -> cg
    com.vaadin.ui.TextField access$100(com.kbdunn.nimbus.web.landing.WelcomeView) -> a
    com.vaadin.ui.TextField access$200(com.kbdunn.nimbus.web.landing.WelcomeView) -> b
    com.vaadin.ui.PasswordField access$300(com.kbdunn.nimbus.web.landing.WelcomeView) -> c
    void access$400(com.kbdunn.nimbus.web.landing.WelcomeView) -> d
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.landing.WelcomeView$1 -> com.kbdunn.nimbus.bp:
    com.kbdunn.nimbus.web.landing.WelcomeView this$0 -> er
    void <init>(com.kbdunn.nimbus.web.landing.WelcomeView) -> <init>
    void run() -> run
com.kbdunn.nimbus.web.landing.WelcomeView$1$1 -> com.kbdunn.nimbus.bq:
    com.kbdunn.nimbus.api.model.NimbusUser val$user -> es
    com.kbdunn.nimbus.web.landing.WelcomeView$1 this$1 -> et
    void <init>(com.kbdunn.nimbus.web.landing.WelcomeView$1,com.kbdunn.nimbus.api.model.NimbusUser) -> <init>
    void run() -> run
com.kbdunn.nimbus.web.landing.WelcomeView$PasswordValidator -> com.kbdunn.nimbus.br:
    long serialVersionUID -> serialVersionUID
    com.vaadin.ui.PasswordField comparison -> eu
    com.kbdunn.nimbus.web.landing.WelcomeView this$0 -> er
    void <init>(com.kbdunn.nimbus.web.landing.WelcomeView,com.vaadin.ui.PasswordField) -> <init>
    void validate(java.lang.Object) -> validate
com.kbdunn.nimbus.web.media.MediaBrowserPanel -> com.kbdunn.nimbus.bs:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.media.MediaController controller -> aq
    com.vaadin.ui.HorizontalSplitPanel browserContent -> ev
    com.kbdunn.nimbus.web.media.MediaGroupTable coarseBrowse -> ew
    com.vaadin.ui.Table fineBrowse -> ex
    void <init>(com.kbdunn.nimbus.web.media.MediaController) -> <init>
    void buildLayout() -> V
    void setItemTable(com.vaadin.ui.Table) -> a
    void refreshItemTable() -> ch
    void refreshGroupTable() -> ci
    void displayGroupSelector(boolean) -> o
    com.kbdunn.nimbus.web.media.MediaGroupTable getGroupSelectTable() -> cj
    com.vaadin.ui.Table getItemSelectTable() -> ck
com.kbdunn.nimbus.web.media.MediaBrowserUri -> com.kbdunn.nimbus.bt:
    org.apache.log4j.Logger log -> f
    com.kbdunn.nimbus.api.server.MediaLibraryService mediaService -> ey
    java.lang.String uri -> uri
    boolean isValid -> cu
    com.kbdunn.nimbus.web.media.MediaState state -> ez
    com.kbdunn.nimbus.api.model.Artist artist -> eA
    com.kbdunn.nimbus.api.model.Album album -> eB
    com.kbdunn.nimbus.api.model.Playlist playlist -> eC
    void <init>(com.kbdunn.nimbus.web.media.MediaState) -> <init>
    void <init>(com.kbdunn.nimbus.api.model.Artist) -> <init>
    void <init>(com.kbdunn.nimbus.api.model.Album) -> <init>
    void <init>(com.kbdunn.nimbus.api.model.Playlist) -> <init>
    void <init>(java.lang.String) -> <init>
    boolean isValid() -> isValid
    java.lang.String getUri() -> getUri
    com.kbdunn.nimbus.web.media.MediaState getState() -> cl
    com.kbdunn.nimbus.api.model.Artist getArtist() -> cm
    com.kbdunn.nimbus.api.model.Album getAlbum() -> cn
    com.kbdunn.nimbus.api.model.Playlist getPlaylist() -> co
    com.kbdunn.nimbus.api.model.MediaGroup getMediaGroup() -> H
    void compose() -> br
    void parse() -> parse
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.media.MediaController -> com.kbdunn.nimbus.bu:
    org.apache.log4j.Logger log -> f
    com.kbdunn.nimbus.api.server.MediaLibraryService mediaService -> ey
    com.kbdunn.nimbus.web.media.MediaState state -> ez
    com.kbdunn.nimbus.web.controlbar.MediaControlBar controlBar -> eD
    com.kbdunn.nimbus.api.model.MediaGroup currentGroup -> eE
    com.kbdunn.nimbus.web.header.MediaPlayer mediaPlayer -> ec
    com.kbdunn.nimbus.web.media.MediaBrowserPanel browserPanel -> eF
    com.kbdunn.nimbus.web.media.VideoPlayerPanel videoPanel -> eG
    com.kbdunn.nimbus.web.media.SongTable songTable -> eH
    com.kbdunn.nimbus.web.media.VideoTable videoTable -> eI
    void <init>() -> <init>
    void parseFragment(java.lang.String) -> r
    void refresh() -> refresh
    com.kbdunn.nimbus.web.media.MediaState getDefaultState() -> cp
    void setMediaControlBar(com.kbdunn.nimbus.web.controlbar.MediaControlBar) -> a
    void setVideoPanel(com.kbdunn.nimbus.web.media.VideoPlayerPanel) -> a
    void setBrowserPanel(com.kbdunn.nimbus.web.media.MediaBrowserPanel) -> a
    com.kbdunn.nimbus.web.media.MediaGroupTable getGroupSelector() -> cq
    com.vaadin.ui.Table getItemSelector() -> cr
    void unselectAll() -> ak
    void select(com.kbdunn.nimbus.api.model.MediaGroup) -> a
    com.kbdunn.nimbus.api.model.Artist getArtist(java.lang.String) -> s
    com.kbdunn.nimbus.api.model.Album getAlbum(java.lang.String,java.lang.String) -> b
    com.kbdunn.nimbus.api.model.Playlist getPlaylist(java.lang.String) -> t
    void setState(com.kbdunn.nimbus.web.media.MediaState) -> a
    void play(com.kbdunn.nimbus.api.model.NimbusFile) -> r
    void changeItemSelector(com.vaadin.ui.Table) -> b
    com.kbdunn.nimbus.web.media.MediaState getState() -> cl
    com.kbdunn.nimbus.api.model.MediaGroup getCurrentGroup() -> cs
    void setCurrentGroup(com.kbdunn.nimbus.api.model.MediaGroup) -> b
    boolean save(java.util.List) -> f
    boolean save(com.kbdunn.nimbus.api.model.Playlist) -> save
    boolean save(com.kbdunn.nimbus.api.model.Playlist,java.util.List) -> a
    java.util.List getCurrentSongs(com.kbdunn.nimbus.web.bean.SongBeanQuery,int,int) -> a
    int getCurrentSongCount(com.kbdunn.nimbus.web.bean.SongBeanQuery) -> a
    java.util.List getCurrentVideos(com.kbdunn.nimbus.web.bean.VideoBeanQuery,int,int) -> a
    int getCurrentVideoCount(com.kbdunn.nimbus.web.bean.VideoBeanQuery) -> a
    java.util.List getCurrentMediaFiles() -> ct
    java.util.List getSelectedMediaFiles() -> cu
    java.util.List getCurrentMediaGroups(com.kbdunn.nimbus.web.bean.MediaGroupBeanQuery,int,int) -> a
    int getCurrentMediaGroupCount(com.kbdunn.nimbus.web.bean.MediaGroupBeanQuery) -> a
    com.kbdunn.nimbus.web.media.MediaState getState(com.kbdunn.nimbus.web.media.SongTable) -> a
    void handleClick(com.kbdunn.nimbus.web.media.SongTable,com.kbdunn.nimbus.web.bean.SongBean,boolean) -> a
    com.kbdunn.nimbus.web.media.MediaState getState(com.kbdunn.nimbus.web.media.VideoTable) -> a
    void handleClick(com.kbdunn.nimbus.web.media.VideoTable,com.kbdunn.nimbus.web.bean.VideoBean,boolean) -> a
    com.kbdunn.nimbus.web.media.MediaState getState(com.kbdunn.nimbus.web.media.MediaGroupTable) -> a
    void handleClick(com.kbdunn.nimbus.web.media.MediaGroupTable,com.kbdunn.nimbus.web.bean.MediaGroupBean,boolean) -> a
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.media.MediaGroupTable -> com.kbdunn.nimbus.bv:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.media.MediaGroupTable$MediaGroupTableController controller -> eJ
    org.vaadin.addons.lazyquerycontainer.LazyQueryContainer container -> eK
    void <init>(com.kbdunn.nimbus.web.media.MediaGroupTable$MediaGroupTableController) -> <init>
    void refresh() -> refresh
    void setPageLength() -> cv
    java.util.List getSelectedItems() -> cw
    void itemClick(com.vaadin.event.ItemClickEvent) -> itemClick
com.kbdunn.nimbus.web.media.MediaGroupTable$MediaGroupTableController -> com.kbdunn.nimbus.bw:
    com.kbdunn.nimbus.web.media.MediaState getState(com.kbdunn.nimbus.web.media.MediaGroupTable) -> a
    void handleClick(com.kbdunn.nimbus.web.media.MediaGroupTable,com.kbdunn.nimbus.web.bean.MediaGroupBean,boolean) -> a
com.kbdunn.nimbus.web.media.MediaState -> com.kbdunn.nimbus.bx:
    com.kbdunn.nimbus.web.media.MediaState ARTISTS -> eL
    com.kbdunn.nimbus.web.media.MediaState ALBUMS -> eM
    com.kbdunn.nimbus.web.media.MediaState SONGS -> eN
    com.kbdunn.nimbus.web.media.MediaState PLAYLISTS -> eO
    com.kbdunn.nimbus.web.media.MediaState VIDEOS -> eP
    com.kbdunn.nimbus.web.media.MediaBrowserUri uri -> eQ
    java.lang.String value -> value
    java.lang.String display -> eR
    com.kbdunn.nimbus.web.media.MediaState[] $VALUES -> eS
    com.kbdunn.nimbus.web.media.MediaState[] values() -> cx
    com.kbdunn.nimbus.web.media.MediaState valueOf(java.lang.String) -> u
    void <init>(java.lang.String,int) -> <init>
    java.lang.String lowerValue() -> cy
    java.lang.String display() -> cz
    com.kbdunn.nimbus.web.media.MediaBrowserUri uri() -> cA
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.media.MediaView -> com.kbdunn.nimbus.by:
    long serialVersionUID -> serialVersionUID
    java.lang.String NAME -> NAME
    com.kbdunn.nimbus.web.media.VideoPlayerPanel videoPanel -> eG
    com.kbdunn.nimbus.web.controlbar.MediaControlBar controlBar -> eD
    com.kbdunn.nimbus.web.media.MediaBrowserPanel browserPanel -> eF
    com.kbdunn.nimbus.web.media.MediaController controller -> aq
    boolean layoutBuilt -> bB
    void <init>() -> <init>
    void enter(com.vaadin.navigator.ViewChangeListener$ViewChangeEvent) -> enter
    void buildLayout() -> V
com.kbdunn.nimbus.web.media.SongTable -> com.kbdunn.nimbus.bz:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.api.model.NimbusUser user -> dO
    com.kbdunn.nimbus.web.media.SongTable$SongTableController controller -> eT
    org.vaadin.addons.lazyquerycontainer.LazyQueryContainer container -> eK
    void <init>(com.kbdunn.nimbus.web.media.SongTable$SongTableController) -> <init>
    void refresh() -> refresh
    void unselectAll() -> ak
    java.util.List getContents() -> getContents
    java.util.List getSelected() -> aa
    void setPageLength() -> cv
    java.util.List toNFile(java.lang.Object) -> b
    void itemClick(com.vaadin.event.ItemClickEvent) -> itemClick
com.kbdunn.nimbus.web.media.SongTable$SongTableController -> com.kbdunn.nimbus.bA:
    com.kbdunn.nimbus.web.media.MediaState getState(com.kbdunn.nimbus.web.media.SongTable) -> a
    void handleClick(com.kbdunn.nimbus.web.media.SongTable,com.kbdunn.nimbus.web.bean.SongBean,boolean) -> a
com.kbdunn.nimbus.web.media.VideoPlayerPanel -> com.kbdunn.nimbus.bB:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.vaadin.addons.mediaelement.MediaElementPlayer videoPlayer -> eU
    void <init>() -> <init>
    void play(com.kbdunn.nimbus.api.model.NimbusFile) -> r
com.kbdunn.nimbus.web.media.VideoTable -> com.kbdunn.nimbus.bC:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.media.VideoTable$VideoTableController controller -> eV
    org.vaadin.addons.lazyquerycontainer.LazyQueryContainer container -> eK
    void <init>(com.kbdunn.nimbus.web.media.VideoTable$VideoTableController) -> <init>
    void refresh() -> refresh
    void setPageLength() -> cv
    void unselectAll() -> ak
    java.util.List getSelected() -> aa
    java.util.List toNFile(java.lang.Object) -> b
    void itemClick(com.vaadin.event.ItemClickEvent) -> itemClick
com.kbdunn.nimbus.web.media.VideoTable$VideoTableController -> com.kbdunn.nimbus.bD:
    com.kbdunn.nimbus.web.media.MediaState getState(com.kbdunn.nimbus.web.media.VideoTable) -> a
    void handleClick(com.kbdunn.nimbus.web.media.VideoTable,com.kbdunn.nimbus.web.bean.VideoBean,boolean) -> a
com.kbdunn.nimbus.web.media.action.AddToLibrary -> com.kbdunn.nimbus.bE:
    long serialVersionUID -> serialVersionUID
    java.lang.String CAPTION -> cP
    com.kbdunn.nimbus.web.interfaces.Refreshable callback -> eW
    com.kbdunn.nimbus.web.component.FileContainerComboBox driveSelect -> cf
    com.kbdunn.nimbus.web.component.FileSelectTree fileSelect -> eX
    com.kbdunn.nimbus.web.popup.PopupWindow popup -> de
    void <init>() -> <init>
    void <init>(com.kbdunn.nimbus.web.interfaces.Refreshable) -> <init>
    void buildLayout() -> V
    void refresh() -> refresh
    void showDialog() -> bF
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
    java.util.List getInitialSelection() -> ac
    com.kbdunn.nimbus.api.model.FileContainer getCurrentFileContainer() -> ad
    com.kbdunn.nimbus.api.model.NimbusUser getCurrentUser() -> g
    void valueChange(com.vaadin.data.Property$ValueChangeEvent) -> valueChange
com.kbdunn.nimbus.web.media.action.CreatePlaylist -> com.kbdunn.nimbus.bF:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.api.model.NimbusUser user -> dO
    com.kbdunn.nimbus.web.media.MediaController mediaBrowser -> dX
    com.kbdunn.nimbus.web.popup.PopupWindow popup -> de
    com.vaadin.ui.TextField playlistName -> eY
    java.lang.String caption -> caption
    void <init>(com.kbdunn.nimbus.web.media.MediaController) -> <init>
    void showDialog() -> bF
    java.lang.String getCaption() -> getCaption
    void buildLayout() -> V
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.media.action.DeletePlaylist -> com.kbdunn.nimbus.bG:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.media.MediaController controller -> aq
    com.kbdunn.nimbus.web.popup.PopupWindow popup -> de
    com.vaadin.ui.Label desc -> dG
    java.util.List selected -> ak
    boolean layoutBuilt -> bB
    void <init>(com.kbdunn.nimbus.web.media.MediaController) -> <init>
    void showDialog() -> bF
    void buildLayout() -> V
    void refresh() -> refresh
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.media.action.EditMetadata -> com.kbdunn.nimbus.bH:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.media.MediaController controller -> aq
    com.kbdunn.nimbus.web.popup.PopupWindow popup -> de
    com.vaadin.ui.Label info -> cU
    com.vaadin.ui.TextField title -> eZ
    com.vaadin.ui.TextField artist -> fa
    com.vaadin.ui.TextField album -> fb
    com.vaadin.ui.TextField trackNo -> fc
    com.vaadin.ui.TextField year -> fd
    java.util.List selected -> ak
    boolean layoutBuilt -> bB
    void <init>(com.kbdunn.nimbus.web.media.MediaController) -> <init>
    void buildLayout() -> V
    boolean refresh() -> refresh
    void showDialog() -> bF
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.media.action.EditPlaylist -> com.kbdunn.nimbus.bI:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.api.model.NimbusUser user -> dO
    com.kbdunn.nimbus.api.server.MediaLibraryService mediaService -> ey
    com.kbdunn.nimbus.web.media.MediaController controller -> aq
    com.kbdunn.nimbus.web.media.MediaState state -> ez
    com.kbdunn.nimbus.api.model.Playlist selected -> fe
    com.vaadin.ui.TextField newName -> ff
    com.vaadin.ui.ComboBox groupSelect -> fg
    com.vaadin.ui.ComboBox groupFilter -> fh
    com.kbdunn.nimbus.web.media.SongTable candidates -> fi
    com.vaadin.ui.Table playlist -> fj
    com.vaadin.data.util.BeanItemContainer pc -> fk
    com.kbdunn.nimbus.api.model.MediaGroup currentGroup -> eE
    com.kbdunn.nimbus.web.popup.PopupWindow popup -> de
    java.lang.String caption -> caption
    boolean layoutBuilt -> bB
    void <init>(com.kbdunn.nimbus.web.media.MediaController) -> <init>
    void showDialog() -> bF
    java.lang.String getCaption() -> getCaption
    void refresh() -> refresh
    void buildLayout() -> V
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
    void createGroupSelect() -> cB
    void createGroupFilter() -> cC
    void refreshGroupFilter() -> cD
    void changeGroupSelection(com.kbdunn.nimbus.api.model.MediaGroup) -> c
    void showSongs() -> cE
    void overrideCandidatesTableColumnConfig() -> cF
    void createCandidates() -> cG
    void createPlaylist() -> cH
    void addPlaylistContents() -> cI
    java.util.List getCurrentSongs(com.kbdunn.nimbus.web.bean.SongBeanQuery,int,int) -> a
    int getCurrentSongCount(com.kbdunn.nimbus.web.bean.SongBeanQuery) -> a
    com.kbdunn.nimbus.web.media.MediaState getState(com.kbdunn.nimbus.web.media.SongTable) -> a
    void handleClick(com.kbdunn.nimbus.web.media.SongTable,com.kbdunn.nimbus.web.bean.SongBean,boolean) -> a
    com.kbdunn.nimbus.web.media.SongTable access$000(com.kbdunn.nimbus.web.media.action.EditPlaylist) -> a
    com.vaadin.ui.Table access$100(com.kbdunn.nimbus.web.media.action.EditPlaylist) -> b
    com.vaadin.data.util.BeanItemContainer access$200(com.kbdunn.nimbus.web.media.action.EditPlaylist) -> c
    com.kbdunn.nimbus.web.media.MediaState access$302(com.kbdunn.nimbus.web.media.action.EditPlaylist,com.kbdunn.nimbus.web.media.MediaState) -> a
    com.vaadin.ui.ComboBox access$400(com.kbdunn.nimbus.web.media.action.EditPlaylist) -> d
    void access$500(com.kbdunn.nimbus.web.media.action.EditPlaylist) -> e
    void access$600(com.kbdunn.nimbus.web.media.action.EditPlaylist,com.kbdunn.nimbus.api.model.MediaGroup) -> a
com.kbdunn.nimbus.web.media.action.EditPlaylist$1 -> com.kbdunn.nimbus.bJ:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.media.action.EditPlaylist this$0 -> fl
    void <init>(com.kbdunn.nimbus.web.media.action.EditPlaylist) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.media.action.EditPlaylist$2 -> com.kbdunn.nimbus.bK:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.media.action.EditPlaylist this$0 -> fl
    void <init>(com.kbdunn.nimbus.web.media.action.EditPlaylist) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.media.action.EditPlaylist$3 -> com.kbdunn.nimbus.bL:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.media.action.EditPlaylist this$0 -> fl
    void <init>(com.kbdunn.nimbus.web.media.action.EditPlaylist) -> <init>
    void valueChange(com.vaadin.data.Property$ValueChangeEvent) -> valueChange
com.kbdunn.nimbus.web.media.action.EditPlaylist$4 -> com.kbdunn.nimbus.bM:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.media.action.EditPlaylist this$0 -> fl
    void <init>(com.kbdunn.nimbus.web.media.action.EditPlaylist) -> <init>
    void valueChange(com.vaadin.data.Property$ValueChangeEvent) -> valueChange
com.kbdunn.nimbus.web.media.action.RemoveFromLibrary -> com.kbdunn.nimbus.bN:
    long serialVersionUID -> serialVersionUID
    java.lang.String CAPTION -> cP
    com.kbdunn.nimbus.web.media.MediaController controller -> aq
    com.kbdunn.nimbus.web.popup.PopupWindow popup -> de
    com.vaadin.ui.Label info -> cU
    com.vaadin.ui.VerticalLayout list -> fm
    com.vaadin.ui.Button hardDelete -> fn
    java.util.List targetFiles -> cS
    void <init>(com.kbdunn.nimbus.web.media.MediaController) -> <init>
    void refresh() -> refresh
    void showDialog() -> bF
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
    java.util.List access$000(com.kbdunn.nimbus.web.media.action.RemoveFromLibrary) -> a
    com.kbdunn.nimbus.web.popup.PopupWindow access$100(com.kbdunn.nimbus.web.media.action.RemoveFromLibrary) -> b
com.kbdunn.nimbus.web.media.action.RemoveFromLibrary$1 -> com.kbdunn.nimbus.bO:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.media.MediaController val$controller -> fo
    com.kbdunn.nimbus.web.media.action.RemoveFromLibrary this$0 -> fp
    void <init>(com.kbdunn.nimbus.web.media.action.RemoveFromLibrary,com.kbdunn.nimbus.web.media.MediaController) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.popup.ConfirmDialog -> com.kbdunn.nimbus.bP:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
com.kbdunn.nimbus.web.popup.PopupWindow -> com.kbdunn.nimbus.bQ:
    long serialVersionUID -> serialVersionUID
    com.vaadin.ui.VerticalLayout layout -> fq
    com.vaadin.ui.AbstractComponentContainer content -> fr
    com.vaadin.ui.HorizontalLayout buttonLayout -> fs
    com.vaadin.ui.Button submit -> eq
    com.vaadin.ui.Button cancel -> ft
    java.util.List customActions -> fu
    void <init>() -> <init>
    void <init>(java.lang.String,com.vaadin.ui.AbstractComponentContainer) -> <init>
    void setPopupLayout(com.vaadin.ui.AbstractComponentContainer) -> a
    void buildPopup() -> cJ
    void refresh() -> refresh
    void setCancelCaption(java.lang.String) -> v
    void setSubmitCaption(java.lang.String) -> w
    void hideSubmitButton() -> cK
    void hideButtons() -> cL
    void setCustomActions(java.util.List) -> g
    void addCustomAction(com.vaadin.ui.Button) -> a
    void open() -> open
    void addSubmitListener(com.vaadin.ui.Button$ClickListener) -> b
    void addCancelListener(com.vaadin.ui.Button$ClickListener) -> c
com.kbdunn.nimbus.web.popup.PopupWindow$1 -> com.kbdunn.nimbus.bR:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.popup.PopupWindow this$0 -> fv
    void <init>(com.kbdunn.nimbus.web.popup.PopupWindow) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.settings.SettingsController -> com.kbdunn.nimbus.bS:
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger log -> f
    com.kbdunn.nimbus.web.settings.SettingsView view -> fw
    com.kbdunn.nimbus.api.model.NimbusUser user -> dO
    java.util.List tabs -> tabs
    void <init>() -> <init>
    void parseFragment(java.lang.String) -> r
    void openSettingsHome() -> cM
    void openProfileSettings() -> cN
    void openDriveSettings() -> cO
    java.util.List getTabs() -> cP
    com.kbdunn.nimbus.api.model.NimbusUser getCurrentUser() -> g
    void refreshUser() -> cQ
    void selectedTabChange(com.vaadin.ui.TabSheet$SelectedTabChangeEvent) -> selectedTabChange
    void fireHardDriveModificationEvent(java.lang.Object,com.kbdunn.nimbus.api.model.NimbusUser) -> a
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.settings.SettingsTab -> com.kbdunn.nimbus.bT:
    java.lang.String getName() -> getName
    java.lang.String getFragment() -> getFragment
    boolean requiresAdmin() -> cR
    void refresh() -> refresh
    com.kbdunn.nimbus.web.settings.SettingsTabController getController() -> cS
com.kbdunn.nimbus.web.settings.SettingsTabController -> com.kbdunn.nimbus.bU:
    com.kbdunn.nimbus.web.settings.SettingsTab getTab() -> cT
com.kbdunn.nimbus.web.settings.SettingsView -> com.kbdunn.nimbus.bV:
    long serialVersionUID -> serialVersionUID
    java.lang.String NAME -> NAME
    com.kbdunn.nimbus.web.settings.SettingsController controller -> fx
    com.vaadin.ui.VerticalLayout content -> em
    com.vaadin.ui.TabSheet tabsheet -> fy
    boolean layoutBuilt -> bB
    void <init>(com.kbdunn.nimbus.web.settings.SettingsController) -> <init>
    void enter(com.vaadin.navigator.ViewChangeListener$ViewChangeEvent) -> enter
    void openFirstTab() -> cU
    void openTab(com.kbdunn.nimbus.web.settings.SettingsTab) -> a
    void buildLayout() -> V
com.kbdunn.nimbus.web.settings.drives.AddFilesystemLocationPopup -> com.kbdunn.nimbus.bW:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.settings.drives.StorageController controller -> fz
    com.vaadin.ui.TextField name -> en
    com.vaadin.ui.TextField path -> fA
    com.vaadin.ui.CheckBox autonomous -> fB
    com.kbdunn.nimbus.web.popup.PopupWindow popup -> de
    void <init>(com.kbdunn.nimbus.web.settings.drives.StorageController) -> <init>
    void buildLayout() -> V
    void refresh() -> refresh
    void showDialog() -> bF
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.settings.drives.DeviceSettingsPopup -> com.kbdunn.nimbus.bX:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.settings.drives.StorageController controller -> fz
    com.kbdunn.nimbus.api.model.StorageDevice device -> fC
    com.vaadin.ui.TextField name -> en
    com.vaadin.ui.CheckBox autonomous -> fB
    com.vaadin.ui.OptionGroup driveUsers -> fD
    com.kbdunn.nimbus.web.popup.PopupWindow popup -> de
    void <init>(com.kbdunn.nimbus.web.settings.drives.StorageController,com.kbdunn.nimbus.api.model.StorageDevice) -> <init>
    void buildLayout() -> V
    void refresh() -> refresh
    void showDialog() -> bF
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.settings.drives.StorageController -> com.kbdunn.nimbus.bY:
    com.kbdunn.nimbus.api.server.StorageService storageService -> t
    com.kbdunn.nimbus.web.settings.SettingsController controller -> fx
    com.kbdunn.nimbus.web.settings.drives.StorageSettingsTab tab -> fE
    void <init>(com.kbdunn.nimbus.web.settings.SettingsController) -> <init>
    com.kbdunn.nimbus.web.settings.SettingsTab getTab() -> cT
    void refreshView() -> aW
    void saveStorageSettings(boolean) -> p
    com.kbdunn.nimbus.api.model.NimbusUser getCurrentUser() -> g
    void saveDeviceSettings(com.kbdunn.nimbus.api.model.StorageDevice,java.lang.String,boolean) -> a
    void deleteDevice(com.kbdunn.nimbus.api.model.StorageDevice) -> a
    boolean isValidStoragePath(java.lang.String) -> x
    void createFilesystemLocation(java.lang.String,java.lang.String,boolean) -> a
    void assignDeviceToUser(com.kbdunn.nimbus.api.model.StorageDevice,com.kbdunn.nimbus.api.model.NimbusUser) -> a
    void revokeDeviceFromUser(com.kbdunn.nimbus.api.model.StorageDevice,com.kbdunn.nimbus.api.model.NimbusUser) -> b
    com.kbdunn.nimbus.api.server.StorageService access$000(com.kbdunn.nimbus.web.settings.drives.StorageController) -> a
    com.kbdunn.nimbus.web.settings.SettingsController access$100(com.kbdunn.nimbus.web.settings.drives.StorageController) -> b
com.kbdunn.nimbus.web.settings.drives.StorageController$1 -> com.kbdunn.nimbus.bZ:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.popup.ConfirmDialog val$cd -> fF
    com.kbdunn.nimbus.api.model.StorageDevice val$device -> fG
    com.kbdunn.nimbus.web.settings.drives.StorageController this$0 -> fH
    void <init>(com.kbdunn.nimbus.web.settings.drives.StorageController,com.kbdunn.nimbus.web.popup.ConfirmDialog,com.kbdunn.nimbus.api.model.StorageDevice) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.settings.drives.StorageDeviceDisplay -> com.kbdunn.nimbus.ca:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.api.server.StorageService storageService -> t
    com.kbdunn.nimbus.api.model.StorageDevice device -> fC
    com.kbdunn.nimbus.web.settings.drives.StorageController controller -> fz
    com.kbdunn.nimbus.web.settings.drives.DeviceSettingsPopup settingsPopup -> fI
    com.kbdunn.vaadin.addons.fontawesome.FontAwesomeLabel iconLabel -> fJ
    com.vaadin.ui.Label name -> fK
    com.vaadin.ui.Label path -> fL
    com.vaadin.ui.Label size -> fM
    com.vaadin.ui.Button settings -> fN
    com.vaadin.ui.Button remove -> fO
    void <init>(com.kbdunn.nimbus.api.model.StorageDevice,com.kbdunn.nimbus.web.settings.drives.StorageController) -> <init>
    void buildLayout() -> V
    void refresh() -> refresh
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.settings.drives.StorageDeviceTree -> com.kbdunn.nimbus.cb:
    long serialVersionUID -> serialVersionUID
    com.vaadin.data.util.HierarchicalContainer container -> fP
    java.lang.String PROPERTY_NAME -> PROPERTY_NAME
    java.lang.String PROPERTY_DETAILS -> fQ
    void <init>() -> <init>
    void setContents(java.util.List) -> h
    void setDriveDetails(com.kbdunn.nimbus.api.model.HardDrive) -> a
    void unselectAll() -> ak
com.kbdunn.nimbus.web.settings.drives.StorageSettingsPopup -> com.kbdunn.nimbus.cc:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.settings.drives.StorageController controller -> fz
    com.vaadin.ui.CheckBox scan -> fR
    com.kbdunn.nimbus.web.popup.PopupWindow popup -> de
    void <init>(com.kbdunn.nimbus.web.settings.drives.StorageController) -> <init>
    void buildLayout() -> V
    void refresh() -> refresh
    void showDialog() -> bF
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.settings.drives.StorageSettingsTab -> com.kbdunn.nimbus.cd:
    long serialVersionUID -> serialVersionUID
    java.lang.String FRAGMENT -> fS
    com.kbdunn.nimbus.web.settings.drives.StorageController controller -> fz
    com.vaadin.ui.HorizontalLayout drives -> fT
    com.vaadin.ui.Button refresh -> fU
    com.vaadin.ui.Button settings -> fN
    com.vaadin.ui.Button add -> fV
    com.kbdunn.nimbus.web.settings.drives.StorageSettingsPopup settingsPopup -> fW
    com.kbdunn.nimbus.web.settings.drives.AddFilesystemLocationPopup addPopup -> fX
    void <init>(com.kbdunn.nimbus.web.settings.drives.StorageController) -> <init>
    java.lang.String getName() -> getName
    java.lang.String getFragment() -> getFragment
    boolean requiresAdmin() -> cR
    void refresh() -> refresh
    com.kbdunn.nimbus.web.settings.SettingsTabController getController() -> cS
    void buildLayout() -> V
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.settings.profile.ConfirmPasswordDialog -> com.kbdunn.nimbus.ce:
    long serialVersionUID -> serialVersionUID
    java.lang.String caption -> caption
    com.kbdunn.nimbus.web.settings.profile.ProfileController controller -> fY
    java.lang.String newPw -> fZ
    com.vaadin.ui.PasswordField confirmPwField -> ga
    com.kbdunn.nimbus.web.popup.PopupWindow popup -> de
    void <init>(com.kbdunn.nimbus.web.settings.profile.ProfileController) -> <init>
    void buildLayout() -> V
    void showDialog(java.lang.String) -> y
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
    void clearData() -> clearData
    com.kbdunn.nimbus.web.settings.profile.ProfileController access$000(com.kbdunn.nimbus.web.settings.profile.ConfirmPasswordDialog) -> a
    void access$100(com.kbdunn.nimbus.web.settings.profile.ConfirmPasswordDialog) -> b
com.kbdunn.nimbus.web.settings.profile.ConfirmPasswordDialog$1 -> com.kbdunn.nimbus.cf:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.settings.profile.ConfirmPasswordDialog this$0 -> gb
    void <init>(com.kbdunn.nimbus.web.settings.profile.ConfirmPasswordDialog) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.settings.profile.ConfirmPasswordDialog$2 -> com.kbdunn.nimbus.cg:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.settings.profile.ConfirmPasswordDialog this$0 -> gb
    void <init>(com.kbdunn.nimbus.web.settings.profile.ConfirmPasswordDialog) -> <init>
    void detach(com.vaadin.server.ClientConnector$DetachEvent) -> detach
com.kbdunn.nimbus.web.settings.profile.EmailSettingsForm -> com.kbdunn.nimbus.ch:
    long serialVersionUID -> serialVersionUID
    java.lang.String CUSTOM_SMTP_ITEM -> gc
    com.kbdunn.nimbus.web.settings.profile.ProfileController controller -> fY
    com.kbdunn.nimbus.api.model.SMTPSettings savedSettings -> gd
    com.vaadin.ui.FormLayout smtpFormLayout -> ge
    com.vaadin.ui.ComboBox mailServices -> gf
    com.vaadin.ui.TextField email -> eo
    com.vaadin.ui.TextField smtpServer -> gg
    com.vaadin.ui.TextField smtpPort -> gh
    com.vaadin.ui.TextField sslPort -> gi
    com.vaadin.ui.CheckBox sslEnabled -> gj
    com.vaadin.ui.PasswordField password -> dT
    com.vaadin.ui.Button oAuthAuthenticateButton -> gk
    com.vaadin.ui.Button test -> gl
    com.vaadin.ui.Label testResult -> gm
    void <init>(com.kbdunn.nimbus.web.settings.profile.ProfileController) -> <init>
    void buildLayout() -> V
    void refresh() -> refresh
    java.lang.String getEmail() -> getEmail
    java.lang.String getSmtpServer() -> getSmtpServer
    java.lang.String getSmtpPort() -> getSmtpPort
    boolean isSslEnabled() -> cV
    java.lang.String getSslPort() -> getSslPort
    java.lang.String getSmtpPassword() -> cW
    com.kbdunn.nimbus.api.model.SMTPSettings getCurrentSmtpSettings() -> cX
    com.kbdunn.nimbus.api.security.OAuthAPIService$Type getCurrentOAuthServiceType() -> cY
    boolean isSMTPService() -> cZ
    boolean validate() -> validate
    void showCustomSmtp() -> da
    void showSmtp(com.kbdunn.nimbus.web.email.EmailService) -> a
    void showOAuth(com.kbdunn.nimbus.web.email.EmailService) -> b
    void refreshOAuthButton() -> db
    void setSavedSmtpValues() -> dc
    void setTestSuccessful(boolean) -> q
    void buildSmtpLayout() -> dd
    java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda) -> a
    void lambda$buildSmtpLayout$61446b05$1(com.vaadin.ui.Button$ClickEvent) -> a
    void lambda$buildSmtpLayout$d8f8193f$1(com.vaadin.data.Property$ValueChangeEvent) -> a
    com.kbdunn.nimbus.web.settings.profile.ProfileController access$100(com.kbdunn.nimbus.web.settings.profile.EmailSettingsForm) -> a
    void access$200(com.kbdunn.nimbus.web.settings.profile.EmailSettingsForm) -> b
    com.vaadin.ui.TextField access$300(com.kbdunn.nimbus.web.settings.profile.EmailSettingsForm) -> c
com.kbdunn.nimbus.web.settings.profile.EmailSettingsForm$1 -> com.kbdunn.nimbus.ci:
com.kbdunn.nimbus.web.settings.profile.EmailSettingsForm$NimbusOAuthListener -> com.kbdunn.nimbus.cj:
    com.kbdunn.nimbus.api.security.OAuthAPIService$Type type -> gn
    com.kbdunn.nimbus.web.settings.profile.EmailSettingsForm this$0 -> go
    void <init>(com.kbdunn.nimbus.web.settings.profile.EmailSettingsForm,com.kbdunn.nimbus.api.security.OAuthAPIService$Type) -> <init>
    void authSuccessful(com.github.scribejava.core.model.Token,boolean) -> authSuccessful
    void authDenied(java.lang.String) -> authDenied
    void lambda$authSuccessful$1(com.github.scribejava.core.model.Token) -> a
    void <init>(com.kbdunn.nimbus.web.settings.profile.EmailSettingsForm,com.kbdunn.nimbus.api.security.OAuthAPIService$Type,com.kbdunn.nimbus.web.settings.profile.EmailSettingsForm$1) -> <init>
com.kbdunn.nimbus.web.settings.profile.ProfileController -> com.kbdunn.nimbus.ck:
    org.apache.log4j.Logger log -> f
    java.lang.String UN_PATTERN -> el
    java.lang.String DUMMY_PW -> gp
    java.lang.String GMAIL_SUFFIX -> gq
    com.kbdunn.nimbus.web.settings.SettingsController controller -> fx
    com.kbdunn.nimbus.web.settings.profile.ProfileSettingsTab tab -> gr
    void <init>(com.kbdunn.nimbus.web.settings.SettingsController) -> <init>
    com.kbdunn.nimbus.web.settings.SettingsTab getTab() -> cT
    void refreshUser() -> cQ
    com.kbdunn.nimbus.api.model.NimbusUser getCurrentUser() -> g
    com.kbdunn.nimbus.api.model.SMTPSettings getSavedSmtpSettings() -> de
    void saveProfileSettings() -> df
    void passwordConfirmed(java.lang.String) -> z
    void finalizeSave() -> dg
    void addOAuthCredential(com.github.scribejava.core.model.Token,com.kbdunn.nimbus.api.security.OAuthAPIService$Type) -> a
    void setUserEmailService(com.kbdunn.nimbus.api.security.OAuthAPIService$Type) -> b
    void deleteOAuthCredential(com.kbdunn.nimbus.api.security.OAuthAPIService$Type) -> c
    boolean testSMTPSettings(com.kbdunn.nimbus.api.model.SMTPSettings) -> b
    boolean testOAuthConnection(com.kbdunn.nimbus.api.security.OAuthAPIService$Type) -> d
    java.lang.String getOAuthEmailAddress(com.kbdunn.nimbus.api.security.OAuthAPIService$Type) -> e
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.settings.profile.ProfileSettingsTab -> com.kbdunn.nimbus.cl:
    long serialVersionUID -> serialVersionUID
    java.lang.String FRAGMENT -> fS
    com.kbdunn.nimbus.web.settings.profile.ProfileController controller -> fY
    com.vaadin.ui.HorizontalLayout panelLayout -> gs
    com.kbdunn.nimbus.web.settings.profile.UserProfileForm profileForm -> gt
    com.kbdunn.nimbus.web.settings.profile.EmailSettingsForm emailForm -> gu
    void <init>(com.kbdunn.nimbus.web.settings.profile.ProfileController) -> <init>
    java.lang.String getName() -> getName
    java.lang.String getFragment() -> getFragment
    boolean requiresAdmin() -> cR
    void refresh() -> refresh
    com.kbdunn.nimbus.web.settings.SettingsTabController getController() -> cS
    void buildLayout() -> V
    com.kbdunn.nimbus.web.settings.profile.UserProfileForm getProfileForm() -> dh
    com.kbdunn.nimbus.web.settings.profile.EmailSettingsForm getEmailForm() -> di
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
    java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda) -> a
    void lambda$buildLayout$61446b05$1(com.vaadin.ui.Button$ClickEvent) -> b
com.kbdunn.nimbus.web.settings.profile.UserProfileForm -> com.kbdunn.nimbus.cm:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.settings.profile.ProfileController controller -> fY
    com.vaadin.ui.FormLayout profileForm -> gv
    com.vaadin.ui.TextField name -> en
    com.vaadin.ui.PasswordField password -> dT
    void <init>(com.kbdunn.nimbus.web.settings.profile.ProfileController) -> <init>
    void buildLayout() -> V
    void refresh() -> refresh
    java.lang.String getNameValue() -> dj
    java.lang.String getPasswordValue() -> dk
    boolean validate() -> validate
com.kbdunn.nimbus.web.settings.users.InviteDialog -> com.kbdunn.nimbus.cn:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.email.EmailForm emailForm -> gw
    com.kbdunn.nimbus.api.model.NimbusUser user -> dO
    com.kbdunn.nimbus.web.popup.PopupWindow popup -> de
    void <init>(com.kbdunn.nimbus.api.model.NimbusUser) -> <init>
    void refresh() -> refresh
    void buildLayout() -> V
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
    void openPopup() -> dl
com.kbdunn.nimbus.web.settings.users.NimbusUserLayout -> com.kbdunn.nimbus.co:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.api.server.StorageService driveService -> gx
    com.kbdunn.nimbus.web.settings.users.UserSettingsController controller -> gy
    com.kbdunn.nimbus.api.model.NimbusUser user -> dO
    com.kbdunn.vaadin.addons.fontawesome.FontAwesomeLabel icon -> gz
    com.vaadin.ui.Label username -> gA
    com.vaadin.ui.OptionGroup userDrives -> gB
    com.vaadin.ui.CheckBox admin -> gC
    com.vaadin.ui.Button resetPassword -> gD
    com.vaadin.ui.Button delete -> gE
    void <init>(com.kbdunn.nimbus.web.settings.users.UserSettingsController,com.kbdunn.nimbus.api.model.NimbusUser) -> <init>
    void buildLayout() -> V
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
    com.kbdunn.nimbus.api.model.NimbusUser access$000(com.kbdunn.nimbus.web.settings.users.NimbusUserLayout) -> a
    com.vaadin.ui.CheckBox access$100(com.kbdunn.nimbus.web.settings.users.NimbusUserLayout) -> b
    com.kbdunn.nimbus.web.settings.users.UserSettingsController access$200(com.kbdunn.nimbus.web.settings.users.NimbusUserLayout) -> c
    com.vaadin.ui.OptionGroup access$300(com.kbdunn.nimbus.web.settings.users.NimbusUserLayout) -> d
com.kbdunn.nimbus.web.settings.users.NimbusUserLayout$1 -> com.kbdunn.nimbus.cp:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.settings.users.NimbusUserLayout this$0 -> gF
    void <init>(com.kbdunn.nimbus.web.settings.users.NimbusUserLayout) -> <init>
    void valueChange(com.vaadin.data.Property$ValueChangeEvent) -> valueChange
com.kbdunn.nimbus.web.settings.users.NimbusUserLayout$2 -> com.kbdunn.nimbus.cq:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.settings.users.NimbusUserLayout this$0 -> gF
    void <init>(com.kbdunn.nimbus.web.settings.users.NimbusUserLayout) -> <init>
    void valueChange(com.vaadin.data.Property$ValueChangeEvent) -> valueChange
com.kbdunn.nimbus.web.settings.users.NimbusUserLayout$3 -> com.kbdunn.nimbus.cr:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.popup.ConfirmDialog val$cd -> fF
    com.kbdunn.nimbus.web.settings.users.NimbusUserLayout this$0 -> gF
    void <init>(com.kbdunn.nimbus.web.settings.users.NimbusUserLayout,com.kbdunn.nimbus.web.popup.ConfirmDialog) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.settings.users.ResetPasswordDialog -> com.kbdunn.nimbus.cs:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.email.EmailForm emailForm -> gw
    com.kbdunn.nimbus.api.model.NimbusUser user -> dO
    com.kbdunn.nimbus.api.model.NimbusUser initiator -> gG
    com.kbdunn.nimbus.web.popup.PopupWindow popup -> de
    void <init>(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.model.NimbusUser) -> <init>
    void refresh() -> refresh
    void buildLayout() -> V
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
    void openPopup() -> dl
com.kbdunn.nimbus.web.settings.users.UserSettingsController -> com.kbdunn.nimbus.ct:
    org.apache.log4j.Logger log -> f
    com.kbdunn.nimbus.api.server.UserService userService -> r
    com.kbdunn.nimbus.api.server.StorageService driveService -> gx
    com.kbdunn.nimbus.web.settings.SettingsController controller -> fx
    com.kbdunn.nimbus.web.settings.users.UserSettingsTab tab -> gH
    void <init>(com.kbdunn.nimbus.web.settings.SettingsController) -> <init>
    java.util.List getUsers() -> dm
    com.kbdunn.nimbus.web.settings.SettingsTab getTab() -> cT
    com.kbdunn.nimbus.api.model.NimbusUser getCurrentUser() -> g
    void updateAdminStatus(com.kbdunn.nimbus.api.model.NimbusUser,boolean) -> a
    void setUserDrives(com.kbdunn.nimbus.api.model.NimbusUser,java.util.List) -> a
    void deleteUser(com.kbdunn.nimbus.api.model.NimbusUser) -> a
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.settings.users.UserSettingsTab -> com.kbdunn.nimbus.cu:
    long serialVersionUID -> serialVersionUID
    java.lang.String FRAGMENT -> fS
    com.kbdunn.nimbus.web.settings.users.UserSettingsController controller -> gy
    com.vaadin.ui.VerticalLayout userContainer -> gI
    com.vaadin.ui.Button refresh -> fU
    com.vaadin.ui.Button add -> fV
    void <init>(com.kbdunn.nimbus.web.settings.users.UserSettingsController) -> <init>
    java.lang.String getName() -> getName
    java.lang.String getFragment() -> getFragment
    boolean requiresAdmin() -> cR
    void refresh() -> refresh
    com.kbdunn.nimbus.web.settings.SettingsTabController getController() -> cS
    void buildLayout() -> V
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.share.ConfirmBlockDeleteDialog -> com.kbdunn.nimbus.cv:
    long serialVersionUID -> serialVersionUID
    java.lang.String caption -> caption
    com.kbdunn.nimbus.web.popup.PopupWindow popup -> de
    void <init>() -> <init>
    void showDialog() -> bF
    void addSubmitListener(com.vaadin.ui.Button$ClickListener) -> b
    void buildLayout() -> V
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.share.EditListener -> com.kbdunn.nimbus.cw:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.share.ShareBlockEditor view -> gJ
    com.vaadin.ui.Button editButton -> gK
    com.vaadin.ui.AbstractTextField field -> gL
    boolean saveOnCommit -> gM
    void <init>(com.vaadin.ui.Button,com.vaadin.ui.AbstractTextField,com.kbdunn.nimbus.web.share.ShareBlockEditor) -> <init>
    void <init>(com.vaadin.ui.Button,com.vaadin.ui.AbstractTextField,com.kbdunn.nimbus.web.share.ShareBlockEditor,boolean) -> <init>
    void setSaveOnCommit(boolean) -> r
    boolean isEditing() -> isEditing
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.share.EditableShareBlockLayout -> com.kbdunn.nimbus.cx:
    long serialVersionUID -> serialVersionUID
    com.vaadin.ui.VerticalLayout btnLayout -> gN
    com.vaadin.ui.Button save -> dC
    com.vaadin.ui.Button cancel -> ft
    com.vaadin.ui.Button delete -> gE
    void <init>(com.kbdunn.nimbus.api.model.ShareBlock,com.kbdunn.nimbus.web.share.ShareController) -> <init>
    void buildCollapsedLayout() -> dn
    void buildExpandedLayout() -> do
com.kbdunn.nimbus.web.share.EditableShareBlockLayout$1 -> com.kbdunn.nimbus.cy:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.share.EditableShareBlockLayout this$0 -> gO
    void <init>(com.kbdunn.nimbus.web.share.EditableShareBlockLayout) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.share.EditableShareBlockLayout$2 -> com.kbdunn.nimbus.cz:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.share.EditableShareBlockLayout this$0 -> gO
    void <init>(com.kbdunn.nimbus.web.share.EditableShareBlockLayout) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.share.EditableShareBlockLayout$3 -> com.kbdunn.nimbus.cA:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.share.ShareBlockEditor val$me -> gP
    com.kbdunn.nimbus.web.share.EditableShareBlockLayout this$0 -> gO
    void <init>(com.kbdunn.nimbus.web.share.EditableShareBlockLayout,com.kbdunn.nimbus.web.share.ShareBlockEditor) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.share.EditableShareBlockLayout$4 -> com.kbdunn.nimbus.cB:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.share.EditableShareBlockLayout this$0 -> gO
    void <init>(com.kbdunn.nimbus.web.share.EditableShareBlockLayout) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.share.ExternalShareController -> com.kbdunn.nimbus.cC:
    org.apache.log4j.Logger log -> f
    com.kbdunn.nimbus.api.server.FileShareService shareService -> ad
    com.kbdunn.nimbus.web.share.ExternalShareView view -> gQ
    com.kbdunn.nimbus.api.model.ShareBlock currentBlock -> gR
    com.kbdunn.nimbus.web.files.action.UploadAction uploadAction -> bV
    void <init>() -> <init>
    com.kbdunn.nimbus.api.model.ShareBlock getCurrentBlock() -> dp
    com.kbdunn.nimbus.web.files.action.UploadAction getUploadAction() -> dq
    void parseFragment(java.lang.String) -> r
    void handleUpload() -> handleUpload
    com.kbdunn.nimbus.api.model.NimbusFile getUploadDirectory() -> getUploadDirectory
    boolean userCanUploadFile(com.kbdunn.nimbus.api.model.NimbusFile) -> userCanUploadFile
    void processFinishedMultiUpload() -> processFinishedMultiUpload
    void processFinishedUpload(com.kbdunn.nimbus.api.model.NimbusFile,boolean) -> processFinishedUpload
    java.util.List getBlockContents() -> dr
    java.util.List getFolderContents(com.kbdunn.nimbus.api.model.NimbusFile) -> getFolderContents
    boolean fileExistsOnDisk(com.kbdunn.nimbus.api.model.NimbusFile) -> fileExistsOnDisk
    int getBlockFolderCount() -> ds
    int getBlockFileCount() -> dt
    int getBlockAccessCount() -> du
    void incrementVisitCount() -> dv
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.share.ExternalShareView -> com.kbdunn.nimbus.cD:
    long serialVersionUID -> serialVersionUID
    java.lang.String NAME -> NAME
    int PAGE_LENGTH -> gS
    java.lang.String FILE_PROPERTY -> gT
    java.lang.String SIZE_PROPERTY -> gU
    java.lang.String DL_PROPERTY -> gV
    org.joda.time.format.DateTimeFormatter dateFormatter -> gW
    com.kbdunn.nimbus.web.share.ExternalShareController controller -> gX
    com.vaadin.ui.VerticalLayout content -> em
    com.vaadin.ui.TreeTable fileTreeTable -> gY
    void <init>(com.kbdunn.nimbus.web.share.ExternalShareController) -> <init>
    void enter(com.vaadin.navigator.ViewChangeListener$ViewChangeEvent) -> enter
    void refresh() -> refresh
    void buildHeader() -> dw
    void showBadAddress() -> dx
    void showExpired() -> dy
    void showPasswordPrompt() -> dz
    void displayShareBlock() -> dA
    void addFile(com.kbdunn.nimbus.api.model.NimbusFile,com.kbdunn.nimbus.api.model.NimbusFile) -> a
    com.kbdunn.nimbus.web.share.ExternalShareController access$000(com.kbdunn.nimbus.web.share.ExternalShareView) -> a
    com.vaadin.ui.VerticalLayout access$100(com.kbdunn.nimbus.web.share.ExternalShareView) -> b
    void access$200(com.kbdunn.nimbus.web.share.ExternalShareView) -> c
    void access$300(com.kbdunn.nimbus.web.share.ExternalShareView,com.kbdunn.nimbus.api.model.NimbusFile,com.kbdunn.nimbus.api.model.NimbusFile) -> a
    com.vaadin.ui.TreeTable access$400(com.kbdunn.nimbus.web.share.ExternalShareView) -> d
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.share.ExternalShareView$1 -> com.kbdunn.nimbus.cE:
    long serialVersionUID -> serialVersionUID
    com.vaadin.ui.PasswordField val$pw -> gZ
    com.vaadin.ui.HorizontalLayout val$loginLayout -> ha
    com.kbdunn.nimbus.web.share.ExternalShareView this$0 -> hb
    void <init>(com.kbdunn.nimbus.web.share.ExternalShareView,com.vaadin.ui.PasswordField,com.vaadin.ui.HorizontalLayout) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.share.ExternalShareView$2 -> com.kbdunn.nimbus.cF:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.share.ExternalShareView this$0 -> hb
    void <init>(com.kbdunn.nimbus.web.share.ExternalShareView) -> <init>
    void nodeExpand(com.vaadin.ui.Tree$ExpandEvent) -> nodeExpand
com.kbdunn.nimbus.web.share.ExternalShareView$3 -> com.kbdunn.nimbus.cG:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.files.action.DownloadAction val$dl -> hc
    com.kbdunn.nimbus.web.share.ExternalShareView this$0 -> hb
    void <init>(com.kbdunn.nimbus.web.share.ExternalShareView,com.kbdunn.nimbus.web.files.action.DownloadAction) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.share.SendShareDialog -> com.kbdunn.nimbus.cH:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.share.ShareController controller -> hd
    com.kbdunn.nimbus.api.model.ShareBlock currentBlock -> gR
    com.kbdunn.nimbus.web.email.EmailForm emailForm -> gw
    com.kbdunn.nimbus.web.popup.PopupWindow popup -> de
    boolean layoutBuilt -> bB
    void <init>(com.kbdunn.nimbus.web.share.ShareController) -> <init>
    void buildLayout() -> V
    void setCurrentShareBlock(com.kbdunn.nimbus.api.model.ShareBlock) -> a
    void refresh() -> refresh
    void openPopup() -> dl
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
    void sendEmails() -> dB
    void sendEmail(java.lang.String,java.lang.String) -> c
    java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda) -> a
    void lambda$buttonClick$357cbfe5$1(com.vaadin.ui.Button$ClickEvent) -> c
    com.kbdunn.nimbus.api.model.ShareBlock access$000(com.kbdunn.nimbus.web.share.SendShareDialog) -> a
    com.kbdunn.nimbus.web.share.ShareController access$100(com.kbdunn.nimbus.web.share.SendShareDialog) -> b
com.kbdunn.nimbus.web.share.SendShareDialog$1 -> com.kbdunn.nimbus.cI:
    java.lang.String val$recipient -> he
    com.kbdunn.nimbus.web.share.SendShareDialog this$0 -> hf
    void <init>(com.kbdunn.nimbus.web.share.SendShareDialog,java.lang.String) -> <init>
    void operationFinished(com.kbdunn.nimbus.api.async.AsyncOperation) -> operationFinished
com.kbdunn.nimbus.web.share.SetPasswordDialog -> com.kbdunn.nimbus.cJ:
    long serialVersionUID -> serialVersionUID
    java.lang.String caption -> caption
    com.kbdunn.nimbus.web.share.ShareBlockEditor editor -> hg
    com.vaadin.ui.PasswordField enterPassword -> hh
    com.vaadin.ui.PasswordField confirmPassword -> ep
    com.kbdunn.nimbus.web.popup.PopupWindow popup -> de
    void <init>(com.kbdunn.nimbus.web.share.ShareBlockEditor) -> <init>
    void showDialog() -> bF
    void buildLayout() -> V
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
    void clearData() -> clearData
    com.kbdunn.nimbus.web.share.ShareBlockEditor access$000(com.kbdunn.nimbus.web.share.SetPasswordDialog) -> a
    void access$100(com.kbdunn.nimbus.web.share.SetPasswordDialog) -> b
    com.kbdunn.nimbus.web.popup.PopupWindow access$200(com.kbdunn.nimbus.web.share.SetPasswordDialog) -> c
com.kbdunn.nimbus.web.share.SetPasswordDialog$1 -> com.kbdunn.nimbus.cK:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.share.SetPasswordDialog this$0 -> hi
    void <init>(com.kbdunn.nimbus.web.share.SetPasswordDialog) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.share.ShareBlockEditor -> com.kbdunn.nimbus.cL:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.share.ShareController controller -> hd
    com.kbdunn.nimbus.api.model.ShareBlock block -> hj
    com.vaadin.ui.TextField name -> en
    com.vaadin.ui.TextArea message -> aM
    com.vaadin.ui.CheckBox shareExternally -> hk
    com.vaadin.ui.CheckBox allowUpload -> hl
    com.vaadin.ui.HorizontalLayout externalOptionsLayout -> hm
    com.vaadin.ui.HorizontalLayout popupLayout -> cR
    com.vaadin.ui.Label link -> dH
    com.vaadin.ui.DateField expires -> hn
    com.vaadin.ui.CheckBox pwProtected -> ho
    com.vaadin.data.Property$ValueChangeListener pwProtectedListener -> hp
    com.vaadin.data.Property$ValueChangeListener extShareListener -> hq
    com.vaadin.ui.Button changePassword -> hr
    com.vaadin.ui.Button shareLink -> hs
    com.vaadin.ui.Button editName -> ht
    com.vaadin.ui.Button editMessage -> hu
    com.kbdunn.nimbus.web.share.SetPasswordDialog setPwDialog -> hv
    com.vaadin.ui.PopupView viewLinkPopup -> hw
    void <init>() -> <init>
    void <init>(com.kbdunn.nimbus.api.model.ShareBlock,com.kbdunn.nimbus.web.share.ShareController) -> <init>
    com.kbdunn.nimbus.web.share.ShareController getController() -> dC
    void refresh() -> refresh
    void initializeComponents() -> dD
    void notifySetPasswordCancelled() -> dE
    void notifyPasswordSet(java.lang.String) -> A
    void setComponentSizeTiny() -> dF
    java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda) -> a
    void lambda$initializeComponents$61446b05$1(com.vaadin.ui.Button$ClickEvent) -> d
com.kbdunn.nimbus.web.share.ShareBlockEditor$1 -> com.kbdunn.nimbus.cM:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.share.ShareBlockEditor this$0 -> hx
    void <init>(com.kbdunn.nimbus.web.share.ShareBlockEditor) -> <init>
    void valueChange(com.vaadin.data.Property$ValueChangeEvent) -> valueChange
com.kbdunn.nimbus.web.share.ShareBlockEditor$2 -> com.kbdunn.nimbus.cN:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.share.ShareBlockEditor this$0 -> hx
    void <init>(com.kbdunn.nimbus.web.share.ShareBlockEditor) -> <init>
    void valueChange(com.vaadin.data.Property$ValueChangeEvent) -> valueChange
com.kbdunn.nimbus.web.share.ShareBlockEditor$3 -> com.kbdunn.nimbus.cO:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.share.ShareBlockEditor this$0 -> hx
    void <init>(com.kbdunn.nimbus.web.share.ShareBlockEditor) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.share.ShareBlockEditor$4 -> com.kbdunn.nimbus.cP:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.share.ShareBlockEditor this$0 -> hx
    void <init>(com.kbdunn.nimbus.web.share.ShareBlockEditor) -> <init>
    java.lang.String getMinimizedValueAsHTML() -> getMinimizedValueAsHTML
    com.vaadin.ui.Component getPopupComponent() -> getPopupComponent
com.kbdunn.nimbus.web.share.ShareBlockInfoPanel -> com.kbdunn.nimbus.cQ:
    long serialVersionUID -> serialVersionUID
    java.text.SimpleDateFormat DATE_FORMAT -> hy
    com.kbdunn.nimbus.api.model.ShareBlock block -> hj
    com.vaadin.ui.HorizontalLayout content -> Z
    com.kbdunn.nimbus.web.share.UserAccessLayout access -> hz
    com.vaadin.ui.Label icon -> dl
    com.vaadin.ui.Label name -> fK
    com.vaadin.ui.TextArea message -> aM
    void <init>() -> <init>
    void <init>(com.kbdunn.nimbus.api.model.ShareBlock) -> <init>
    void setShareBlock(com.kbdunn.nimbus.api.model.ShareBlock) -> b
    void refresh() -> refresh
    void buildLayout() -> V
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.share.ShareBlockLayout -> com.kbdunn.nimbus.cR:
    long serialVersionUID -> serialVersionUID
    java.lang.String EXPANDED_HEIGHT -> hA
    java.lang.String EXPANDED_WIDTH -> hB
    java.lang.String COLLAPSED_HEIGHT -> hC
    java.lang.String COLLAPSED_WIDTH -> hD
    com.kbdunn.nimbus.api.model.StorageDevice currentDevice -> hE
    java.util.Map selectedFiles -> hF
    com.vaadin.ui.AbsoluteLayout expandedLayout -> hG
    com.vaadin.ui.AbsoluteLayout collapsedLayout -> hH
    com.vaadin.ui.Panel treePanel -> hI
    com.vaadin.ui.VerticalLayout blockDetailLayout -> hJ
    com.kbdunn.nimbus.web.component.FileContainerComboBox driveSelect -> cf
    com.kbdunn.nimbus.web.component.FileSelectTree fileSelectTree -> hK
    com.vaadin.ui.Label noDrivesLabel -> hL
    com.kbdunn.nimbus.web.share.UserAccessLayout userAccessLayout -> hM
    com.vaadin.ui.Label iconLabel -> hN
    com.vaadin.ui.Label nameLabel -> hO
    com.vaadin.ui.Label subInfoLabel -> hP
    com.vaadin.ui.Label filesLabel -> hQ
    com.vaadin.ui.Label foldersLabel -> hR
    com.vaadin.ui.Label usersLabel -> hS
    com.vaadin.ui.Label viewsLabel -> hT
    boolean expandedBuilt -> hU
    void <init>(com.kbdunn.nimbus.api.model.ShareBlock,com.kbdunn.nimbus.web.share.ShareController) -> <init>
    void expand() -> expand
    void collapse() -> collapse
    void refresh() -> refresh
    void buildCollapsedLayout() -> dn
    void buildExpandedLayout() -> do
    void viewBlock() -> dG
    java.util.List getSelectedFiles() -> ai
    java.util.List getInitialSelection() -> ac
    com.kbdunn.nimbus.api.model.FileContainer getCurrentFileContainer() -> ad
    com.kbdunn.nimbus.api.model.NimbusUser getCurrentUser() -> g
    void valueChange(com.vaadin.data.Property$ValueChangeEvent) -> valueChange
    void commitCurrentSelection() -> dH
com.kbdunn.nimbus.web.share.ShareBlockLayout$1 -> com.kbdunn.nimbus.cS:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.share.ShareBlockLayout this$0 -> hV
    void <init>(com.kbdunn.nimbus.web.share.ShareBlockLayout) -> <init>
    void layoutClick(com.vaadin.event.LayoutEvents$LayoutClickEvent) -> layoutClick
com.kbdunn.nimbus.web.share.ShareController -> com.kbdunn.nimbus.cT:
    org.apache.log4j.Logger log -> f
    com.kbdunn.nimbus.api.server.FileShareService shareService -> ad
    com.kbdunn.nimbus.api.model.ShareBlock currentBlock -> gR
    com.kbdunn.nimbus.web.share.ShareListView shareListView -> hW
    com.kbdunn.nimbus.web.share.SendShareDialog sendShareDialog -> hX
    void <init>() -> <init>
    void openSendShareDialog(com.kbdunn.nimbus.api.model.ShareBlock) -> c
    boolean parseFragment(java.lang.String) -> B
    boolean setShareByToken(java.lang.String) -> C
    com.kbdunn.nimbus.api.model.ShareBlock getCurrentBlock() -> dp
    java.util.Map getBlockFilesByHardDrive(com.kbdunn.nimbus.api.model.ShareBlock) -> d
    boolean currentUserIsBlockOwner(com.kbdunn.nimbus.api.model.ShareBlock) -> e
    com.kbdunn.nimbus.api.model.NimbusUser getBlockOwner(com.kbdunn.nimbus.api.model.ShareBlock) -> f
    boolean newBlockNameIsValid(com.kbdunn.nimbus.api.model.ShareBlock,java.lang.String) -> a
    void saveBlock(com.kbdunn.nimbus.web.share.ShareBlockEditor) -> a
    void deleteBlock(com.kbdunn.nimbus.api.model.ShareBlock) -> g
    void setSharedFiles(com.kbdunn.nimbus.api.model.ShareBlock,java.util.List) -> a
    void setBlockAccess(com.kbdunn.nimbus.api.model.ShareBlock,java.util.List) -> b
    void refreshView() -> aW
    int getBlockFolderCount(com.kbdunn.nimbus.api.model.ShareBlock) -> h
    int getBlockFileCount(com.kbdunn.nimbus.api.model.ShareBlock) -> i
    int getBlockAccessCount(com.kbdunn.nimbus.api.model.ShareBlock) -> j
    void addBlockRecipient(com.kbdunn.nimbus.api.model.ShareBlock,java.lang.String) -> b
    void fireShareBlockModificationEvent() -> dI
    com.kbdunn.nimbus.api.server.FileShareService access$000(com.kbdunn.nimbus.web.share.ShareController) -> a
    com.kbdunn.nimbus.web.share.ShareListView access$100(com.kbdunn.nimbus.web.share.ShareController) -> b
    void access$200(com.kbdunn.nimbus.web.share.ShareController) -> c
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.share.ShareController$1 -> com.kbdunn.nimbus.cU:
    com.kbdunn.nimbus.web.share.ShareController this$0 -> hY
    void <init>(com.kbdunn.nimbus.web.share.ShareController) -> <init>
    int compare(com.kbdunn.nimbus.api.model.NimbusFile,com.kbdunn.nimbus.api.model.NimbusFile) -> b
    int compare(java.lang.Object,java.lang.Object) -> compare
com.kbdunn.nimbus.web.share.ShareController$2 -> com.kbdunn.nimbus.cV:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.api.model.ShareBlock val$block -> hZ
    com.kbdunn.nimbus.web.share.ShareController this$0 -> hY
    void <init>(com.kbdunn.nimbus.web.share.ShareController,com.kbdunn.nimbus.api.model.ShareBlock) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.share.ShareListView -> com.kbdunn.nimbus.cW:
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger log -> f
    java.lang.String NAME -> NAME
    com.kbdunn.nimbus.web.share.ShareController controller -> hd
    com.vaadin.ui.HorizontalLayout mySharesLayout -> ia
    com.vaadin.ui.HorizontalLayout sharedWithMeLayout -> ib
    boolean layoutBuilt -> bB
    void <init>(com.kbdunn.nimbus.web.share.ShareController) -> <init>
    void enter(com.vaadin.navigator.ViewChangeListener$ViewChangeEvent) -> enter
    void buildLayout() -> V
    void refreshMyShares() -> dJ
    void refreshTheirShares() -> dK
    com.kbdunn.nimbus.web.share.ShareBlockLayout addBlock(com.vaadin.ui.HorizontalLayout,com.kbdunn.nimbus.api.model.ShareBlock,java.lang.Integer) -> a
    void collapseAll() -> dL
    void access$000(com.kbdunn.nimbus.web.share.ShareListView) -> a
    com.vaadin.ui.HorizontalLayout access$100(com.kbdunn.nimbus.web.share.ShareListView) -> b
    com.kbdunn.nimbus.web.share.ShareBlockLayout access$200(com.kbdunn.nimbus.web.share.ShareListView,com.vaadin.ui.HorizontalLayout,com.kbdunn.nimbus.api.model.ShareBlock,java.lang.Integer) -> a
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.share.ShareListView$1 -> com.kbdunn.nimbus.cX:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.share.ShareListView this$0 -> ic
    void <init>(com.kbdunn.nimbus.web.share.ShareListView) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.share.ShareListView$2 -> com.kbdunn.nimbus.cY:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.share.ShareListView this$0 -> ic
    void <init>(com.kbdunn.nimbus.web.share.ShareListView) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.share.ShareListView$3 -> com.kbdunn.nimbus.cZ:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.share.ShareListView this$0 -> ic
    void <init>(com.kbdunn.nimbus.web.share.ShareListView) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.share.ShareView -> com.kbdunn.nimbus.da:
    long serialVersionUID -> serialVersionUID
    java.lang.String NAME -> NAME
    com.kbdunn.nimbus.web.files.FileManagerController controller -> ce
    com.kbdunn.nimbus.web.files.FileManagerLayout managerLayout -> id
    com.kbdunn.nimbus.web.share.ShareBlockInfoPanel infoPanel -> ie
    boolean layoutBuilt -> bB
    void <init>(com.kbdunn.nimbus.web.files.FileManagerController) -> <init>
    void enter(com.vaadin.navigator.ViewChangeListener$ViewChangeEvent) -> enter
    void refresh() -> refresh
    com.kbdunn.nimbus.web.files.FileManagerLayout getFileManagerLayout() -> dM
    com.kbdunn.nimbus.web.share.ShareBlockInfoPanel getInfoPanel() -> dN
    void buildLayout() -> V
com.kbdunn.nimbus.web.share.UserAccessLayout -> com.kbdunn.nimbus.db:
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger log -> f
    boolean ownerHidden -> if
    boolean editable -> editable
    com.vaadin.ui.Label header -> ig
    com.vaadin.ui.ComboBox userDropdown -> ih
    com.vaadin.ui.Button add -> fV
    com.kbdunn.nimbus.api.model.ShareBlock block -> hj
    com.vaadin.ui.CssLayout topRow -> ii
    com.vaadin.ui.VerticalLayout accessListLayout -> ij
    void <init>() -> <init>
    void <init>(com.kbdunn.nimbus.api.model.ShareBlock) -> <init>
    void setShareBlock(com.kbdunn.nimbus.api.model.ShareBlock) -> b
    void setHeader(java.lang.String) -> setHeader
    void build() -> Z
    void refresh() -> refresh
    void addAccess(com.kbdunn.nimbus.api.model.ShareBlockAccess) -> a
    void setAccess(java.util.List) -> i
    void refreshUserDropdown() -> dO
    java.util.List getValue() -> dP
    boolean userAdded(com.kbdunn.nimbus.api.model.NimbusUser) -> b
    void setEditable(boolean) -> setEditable
    void setHideOwner(boolean) -> s
    com.vaadin.ui.ComboBox access$000(com.kbdunn.nimbus.web.share.UserAccessLayout) -> a
    org.apache.log4j.Logger access$100() -> dQ
    void access$200(com.kbdunn.nimbus.web.share.UserAccessLayout) -> b
    boolean access$300(com.kbdunn.nimbus.web.share.UserAccessLayout,com.kbdunn.nimbus.api.model.NimbusUser) -> a
    com.kbdunn.nimbus.api.model.ShareBlock access$400(com.kbdunn.nimbus.web.share.UserAccessLayout) -> c
    void access$500(com.kbdunn.nimbus.web.share.UserAccessLayout,com.kbdunn.nimbus.api.model.ShareBlockAccess) -> a
    com.vaadin.ui.VerticalLayout access$600(com.kbdunn.nimbus.web.share.UserAccessLayout) -> d
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.share.UserAccessLayout$1 -> com.kbdunn.nimbus.dc:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.share.UserAccessLayout this$0 -> ik
    void <init>(com.kbdunn.nimbus.web.share.UserAccessLayout) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.share.UserAccessLayout$UserLayout -> com.kbdunn.nimbus.dd:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.api.model.ShareBlockAccess access -> il
    com.vaadin.ui.CheckBox read -> im
    com.vaadin.ui.CheckBox create -> in
    com.vaadin.ui.CheckBox update -> io
    com.vaadin.ui.CheckBox delete -> ip
    com.vaadin.ui.Button remove -> fO
    com.kbdunn.nimbus.web.share.UserAccessLayout this$0 -> ik
    void <init>(com.kbdunn.nimbus.web.share.UserAccessLayout,com.kbdunn.nimbus.api.model.ShareBlockAccess) -> <init>
    void setEditable(boolean) -> setEditable
    com.kbdunn.nimbus.api.model.ShareBlockAccess getValue() -> dR
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.tasks.ScrollButtons -> com.kbdunn.nimbus.de:
    long serialVersionUID -> serialVersionUID
    com.vaadin.ui.Button back -> iq
    com.vaadin.ui.Button next -> ir
    void <init>(com.kbdunn.nimbus.web.tasks.TaskController) -> <init>
    void setBackEnabled(boolean) -> t
    void setNextEnabled(boolean) -> u
com.kbdunn.nimbus.web.tasks.ScrollButtons$1 -> com.kbdunn.nimbus.df:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.tasks.TaskController val$controller -> is
    com.kbdunn.nimbus.web.tasks.ScrollButtons this$0 -> it
    void <init>(com.kbdunn.nimbus.web.tasks.ScrollButtons,com.kbdunn.nimbus.web.tasks.TaskController) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.tasks.ScrollButtons$2 -> com.kbdunn.nimbus.dg:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.tasks.TaskController val$controller -> is
    com.kbdunn.nimbus.web.tasks.ScrollButtons this$0 -> it
    void <init>(com.kbdunn.nimbus.web.tasks.ScrollButtons,com.kbdunn.nimbus.web.tasks.TaskController) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.tasks.TaskController -> com.kbdunn.nimbus.dh:
    org.apache.log4j.Logger log -> f
    com.kbdunn.nimbus.web.tasks.ToggleButton toggleButton -> iu
    com.kbdunn.nimbus.web.tasks.ScrollButtons scrollButtons -> iv
    com.kbdunn.nimbus.web.tasks.Taskbar taskbar -> c
    java.util.List tasks -> iw
    boolean expanded -> expanded
    int taskIndex -> ix
    void <init>() -> <init>
    com.kbdunn.nimbus.web.tasks.Taskbar getTaskbar() -> dS
    boolean isExanded() -> dT
    void expand() -> expand
    void collapse() -> collapse
    void addAndStartTask(com.kbdunn.nimbus.api.async.AsyncOperation) -> a
    void addTask(com.kbdunn.nimbus.api.async.AsyncOperation) -> b
    void addTask(com.kbdunn.nimbus.web.tasks.TaskItem) -> a
    void removeTask(com.kbdunn.nimbus.web.tasks.TaskItem) -> b
    void scrollNext() -> dU
    void scrollBack() -> dV
    void refreshDisplay() -> dW
    void hide() -> hide
    void <clinit>() -> <clinit>
com.kbdunn.nimbus.web.tasks.TaskItem -> com.kbdunn.nimbus.di:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.api.async.AsyncOperation task -> iy
    com.vaadin.ui.Label name -> fK
    com.vaadin.ui.Label info -> cU
    com.vaadin.ui.ProgressBar progressBar -> iz
    void <init>(com.kbdunn.nimbus.api.async.AsyncOperation) -> <init>
    void buildLayout() -> V
    void operationProgressed(float) -> operationProgressed
    com.kbdunn.nimbus.web.tasks.TaskItem getMe() -> dX
    void operationFinished(com.kbdunn.nimbus.api.async.AsyncOperation) -> operationFinished
    void taskDone() -> dY
    com.vaadin.ui.ProgressBar access$000(com.kbdunn.nimbus.web.tasks.TaskItem) -> c
    com.vaadin.ui.Label access$100(com.kbdunn.nimbus.web.tasks.TaskItem) -> d
    com.kbdunn.nimbus.api.async.AsyncOperation access$200(com.kbdunn.nimbus.web.tasks.TaskItem) -> e
    com.kbdunn.nimbus.web.tasks.TaskItem access$300(com.kbdunn.nimbus.web.tasks.TaskItem) -> f
com.kbdunn.nimbus.web.tasks.TaskItem$1 -> com.kbdunn.nimbus.dj:
    float val$currentProgress -> iA
    com.kbdunn.nimbus.web.tasks.TaskItem this$0 -> iB
    void <init>(com.kbdunn.nimbus.web.tasks.TaskItem,float) -> <init>
    void run() -> run
com.kbdunn.nimbus.web.tasks.TaskItem$2 -> com.kbdunn.nimbus.dk:
    com.kbdunn.nimbus.web.tasks.TaskItem this$0 -> iB
    void <init>(com.kbdunn.nimbus.web.tasks.TaskItem) -> <init>
    void run() -> run
com.kbdunn.nimbus.web.tasks.Taskbar -> com.kbdunn.nimbus.dl:
    long serialVersionUID -> serialVersionUID
    com.vaadin.ui.VerticalLayout currentTasks -> iC
    void <init>(com.kbdunn.nimbus.web.tasks.ToggleButton,com.kbdunn.nimbus.web.tasks.ScrollButtons) -> <init>
    void setCurrentTasks(java.util.List) -> j
    int getCurrentTaskCount() -> dZ
com.kbdunn.nimbus.web.tasks.ToggleButton -> com.kbdunn.nimbus.dm:
    long serialVersionUID -> serialVersionUID
    com.kbdunn.nimbus.web.tasks.TaskController controller -> iD
    void <init>(com.kbdunn.nimbus.web.tasks.TaskController) -> <init>
    void buttonClick(com.vaadin.ui.Button$ClickEvent) -> buttonClick
com.kbdunn.nimbus.web.theme.NimbusTheme -> com.kbdunn.nimbus.dn:
    java.lang.String MEDIA_ELEMENT_PLAYER -> iE
    java.lang.String LABEL_ELLIPSIS_OVERFLOW -> iF
    java.lang.String LABEL_CENTER_ALIGN -> iG
    java.lang.String OPTIONGROUP_ELLIPSIS_OVERFLOW -> iH
    java.lang.String LABEL_CAPTION_ONLY -> iI
    java.lang.String LABEL_SUCCESS_COLOR -> iJ
    java.lang.String LABEL_WARNING_COLOR -> iK
    java.lang.String LABEL_ERROR_COLOR -> iL
    void <init>() -> <init>
com.kbdunn.nimbus.web.util.NimbusFileTypeResolver -> com.kbdunn.nimbus.do:
    long serialVersionUID -> serialVersionUID
    java.lang.String DEFAULT_MIME_TYPE -> DEFAULT_MIME_TYPE
    java.lang.String initialExtToMIMEMap -> iM
    java.util.HashMap extToMIMEMap -> iN
    java.util.HashMap MIMEToIconMap -> iO
    java.util.HashMap MIMEToAceMap -> iP
    void <init>() -> <init>
    java.lang.String getMIMEType(java.lang.String) -> getMIMEType
    java.lang.String getExtension(java.lang.String) -> getExtension
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome getIcon(java.lang.String) -> D
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome getIconByMimeType(java.lang.String) -> E
    com.kbdunn.vaadin.addons.fontawesome.FontAwesome getIcon(com.kbdunn.nimbus.api.model.NimbusFile) -> t
    org.vaadin.aceeditor.AceMode getAceMode(com.kbdunn.nimbus.api.model.NimbusFile) -> u
    boolean isPlainTextFile(com.kbdunn.nimbus.api.model.NimbusFile) -> v
    java.lang.String getMIMEType(com.kbdunn.nimbus.api.model.NimbusFile) -> w
    void addExtension(java.lang.String,java.lang.String) -> addExtension
    void addIcon(java.lang.String,com.kbdunn.vaadin.addons.fontawesome.FontAwesome) -> a
    void addAceMode(java.lang.String,org.vaadin.aceeditor.AceMode) -> a
    java.util.Map getExtensionToMIMETypeMapping() -> getExtensionToMIMETypeMapping
    java.util.Map getMIMETypeToIconMapping() -> getMIMETypeToIconMapping
    void <clinit>() -> <clinit>
