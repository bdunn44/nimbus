SET DATABASE UNIQUE NAME HSQLDB4DA56ED75F
SET DATABASE GC 0
SET DATABASE DEFAULT RESULT MEMORY ROWS 0
SET DATABASE EVENT LOG LEVEL 0
SET DATABASE SQL NAMES FALSE
SET DATABASE SQL REFERENCES FALSE
SET DATABASE SQL SIZE TRUE
SET DATABASE SQL TYPES FALSE
SET DATABASE SQL TDC DELETE TRUE
SET DATABASE SQL TDC UPDATE TRUE
SET DATABASE SQL TRANSLATE TTI TYPES TRUE
SET DATABASE SQL CONCAT NULLS TRUE
SET DATABASE SQL UNIQUE NULLS TRUE
SET DATABASE SQL CONVERT TRUNCATE TRUE
SET DATABASE SQL AVG SCALE 0
SET DATABASE SQL DOUBLE NAN TRUE
SET DATABASE TRANSACTION CONTROL LOCKS
SET DATABASE DEFAULT ISOLATION LEVEL READ COMMITTED
SET DATABASE TRANSACTION ROLLBACK ON CONFLICT TRUE
SET DATABASE TEXT TABLE DEFAULTS ''
SET FILES WRITE DELAY 0
SET FILES BACKUP INCREMENT TRUE
SET FILES CACHE SIZE 10000
SET FILES CACHE ROWS 50000
SET FILES SCALE 32
SET FILES LOB SCALE 32
SET FILES DEFRAG 0
SET FILES NIO TRUE
SET FILES NIO SIZE 256
SET FILES LOG TRUE
SET FILES LOG SIZE 50
CREATE USER SA PASSWORD DIGEST '0e78d66f33c484a3c3b36d69bd3114cf'
ALTER USER SA SET LOCAL TRUE
CREATE SCHEMA PUBLIC AUTHORIZATION DBA
CREATE SCHEMA NIMBUS AUTHORIZATION DBA
SET SCHEMA NIMBUS
CREATE CACHED TABLE NIMBUS.SYS(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,VERSION VARCHAR(50),IS_AUTO_SCAN BOOLEAN,CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE)
ALTER TABLE NIMBUS.SYS ALTER COLUMN ID RESTART WITH 1
CREATE CACHED TABLE NIMBUS.STORAGE(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,TYPE VARCHAR(10),NAME VARCHAR(50),PATH VARCHAR(50),DEVICE_PATH VARCHAR(100),LABEL VARCHAR(50),UUID VARCHAR(50),IS_CONNECTED BOOLEAN,IS_MOUNTED BOOLEAN,IS_RECONCILED BOOLEAN,IS_AUTONOMOUS BOOLEAN,SIZE BIGINT,USED BIGINT,CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE)
ALTER TABLE NIMBUS.STORAGE ALTER COLUMN ID RESTART WITH 0
CREATE INDEX IDX_STORAGE_NAME ON NIMBUS.STORAGE(NAME)
CREATE INDEX IDX_STORAGE_TYPE ON NIMBUS.STORAGE(TYPE)
CREATE INDEX IDX_STORAGE_PATH ON NIMBUS.STORAGE(PATH)
CREATE CACHED TABLE NIMBUS.USER(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,NAME VARCHAR(50) NOT NULL,EMAIL VARCHAR(75) NOT NULL,PW_DIGEST VARCHAR(255) NOT NULL,API_TOKEN VARCHAR(64) NOT NULL,HAS_TEMP_PW BOOLEAN NOT NULL,IS_ADMIN BOOLEAN,SMTP_PW VARCHAR(75),SMTP_SERVER VARCHAR(75),SMTP_PORT VARCHAR(5),SMTP_SSL_ENABLED BOOLEAN,SMTP_SSL_PORT VARCHAR(5),OAUTH_EMAIL_SERVICE_NAME VARCHAR(50),CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,CONSTRAINT USER_UNQ_NAME UNIQUE(NAME),CONSTRAINT USER_UNQ_EMAIL UNIQUE(EMAIL))
ALTER TABLE NIMBUS.USER ALTER COLUMN ID RESTART WITH 0
CREATE INDEX IDX_USER_NAME ON NIMBUS.USER(NAME)
CREATE INDEX IDX_USER_EMAIL ON NIMBUS.USER(EMAIL)
CREATE CACHED TABLE NIMBUS.USER_OAUTH(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,USER_ID BIGINT,SERVICE_NAME VARCHAR(50) NOT NULL,ACCESS_TOKEN VARCHAR(2000),REFRESH_TOKEN VARCHAR(2000),EXPIRES_IN INTEGER,LAST_REFRESH BIGINT,TOKEN_TYPE VARCHAR(255),OAUTH1_PUBLIC_TOKEN VARCHAR(2000),SCOPE VARCHAR(2000),CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,CONSTRAINT USER_OAUTH_UNQ_USER_API UNIQUE(USER_ID,SERVICE_NAME),CONSTRAINT USER_OAUTH_FK_USER FOREIGN KEY(USER_ID) REFERENCES NIMBUS.USER(ID) ON DELETE CASCADE)
ALTER TABLE NIMBUS.USER_OAUTH ALTER COLUMN ID RESTART WITH 0
CREATE INDEX IDX_USER_SERVICE_NAME ON NIMBUS.USER_OAUTH(SERVICE_NAME)
CREATE CACHED TABLE NIMBUS.USER_STORAGE(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,USER_ID BIGINT,STORAGE_ID BIGINT,SYNC_ROOT BOOLEAN,CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,CONSTRAINT USER_STORAGE_UNQ_USER_STORAGE UNIQUE(USER_ID,STORAGE_ID),CONSTRAINT USER_STORAGE_FK_STORAGE FOREIGN KEY(STORAGE_ID) REFERENCES NIMBUS.STORAGE(ID) ON DELETE CASCADE,CONSTRAINT USER_STORAGE_FK_USER FOREIGN KEY(USER_ID) REFERENCES NIMBUS.USER(ID) ON DELETE CASCADE)
ALTER TABLE NIMBUS.USER_STORAGE ALTER COLUMN ID RESTART WITH 0
CREATE CACHED TABLE NIMBUS.FILE(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,USER_STORAGE_ID BIGINT NOT NULL,PATH VARCHAR(4096) NOT NULL,NAME VARCHAR(255) GENERATED ALWAYS AS(REVERSE(SUBSTRING(REVERSE(NIMBUS.FILE.PATH) FROM 0 FOR LOCATE('/',REVERSE(NIMBUS.FILE.PATH))))),PARENT_PATH VARCHAR(4096) GENERATED ALWAYS AS(REVERSE(SUBSTRING(REVERSE(NIMBUS.FILE.PATH) FROM LOCATE('/',REVERSE(NIMBUS.FILE.PATH))+1))),SIZE BIGINT,IS_DIRECTORY BOOLEAN NOT NULL,IS_RECONCILED BOOLEAN NOT NULL,LAST_RECONCILED BIGINT,IS_SONG BOOLEAN NOT NULL,IS_VIDEO BOOLEAN NOT NULL,IS_IMAGE BOOLEAN NOT NULL,TITLE VARCHAR(200),SEC_LENGTH INTEGER,TRACK_NO INTEGER,ARTIST VARCHAR(200),ALBUM VARCHAR(200),ALBUM_YEAR VARCHAR(200),IS_LIBRARY_REMOVED BOOLEAN,MD5 VARCHAR(32),LAST_HASHED BIGINT,LAST_MODIFIED BIGINT,CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,CONSTRAINT FILE_UNQ_PATH UNIQUE(PATH),CONSTRAINT FILE_FK_USER_STORAGE FOREIGN KEY(USER_STORAGE_ID) REFERENCES NIMBUS.USER_STORAGE(ID) ON DELETE CASCADE)
ALTER TABLE NIMBUS.FILE ALTER COLUMN ID RESTART WITH 0
CREATE INDEX IDX_FILE_PATH ON NIMBUS.FILE(PATH)
CREATE INDEX IDX_FILE_PRNT_PATH ON NIMBUS.FILE(PARENT_PATH)
CREATE INDEX IDX_FILE_DIR ON NIMBUS.FILE(IS_DIRECTORY)
CREATE INDEX IDX_FILE_SNG ON NIMBUS.FILE(IS_SONG)
CREATE INDEX IDX_FILE_VID ON NIMBUS.FILE(IS_VIDEO)
CREATE INDEX IDX_FILE_IMG ON NIMBUS.FILE(IS_IMAGE)
CREATE INDEX IDX_FILE_ART ON NIMBUS.FILE(ARTIST)
CREATE INDEX IDX_FILE_ALB ON NIMBUS.FILE(ALBUM)
CREATE CACHED TABLE NIMBUS.PLAYLIST(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,USER_ID BIGINT,NAME VARCHAR(200) NOT NULL,CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,CONSTRAINT PLAYLIST_UNQ UNIQUE(USER_ID,NAME),CONSTRAINT PLAYLIST_FK_USER FOREIGN KEY(USER_ID) REFERENCES NIMBUS.USER(ID) ON DELETE CASCADE)
ALTER TABLE NIMBUS.PLAYLIST ALTER COLUMN ID RESTART WITH 0
CREATE CACHED TABLE NIMBUS.PLAYLIST_FILE(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,PLAYLIST_ID BIGINT NOT NULL,FILE_ID BIGINT NOT NULL,PLAY_ORDER INTEGER,CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,CONSTRAINT PLAYLIST_F_UNQ UNIQUE(PLAYLIST_ID,FILE_ID),CONSTRAINT PLAYLIST_F_FK_PLAYLIST FOREIGN KEY(PLAYLIST_ID) REFERENCES NIMBUS.PLAYLIST(ID) ON DELETE CASCADE,CONSTRAINT PLAYLIST_F_FK_FILE FOREIGN KEY(FILE_ID) REFERENCES NIMBUS.FILE(ID) ON DELETE CASCADE)
ALTER TABLE NIMBUS.PLAYLIST_FILE ALTER COLUMN ID RESTART WITH 0
CREATE CACHED TABLE NIMBUS.SHARE_BLOCK(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,USER_ID BIGINT NOT NULL,IS_EXTERNAL BOOLEAN NOT NULL,ALLOW_EXT_UPLOAD BOOLEAN,TOKEN VARCHAR(50) NOT NULL,NAME VARCHAR(50),MSG VARCHAR(500),VISIT_COUNT INTEGER,EXP_DATE TIMESTAMP(2) WITH TIME ZONE,PW_DIGEST VARCHAR(255),CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,CONSTRAINT SHARE_BLOCK_FK_USER FOREIGN KEY(USER_ID) REFERENCES NIMBUS.USER(ID) ON DELETE CASCADE,CONSTRAINT SHARE_BLOCK_UNQ_TOKEN UNIQUE(TOKEN),CONSTRAINT SHARE_BLOCK_UNQ_NAME UNIQUE(USER_ID,NAME))
ALTER TABLE NIMBUS.SHARE_BLOCK ALTER COLUMN ID RESTART WITH 0
CREATE INDEX IDX_SB_TOKEN ON NIMBUS.SHARE_BLOCK(TOKEN)
CREATE CACHED TABLE NIMBUS.SHARE_BLOCK_FILE(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,SHARE_BLOCK_ID BIGINT NOT NULL,FILE_ID BIGINT NOT NULL,NOTE VARCHAR(100),CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,CONSTRAINT SHARE_BLOCK_FILE_FK_BLOCK FOREIGN KEY(SHARE_BLOCK_ID) REFERENCES NIMBUS.SHARE_BLOCK(ID) ON DELETE CASCADE,CONSTRAINT SHARE_BLOCK_FILE_FK_FILE FOREIGN KEY(FILE_ID) REFERENCES NIMBUS.FILE(ID) ON DELETE CASCADE,CONSTRAINT SHARE_BLOCK_FILE_UNQ UNIQUE(SHARE_BLOCK_ID,FILE_ID))
ALTER TABLE NIMBUS.SHARE_BLOCK_FILE ALTER COLUMN ID RESTART WITH 0
CREATE CACHED TABLE NIMBUS.SHARE_BLOCK_ACCESS(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,SHARE_BLOCK_ID BIGINT NOT NULL,USER_ID BIGINT NOT NULL,CAN_CREATE BOOLEAN NOT NULL,CAN_UPDATE BOOLEAN NOT NULL,CAN_DELETE BOOLEAN NOT NULL,CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,CONSTRAINT SHARE_BLOCK_ACCESS_FK_BLOCK FOREIGN KEY(SHARE_BLOCK_ID) REFERENCES NIMBUS.SHARE_BLOCK(ID) ON DELETE CASCADE,CONSTRAINT SHARE_BLOCK_ACCESS_FK_USER FOREIGN KEY(USER_ID) REFERENCES NIMBUS.USER(ID) ON DELETE CASCADE,CONSTRAINT SHARE_BLOCK_ACCESS_UNQ UNIQUE(SHARE_BLOCK_ID,USER_ID))
ALTER TABLE NIMBUS.SHARE_BLOCK_ACCESS ALTER COLUMN ID RESTART WITH 0
CREATE CACHED TABLE NIMBUS.SHARE_BLOCK_RECIP(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,SHARE_BLOCK_ID BIGINT NOT NULL,EMAIL VARCHAR(255) NOT NULL,CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,CONSTRAINT BLOCK_RECIP_FK_BLOCK FOREIGN KEY(SHARE_BLOCK_ID) REFERENCES NIMBUS.SHARE_BLOCK(ID) ON DELETE CASCADE)
ALTER TABLE NIMBUS.SHARE_BLOCK_RECIP ALTER COLUMN ID RESTART WITH 0
CREATE CACHED TABLE NIMBUS.MSG(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,USER_ID BIGINT,SHARE_BLOCK_ID BIGINT,USER_ID_RECIP BIGINT,IS_ANON BOOLEAN,IP VARCHAR(50),MESSAGE VARCHAR(2000),CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,CONSTRAINT SHARE_BLOCK_MSG_FK_SHARE FOREIGN KEY(SHARE_BLOCK_ID) REFERENCES NIMBUS.SHARE_BLOCK(ID) ON DELETE CASCADE,CONSTRAINT SHARE_BLOCK_MSG_FK_USER FOREIGN KEY(USER_ID) REFERENCES NIMBUS.USER(ID) ON DELETE CASCADE,CONSTRAINT SHARE_BLOCK_MSG_FK_USER_RECIP FOREIGN KEY(USER_ID_RECIP) REFERENCES NIMBUS.USER(ID) ON DELETE CASCADE)
ALTER TABLE NIMBUS.MSG ALTER COLUMN ID RESTART WITH 0
ALTER SEQUENCE SYSTEM_LOBS.LOB_ID RESTART WITH 1
SET DATABASE DEFAULT INITIAL SCHEMA PUBLIC
SET TABLE NIMBUS.SYS INDEX '1 0 1'
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.SQL_IDENTIFIER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.YES_OR_NO TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.TIME_STAMP TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CARDINAL_NUMBER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CHARACTER_DATA TO PUBLIC
GRANT DBA TO SA
SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
