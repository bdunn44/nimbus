com.kbdunn.nimbus.server.Launcher -> com.kbdunn.nimbus.server.Launcher:
    org.apache.log4j.Logger log -> a
    com.kbdunn.nimbus.server.Launcher instance -> b
    56:63:void main(java.lang.String[]) -> main
    66:66:com.kbdunn.nimbus.server.Launcher instance() -> a
    69:69:void <init>() -> <init>
    73:79:void launch() -> b
    82:131:void configureLog4j() -> n
    137:311:void runServer() -> o
    314:329:void runDataPrimers() -> p
    51:51:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.NimbusContext -> server.a:
    com.kbdunn.nimbus.server.NimbusContext instance -> c
    com.kbdunn.nimbus.server.service.LocalUserService userService -> d
    com.kbdunn.nimbus.server.service.LocalFileService fileService -> e
    com.kbdunn.nimbus.server.service.LocalStorageService storageService -> f
    com.kbdunn.nimbus.server.service.LocalMediaLibraryService mediaLibraryService -> g
    com.kbdunn.nimbus.server.service.LocalFileShareService fileShareService -> h
    com.kbdunn.nimbus.server.service.LocalPropertiesService propertiesService -> i
    com.kbdunn.nimbus.server.service.LocalAsyncService asyncService -> j
    com.kbdunn.nimbus.server.service.LocalOAuthService oAuthService -> k
    27:44:void <init>() -> <init>
    47:50:com.kbdunn.nimbus.server.NimbusContext instance() -> q
    54:54:com.kbdunn.nimbus.server.service.LocalUserService getUserService() -> r
    58:58:com.kbdunn.nimbus.server.service.LocalFileService getFileService() -> s
    62:62:com.kbdunn.nimbus.server.service.LocalStorageService getStorageService() -> t
    66:66:com.kbdunn.nimbus.server.service.LocalMediaLibraryService getMediaLibraryService() -> u
    70:70:com.kbdunn.nimbus.server.service.LocalFileShareService getFileShareService() -> v
    74:74:com.kbdunn.nimbus.server.service.LocalPropertiesService getPropertiesService() -> w
    78:78:com.kbdunn.nimbus.server.service.LocalAsyncService getAsyncService() -> x
    82:82:com.kbdunn.nimbus.server.service.LocalOAuthService getOAuthService() -> y
com.kbdunn.nimbus.server.api.EntityDecorationFilter -> server.b:
    16:16:void <init>() -> <init>
    21:31:void filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext) -> filter
    34:45:com.kbdunn.nimbus.api.rest.entity.NimbusUserDecorator decorateNimbusUser(com.kbdunn.nimbus.api.model.NimbusUser) -> a
com.kbdunn.nimbus.server.api.FilesResource -> server.c:
    javax.servlet.ServletContext context -> l
    19:19:void <init>() -> <init>
    24:24:com.kbdunn.nimbus.api.server.FileService getFileService() -> getFileService
    30:33:javax.ws.rs.core.Response getFile(java.lang.Long) -> a
    39:46:javax.ws.rs.core.Response getFile(java.lang.String) -> a
com.kbdunn.nimbus.server.api.HmacRequestFilter -> server.d:
    org.apache.log4j.Logger log -> a
    java.lang.String REQUEST_API_TOKEN -> m
    com.kbdunn.nimbus.api.rest.HMAC hmacUtil -> n
    34:40:void <init>() -> <init>
    44:136:void filter(javax.ws.rs.container.ContainerRequestContext) -> filter
    139:144:void devModeOrThrowIae(java.lang.String) -> b
    147:151:java.util.Map toMap(javax.ws.rs.core.MultivaluedMap) -> a
    36:36:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.api.HmacResponseFilter -> server.e:
    org.apache.log4j.Logger log -> a
    javax.ws.rs.ext.ContextResolver mapperResolver -> o
    32:38:void <init>() -> <init>
    42:71:void filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext) -> filter
    26:26:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.api.JacksonContextResolver -> server.f:
    com.fasterxml.jackson.databind.ObjectMapper objectMapper -> p
    20:33:void <init>() -> <init>
    37:37:com.fasterxml.jackson.databind.ObjectMapper getContext(java.lang.Class) -> a
    14:14:java.lang.Object getContext(java.lang.Class) -> getContext
com.kbdunn.nimbus.server.api.UsersResource -> server.g:
    org.apache.log4j.Logger log -> a
    javax.servlet.ServletContext context -> l
    35:35:void <init>() -> <init>
    42:42:com.kbdunn.nimbus.api.server.UserService getUserService() -> getUserService
    46:46:com.kbdunn.nimbus.api.server.StorageService getStorageService() -> getStorageService
    50:50:com.kbdunn.nimbus.api.server.FileService getFileService() -> getFileService
    55:55:javax.ws.rs.core.Response getUsers() -> z
    60:64:javax.ws.rs.core.Response postUser(com.kbdunn.nimbus.api.model.NimbusUser) -> b
    70:73:javax.ws.rs.core.Response putUser(java.lang.Long,com.kbdunn.nimbus.api.model.NimbusUser) -> a
    79:82:javax.ws.rs.core.Response getUser(java.lang.Long) -> b
    88:91:javax.ws.rs.core.Response getUser(java.lang.String) -> c
    98:113:javax.ws.rs.core.Response getUserDevices(java.lang.Long,java.lang.Boolean) -> a
    119:125:javax.ws.rs.core.Response getUserDevice(java.lang.Long,java.lang.Long) -> a
    131:141:javax.ws.rs.core.Response getUserDeviceHomeContents(java.lang.Long,java.lang.Long) -> b
    37:37:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.async.AsyncServerOperation -> server.h:
    org.apache.log4j.Logger log -> a
    com.kbdunn.nimbus.api.async.AsyncConfiguration config -> config
    boolean started -> started
    boolean running -> running
    boolean succeeded -> succeeded
    float progress -> progress
    float lastProgress -> lastProgress
    long lastNotifyTime -> lastNotifyTime
    java.util.List progressListeners -> progressListeners
    java.util.List finishedListeners -> finishedListeners
    18:33:void <init>(com.kbdunn.nimbus.api.async.AsyncConfiguration) -> <init>
    void doOperation() -> doOperation
    40:54:void run() -> run
    61:61:com.kbdunn.nimbus.api.async.AsyncConfiguration getConfiguration() -> c
    66:66:boolean started() -> d
    71:71:boolean running() -> e
    76:76:boolean finished() -> finished
    84:84:boolean succeeded() -> f
    88:89:void setSucceeded(boolean) -> setSucceeded
    96:96:float getProgress() -> g
    100:123:void setProgress(float) -> setProgress
    127:127:java.util.List getProgressListeners() -> h
    132:133:void addProgressListener(com.kbdunn.nimbus.api.async.ProgressListener) -> a
    137:138:void removeProgressListener(com.kbdunn.nimbus.api.async.ProgressListener) -> b
    142:142:java.util.List getFinishedListeners() -> i
    147:148:void addFinishedListener(com.kbdunn.nimbus.api.async.FinishedListener) -> a
    152:153:void removeFinishedListener(com.kbdunn.nimbus.api.async.FinishedListener) -> b
    15:15:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.async.AsyncServerOperationQueue -> server.i:
    org.apache.log4j.Logger log -> a
    java.util.List operations -> q
    int total -> total
    int finished -> r
    20:32:void <init>(java.lang.String,java.util.List) -> <init>
    36:36:int getOperationCount() -> j
    41:41:int getFinishedCount() -> k
    46:50:java.util.List getOperations() -> getOperations
    55:59:void operationProgressed(float) -> b
    63:70:void operationFinished(com.kbdunn.nimbus.api.async.AsyncOperation) -> a
    74:80:void doOperation() -> doOperation
    17:17:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.async.CopyOperation -> server.j:
    java.util.List sources -> sources
    com.kbdunn.nimbus.api.model.NimbusFile targetFolder -> s
    java.util.List resolutions -> t
    19:23:void <init>(com.kbdunn.nimbus.api.async.AsyncConfiguration,com.kbdunn.nimbus.api.model.NimbusFile,com.kbdunn.nimbus.api.model.NimbusFile) -> <init>
    26:30:void <init>(com.kbdunn.nimbus.api.async.AsyncConfiguration,java.util.List,com.kbdunn.nimbus.api.model.NimbusFile) -> <init>
    33:38:void <init>(com.kbdunn.nimbus.api.async.AsyncConfiguration,com.kbdunn.nimbus.api.model.NimbusFile,com.kbdunn.nimbus.api.model.NimbusFile,java.util.List) -> <init>
    41:46:void <init>(com.kbdunn.nimbus.api.async.AsyncConfiguration,java.util.List,com.kbdunn.nimbus.api.model.NimbusFile,java.util.List) -> <init>
    49:53:java.lang.String generateName(java.lang.String) -> d
    58:72:void doOperation() -> doOperation
com.kbdunn.nimbus.server.async.EmailOperation -> server.k:
    com.kbdunn.nimbus.api.async.EmailTransport transport -> u
    com.kbdunn.nimbus.api.model.Email email -> v
    13:17:void <init>(com.kbdunn.nimbus.api.async.AsyncConfiguration,com.kbdunn.nimbus.api.async.EmailTransport,com.kbdunn.nimbus.api.model.Email) -> <init>
    20:20:com.kbdunn.nimbus.api.model.Email getEmail() -> A
    25:27:void doOperation() -> doOperation
com.kbdunn.nimbus.server.async.MoveOperation -> server.l:
    16:18:void <init>(com.kbdunn.nimbus.api.async.AsyncConfiguration,com.kbdunn.nimbus.api.model.NimbusFile,com.kbdunn.nimbus.api.model.NimbusFile) -> <init>
    21:23:void <init>(com.kbdunn.nimbus.api.async.AsyncConfiguration,java.util.List,com.kbdunn.nimbus.api.model.NimbusFile) -> <init>
    26:28:void <init>(com.kbdunn.nimbus.api.async.AsyncConfiguration,com.kbdunn.nimbus.api.model.NimbusFile,com.kbdunn.nimbus.api.model.NimbusFile,java.util.List) -> <init>
    31:33:void <init>(com.kbdunn.nimbus.api.async.AsyncConfiguration,java.util.List,com.kbdunn.nimbus.api.model.NimbusFile,java.util.List) -> <init>
    37:48:void doOperation() -> doOperation
com.kbdunn.nimbus.server.async.ReconcileOperation -> server.m:
    org.apache.log4j.Logger log -> a
    java.util.List runningReconciliations -> w
    boolean paused -> x
    com.kbdunn.nimbus.api.model.StorageDevice device -> y
    com.kbdunn.nimbus.server.service.LocalStorageService storageService -> f
    com.kbdunn.nimbus.server.service.LocalFileService fileService -> e
    com.kbdunn.nimbus.server.service.LocalUserService userService -> d
    30:36:void <init>(com.kbdunn.nimbus.api.async.AsyncConfiguration,com.kbdunn.nimbus.api.model.StorageDevice) -> <init>
    39:42:void setReconciliationsPaused(boolean) -> a
    45:46:void setReconciliationFinished(com.kbdunn.nimbus.api.model.StorageDevice) -> a
    50:73:void doOperation() -> doOperation
    76:92:void reconcileFolder(com.kbdunn.nimbus.api.model.NimbusFile) -> a
    95:102:void checkPause() -> B
    20:22:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.async.SMTPTransport -> server.n:
    com.kbdunn.nimbus.api.model.SMTPSettings settings -> z
    com.kbdunn.nimbus.server.service.LocalUserService userService -> d
    23:26:void <init>(com.kbdunn.nimbus.api.model.SMTPSettings) -> <init>
    31:47:void send(com.kbdunn.nimbus.api.model.Email) -> a
    51:51:java.lang.String getEmailAddress() -> l
    56:56:boolean testConnection() -> m
com.kbdunn.nimbus.server.async.UpdateMediaLibraryOperation -> server.o:
    org.apache.log4j.Logger log -> a
    java.util.List runningLibraryUpdates -> A
    com.kbdunn.nimbus.api.model.NimbusUser user -> user
    java.util.List listeners -> listeners
    18:24:void <init>(com.kbdunn.nimbus.api.async.AsyncConfiguration,com.kbdunn.nimbus.api.model.NimbusUser) -> <init>
    27:28:void addLibraryUpdateFinishedListener(com.kbdunn.nimbus.server.async.UpdateMediaLibraryOperation$LibraryUpdateFinishedListener) -> a
    31:31:boolean libraryUpdateIsRunning(com.kbdunn.nimbus.api.model.NimbusUser) -> c
    35:36:void setLibraryUpdateRunning(com.kbdunn.nimbus.api.model.NimbusUser) -> y
    39:40:void setLibraryUpdateFinished(com.kbdunn.nimbus.api.model.NimbusUser) -> z
    44:101:void doOperation() -> doOperation
    14:15:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.async.UpdateMediaLibraryOperation$LibraryUpdateFinishedListener -> server.o$a:
    void libraryUpdateFinished(com.kbdunn.nimbus.api.model.NimbusUser) -> A
com.kbdunn.nimbus.server.async.VaadinUploadOperation -> com.kbdunn.nimbus.server.async.VaadinUploadOperation:
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger log -> a
    com.kbdunn.nimbus.api.async.UploadActionProcessor controller -> controller
    com.kbdunn.nimbus.api.model.NimbusFile targetFile -> targetFile
    long fileSize -> fileSize
    33:42:java.io.OutputStream getFileOutputStream() -> C
    46:47:java.lang.String getFilename() -> getFilename
    59:63:void <init>(java.lang.String,long,com.kbdunn.nimbus.api.async.UploadActionProcessor) -> <init>
    67:70:java.io.OutputStream getOutputStream() -> getOutputStream
    75:75:boolean listenProgress() -> listenProgress
    90:90:void streamingStarted(com.vaadin.server.StreamVariable$StreamingStartEvent) -> streamingStarted
    94:98:void onProgress(com.vaadin.server.StreamVariable$StreamingProgressEvent) -> onProgress
    102:112:void streamingFinished(com.vaadin.server.StreamVariable$StreamingEndEvent) -> streamingFinished
    116:118:void streamingFailed(com.vaadin.server.StreamVariable$StreamingErrorEvent) -> streamingFailed
    122:122:boolean isInterrupted() -> isInterrupted
    136:138:void <init>(com.kbdunn.nimbus.api.async.UploadActionProcessor) -> <init>
    142:149:java.io.OutputStream receiveUpload(java.lang.String,java.lang.String) -> receiveUpload
    154:155:void uploadStarted(com.vaadin.ui.Upload$StartedEvent) -> uploadStarted
    159:164:void updateProgress(long,long) -> updateProgress
    168:178:void uploadSucceeded(com.vaadin.ui.Upload$SucceededEvent) -> uploadSucceeded
    182:185:void uploadFailed(com.vaadin.ui.Upload$FailedEvent) -> uploadFailed
    193:193:void doOperation() -> doOperation
    23:23:com.kbdunn.nimbus.api.model.NimbusFile access$000(com.kbdunn.nimbus.server.async.VaadinUploadOperation) -> access$000
    23:23:com.kbdunn.nimbus.api.async.UploadActionProcessor access$100(com.kbdunn.nimbus.server.async.VaadinUploadOperation) -> access$100
    26:26:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.async.VaadinUploadOperation$1 -> com.kbdunn.nimbus.server.async.VaadinUploadOperation$1:
    com.kbdunn.nimbus.server.async.VaadinUploadOperation this$0 -> B
    105:105:void <init>(com.kbdunn.nimbus.server.async.VaadinUploadOperation) -> <init>
    109:110:void run() -> run
com.kbdunn.nimbus.server.async.VaadinUploadOperation$2 -> com.kbdunn.nimbus.server.async.VaadinUploadOperation$2:
    com.kbdunn.nimbus.server.async.VaadinUploadOperation this$0 -> B
    171:171:void <init>(com.kbdunn.nimbus.server.async.VaadinUploadOperation) -> <init>
    175:176:void run() -> run
com.kbdunn.nimbus.server.dao.MediaLibraryDAO -> server.p:
    org.apache.log4j.Logger log -> a
    23:23:void <init>() -> <init>
    29:59:com.kbdunn.nimbus.api.model.Playlist getPlaylistById(long) -> a
    64:95:com.kbdunn.nimbus.api.model.Playlist getPlaylistByName(long,java.lang.String) -> a
    101:142:com.kbdunn.nimbus.api.model.Artist getArtistByName(long,java.lang.String) -> b
    148:192:com.kbdunn.nimbus.api.model.Album getAlbumByName(long,java.lang.String,java.lang.String) -> a
    197:197:java.util.List getUserArtists(long) -> e
    201:240:java.util.List getUserArtists(long,java.lang.Integer,java.lang.Integer) -> a
    245:279:int getUserArtistCount(long) -> f
    284:284:java.util.List getUserAlbums(long) -> g
    288:326:java.util.List getUserAlbums(long,java.lang.Integer,java.lang.Integer) -> b
    331:365:int getUserAlbumCount(long) -> h
    370:370:java.util.List getUserPlaylists(long) -> i
    374:406:java.util.List getUserPlaylists(long,java.lang.Integer,java.lang.Integer) -> c
    411:435:int getUserPlaylistCount(long) -> j
    441:441:java.util.List getUserSongs(long) -> k
    446:485:java.util.List getUserSongs(long,java.lang.Integer,java.lang.Integer) -> d
    490:525:int getUserSongCount(long) -> l
    531:531:java.util.List getUserVideos(long) -> m
    536:575:java.util.List getUserVideos(long,java.lang.Integer,java.lang.Integer) -> e
    580:615:int getUserVideoCount(long) -> n
    620:620:java.util.List getPlaylistSongs(long) -> o
    626:667:java.util.List getPlaylistSongs(long,java.lang.Integer,java.lang.Integer) -> f
    672:708:int getPlaylistSongCount(long) -> p
    713:713:java.util.List getArtistSongs(long,com.kbdunn.nimbus.api.model.Artist) -> a
    717:760:java.util.List getArtistSongs(long,com.kbdunn.nimbus.api.model.Artist,java.lang.Integer,java.lang.Integer) -> a
    765:803:int getArtistSongCount(long,com.kbdunn.nimbus.api.model.Artist) -> b
    808:808:java.util.List getAlbumSongs(long,com.kbdunn.nimbus.api.model.Album) -> a
    812:857:java.util.List getAlbumSongs(long,com.kbdunn.nimbus.api.model.Album,java.lang.Integer,java.lang.Integer) -> a
    862:902:int getAlbumSongCount(long,com.kbdunn.nimbus.api.model.Album) -> b
    908:946:java.util.List getArtistAlbums(long,com.kbdunn.nimbus.api.model.Artist) -> c
    952:978:boolean insertPlaylist(com.kbdunn.nimbus.api.model.Playlist) -> a
    983:1017:boolean insertPlaylistSongs(long,java.util.List) -> a
    1022:1048:boolean updatePlaylist(com.kbdunn.nimbus.api.model.Playlist) -> f
    1053:1077:boolean deletePlaylist(long) -> q
    1081:1103:boolean deletePlaylistSongs(long) -> r
    1109:1118:java.util.List toSongList(java.sql.ResultSet) -> a
    1123:1132:java.util.List toVideoList(java.sql.ResultSet) -> b
    1137:1145:java.util.List toArtistList(java.sql.ResultSet) -> c
    1150:1158:java.util.List toAlbumList(java.sql.ResultSet) -> d
    1163:1172:java.util.List toPlaylistList(java.sql.ResultSet) -> e
    1176:1176:com.kbdunn.nimbus.api.model.Playlist toPlaylist(java.sql.ResultSet) -> f
    1182:1193:com.kbdunn.nimbus.api.model.Playlist toPlaylist(java.sql.ResultSet,java.util.List) -> a
    25:25:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.dao.MessageDAO -> server.q:
    org.apache.log4j.Logger log -> a
    19:19:void <init>() -> <init>
    24:57:java.util.List getFileShareMessages(com.kbdunn.nimbus.api.model.ShareBlock) -> a
    61:104:java.lang.Long getMessageId(com.kbdunn.nimbus.api.model.Message) -> a
    108:144:java.lang.Long insert(com.kbdunn.nimbus.api.model.Message) -> b
    148:189:void update(com.kbdunn.nimbus.api.model.Message) -> c
    192:214:void delete(com.kbdunn.nimbus.api.model.Message) -> d
    218:222:com.kbdunn.nimbus.api.model.ShareBlockComment toFileShareMessage(java.sql.ResultSet) -> g
    21:21:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.dao.NimbusFileDAO -> server.r:
    org.apache.log4j.Logger log -> a
    23:23:void <init>() -> <init>
    29:60:com.kbdunn.nimbus.api.model.NimbusFile getByPath(java.lang.String) -> e
    64:95:com.kbdunn.nimbus.api.model.NimbusFile getById(java.lang.Long) -> c
    100:121:long getTotalFileCount() -> aO
    127:149:long getLastReconciled(long) -> s
    155:155:java.util.List getContents(com.kbdunn.nimbus.api.model.NimbusFile) -> o
    160:160:java.util.List getContents(com.kbdunn.nimbus.api.model.NimbusFile,int,int) -> a
    165:165:java.util.List getFileContents(com.kbdunn.nimbus.api.model.NimbusFile) -> p
    170:170:java.util.List getFolderContents(com.kbdunn.nimbus.api.model.NimbusFile) -> q
    175:175:java.util.List getImageContents(com.kbdunn.nimbus.api.model.NimbusFile) -> r
    181:218:java.util.List getContents(com.kbdunn.nimbus.api.model.NimbusFile,boolean,boolean,boolean,java.lang.Integer,java.lang.Integer) -> a
    223:249:int getContentCount(com.kbdunn.nimbus.api.model.NimbusFile) -> k
    254:282:int getRecursiveChildCount(com.kbdunn.nimbus.api.model.NimbusFile) -> b
    286:314:long getRecursiveFileSize(com.kbdunn.nimbus.api.model.NimbusFile) -> c
    318:347:boolean fileHasChildren(com.kbdunn.nimbus.api.model.NimbusFile) -> z
    351:380:boolean fileHasChildFolders(com.kbdunn.nimbus.api.model.NimbusFile) -> A
    389:483:boolean insert(com.kbdunn.nimbus.api.model.NimbusFile) -> B
    488:600:boolean update(com.kbdunn.nimbus.api.model.NimbusFile) -> C
    605:629:boolean delete(com.kbdunn.nimbus.api.model.NimbusFile) -> u
    634:643:java.util.List toNimbusFileList(java.sql.ResultSet) -> h
    650:686:com.kbdunn.nimbus.api.model.NimbusFile toNimbusFile(java.sql.ResultSet,java.util.List) -> b
    25:25:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.dao.NimbusSystemDAO -> server.s:
    org.apache.log4j.Logger log -> a
    13:13:void <init>() -> <init>
    18:42:java.lang.String getVersion() -> getVersion
    47:71:boolean getIsAutoScan() -> D
    76:98:void update(boolean) -> b
    15:15:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.dao.NimbusUserDAO -> server.t:
    org.apache.log4j.Logger log -> a
    20:20:void <init>() -> <init>
    26:44:java.lang.Integer getUserCount() -> bn
    50:89:com.kbdunn.nimbus.api.model.NimbusUser getByDomainKey(java.lang.String) -> f
    94:131:com.kbdunn.nimbus.api.model.NimbusUser getByApiToken(java.lang.String) -> g
    136:173:com.kbdunn.nimbus.api.model.NimbusUser getById(java.lang.Long) -> d
    178:215:com.kbdunn.nimbus.api.model.NimbusUser getByUserDriveId(java.lang.Long) -> e
    219:249:java.util.List getAll() -> E
    255:283:boolean isDuplicateEmail(java.lang.String,java.lang.Long) -> a
    289:316:boolean isDuplicateName(java.lang.String,java.lang.Long) -> b
    321:357:boolean insert(com.kbdunn.nimbus.api.model.NimbusUser) -> B
    362:407:boolean update(com.kbdunn.nimbus.api.model.NimbusUser) -> C
    412:432:boolean delete(java.lang.Long) -> f
    436:469:com.kbdunn.nimbus.api.model.SMTPSettings getSmtpSettings(com.kbdunn.nimbus.api.model.NimbusUser) -> r
    473:509:boolean updateSmtpSettings(com.kbdunn.nimbus.api.model.SMTPSettings) -> b
    513:520:java.util.List toNimbusUserList(java.sql.ResultSet) -> i
    525:544:com.kbdunn.nimbus.api.model.NimbusUser toNimbusUser(java.sql.ResultSet) -> j
    22:22:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.dao.OAuthDAO -> server.u:
    org.apache.log4j.Logger log -> a
    19:19:void <init>() -> <init>
    24:54:com.kbdunn.nimbus.api.model.OAuthCredential getCredential(long,java.lang.String) -> c
    59:84:java.util.List getCredentials(long) -> t
    89:125:boolean insert(com.kbdunn.nimbus.api.model.OAuthCredential) -> c
    130:173:boolean update(com.kbdunn.nimbus.api.model.OAuthCredential) -> d
    178:200:boolean delete(long) -> u
    205:227:boolean delete(long,java.lang.String) -> d
    232:239:java.util.List toOAuthCredentialList(java.sql.ResultSet) -> k
    244:263:com.kbdunn.nimbus.api.model.OAuthCredential toOAuthCredential(java.sql.ResultSet) -> l
    21:21:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.dao.ShareDAO -> server.v:
    org.apache.log4j.Logger log -> a
    23:23:void <init>() -> <init>
    29:54:java.util.List getShareBlocksForUser(long) -> v
    60:87:java.util.List getBlocksSharedWithUser(long) -> w
    93:122:com.kbdunn.nimbus.api.model.ShareBlock getShareByToken(java.lang.String) -> h
    128:154:com.kbdunn.nimbus.api.model.ShareBlock getShareBlockById(long) -> c
    160:187:java.util.List getSharedFiles(long) -> x
    193:220:java.util.List getSharedNimbusFiles(long) -> y
    226:260:com.kbdunn.nimbus.api.model.ShareBlockFile getSharedFile(long,java.lang.String) -> e
    266:293:java.util.List getShareBlockRecipients(long) -> z
    299:333:boolean incrementShareBlockVisitCount(long) -> A
    339:367:boolean tokenExists(java.lang.String) -> i
    373:405:boolean shareNameExists(long,java.lang.String,java.lang.Long) -> a
    411:448:boolean insertShareBlock(com.kbdunn.nimbus.api.model.ShareBlock) -> t
    454:487:boolean insertShareBlockRecipients(java.util.List) -> a
    492:518:boolean insertShareBlockRecipient(com.kbdunn.nimbus.api.model.ShareBlockRecipient) -> b
    523:549:boolean updateShareBlockRecipient(com.kbdunn.nimbus.api.model.ShareBlockRecipient) -> c
    555:599:boolean insertShareBlockFiles(java.util.List) -> b
    604:626:boolean deleteShareBlockFile(long) -> B
    631:662:boolean insertShareBlockFile(com.kbdunn.nimbus.api.model.ShareBlockFile) -> b
    667:712:boolean updateShareBlock(com.kbdunn.nimbus.api.model.ShareBlock) -> u
    718:759:boolean updateShareBlockFileContents(long,java.util.List) -> b
    765:788:boolean updateShareBlockFile(com.kbdunn.nimbus.api.model.ShareBlockFile) -> c
    794:840:boolean updateShareBlockRecipients(long,java.util.List) -> c
    845:867:boolean deleteShareBlock(long) -> C
    872:894:java.util.List getShareBlockAccess(long) -> D
    899:926:com.kbdunn.nimbus.api.model.ShareBlockAccess getShareBlockAccess(long,long) -> a
    931:960:boolean insertShareBlockAccess(com.kbdunn.nimbus.api.model.ShareBlockAccess) -> b
    965:1001:boolean updateShareBlockAccess(com.kbdunn.nimbus.api.model.ShareBlockAccess) -> c
    1006:1028:boolean deleteShareBlockAccess(long) -> E
    1033:1079:boolean updateShareBlockAccess(long,java.util.List) -> d
    1084:1091:java.util.List toShareBlockList(java.sql.ResultSet) -> m
    1096:1113:com.kbdunn.nimbus.api.model.ShareBlock toShareBlock(java.sql.ResultSet) -> n
    1117:1124:java.util.List toShareBlockFileList(java.sql.ResultSet) -> o
    1129:1140:com.kbdunn.nimbus.api.model.ShareBlockFile toShareBlockFile(java.sql.ResultSet) -> p
    1144:1151:java.util.List toShareBlockRecipientList(java.sql.ResultSet) -> q
    1156:1166:com.kbdunn.nimbus.api.model.ShareBlockRecipient toShareBlockRecipient(java.sql.ResultSet) -> r
    1170:1177:java.util.List toShareBlockAccessList(java.sql.ResultSet) -> s
    1182:1195:com.kbdunn.nimbus.api.model.ShareBlockAccess toShareBlockAccess(java.sql.ResultSet) -> t
    25:25:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.dao.StorageDAO -> server.w:
    org.apache.log4j.Logger log -> a
    24:24:void <init>() -> <init>
    30:60:com.kbdunn.nimbus.api.model.StorageDevice getById(long) -> F
    66:96:com.kbdunn.nimbus.api.model.StorageDevice getByPath(java.lang.String) -> j
    102:132:com.kbdunn.nimbus.api.model.StorageDevice getByDevicePath(java.lang.String) -> k
    137:167:com.kbdunn.nimbus.api.model.HardDrive getHardDriveByUuid(java.lang.String) -> x
    172:204:long getUsedBytes(long) -> G
    209:239:com.kbdunn.nimbus.api.model.StorageDevice getUserDrive(long,long) -> b
    244:270:java.util.List getUserDrives(long) -> H
    311:341:java.util.List getStorageDevicesAssignedToUser(long) -> I
    346:389:java.util.List getUsersAssignedToDevice(long) -> J
    438:465:java.util.List getFiles(long) -> K
    470:493:java.util.List getAll() -> E
    498:526:java.util.List getConnectedHardDrives() -> bj
    531:559:java.util.List getAvailable() -> G
    564:587:java.util.List getAssigned() -> J
    621:668:boolean insert(com.kbdunn.nimbus.api.model.StorageDevice) -> b
    674:724:boolean update(com.kbdunn.nimbus.api.model.StorageDevice) -> h
    758:780:boolean delete(long) -> u
    785:809:boolean insertUserDrive(long,long) -> c
    814:839:boolean deleteUserDrive(long,long) -> d
    844:878:boolean setUserDrives(long,java.util.List) -> e
    883:891:java.util.List toStorageDeviceList(java.sql.ResultSet) -> u
    895:895:com.kbdunn.nimbus.api.model.StorageDevice toStorageDevice(java.sql.ResultSet) -> v
    900:923:com.kbdunn.nimbus.api.model.StorageDevice toStorageDevice(java.sql.ResultSet,java.util.List) -> c
    929:947:boolean resetReconciliation() -> K
    26:26:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.google.GmailMessage -> server.x:
    java.lang.String raw -> C
    7:9:void <init>(java.lang.String) -> <init>
    12:12:java.lang.String getRaw() -> getRaw
    16:17:void setRaw(java.lang.String) -> l
com.kbdunn.nimbus.server.google.GoogleAPIService -> server.y:
    org.apache.log4j.Logger log -> a
    com.fasterxml.jackson.databind.ObjectMapper JACKSON -> D
    java.lang.String GMAIL_SEND_ENDPOINT -> E
    java.lang.String GMAIL_PROFILE_ENDPOINT -> F
    com.kbdunn.nimbus.api.server.OAuthService localOAuthService -> G
    com.kbdunn.nimbus.api.model.OAuthCredential credential -> H
    44:47:void <init>(com.kbdunn.nimbus.api.server.OAuthService,com.kbdunn.nimbus.api.model.OAuthCredential) -> <init>
    51:51:com.kbdunn.nimbus.api.security.OAuthAPIService$Type getType() -> aH
    56:56:com.github.scribejava.apis.GoogleApi20 getScribeApi() -> L
    61:61:com.kbdunn.nimbus.api.model.OAuthCredential getOAuthCredential() -> aI
    66:66:com.kbdunn.nimbus.api.server.OAuthService getOAuthService() -> aL
    71:71:boolean isEmailSupported() -> aJ
    76:76:com.kbdunn.nimbus.api.async.EmailTransport getEmailTransport() -> aK
    81:106:void send(com.kbdunn.nimbus.api.model.Email) -> a
    109:124:com.google.api.services.gmail.model.Message createMessageWithEmail(com.kbdunn.nimbus.api.model.Email) -> b
    129:140:java.lang.String getEmailAddress() -> l
    146:146:boolean testConnection() -> m
    34:34:com.github.scribejava.core.builder.api.DefaultApi20 getScribeApi() -> aF
    36:37:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.jdbc.HikariConnectionPool -> server.z:
    java.lang.String SCHEMA_NAME -> I
    com.kbdunn.nimbus.server.jdbc.HikariConnectionPool instance -> J
    com.zaxxer.hikari.HikariDataSource ds -> K
    19:29:void <init>() -> <init>
    32:35:void init() -> init
    38:42:void destroy() -> destroy
    45:46:com.kbdunn.nimbus.server.jdbc.HikariConnectionPool instance() -> M
    50:51:java.sql.Connection getConnection() -> getConnection
com.kbdunn.nimbus.server.jdbc.JdbcHelper -> server.A:
    14:14:void <init>() -> <init>
    18:26:java.util.List getResultColumns(java.sql.ResultSet) -> w
    31:45:java.sql.Connection createConnection() -> N
com.kbdunn.nimbus.server.linux.CmdBlkid -> server.B:
    java.lang.String CMD -> L
    org.apache.log4j.Logger log -> a
    15:15:void <init>() -> <init>
    21:24:void main(java.lang.String[]) -> main
    27:48:java.util.List execute(java.lang.String[]) -> a
    52:79:com.kbdunn.nimbus.api.model.BlkidBlock parseOutputLine(java.lang.String) -> m
    18:18:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.linux.CmdDf -> server.C:
    org.apache.log4j.Logger log -> a
    11:11:void <init>() -> <init>
    16:19:void main(java.lang.String[]) -> main
    22:41:java.util.List execute() -> O
    45:47:com.kbdunn.nimbus.server.linux.CmdDf$Filesystem getByPath(java.lang.String) -> n
    51:60:com.kbdunn.nimbus.server.linux.CmdDf$Filesystem parseOutputLine(java.lang.String) -> o
    13:13:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.linux.CmdDf$Filesystem -> server.C$a:
    java.lang.String devicePath -> M
    java.lang.String mountedPath -> N
    java.lang.Long size -> O
    java.lang.Long used -> P
    com.kbdunn.nimbus.server.linux.CmdDf this$0 -> Q
    63:63:void <init>(com.kbdunn.nimbus.server.linux.CmdDf) -> <init>
    68:68:java.lang.String getDevicePath() -> F
    72:72:java.lang.String getMountedPath() -> P
    76:76:java.lang.Long getSize() -> H
    80:80:java.lang.Long getUsed() -> I
    63:63:java.lang.String access$000(com.kbdunn.nimbus.server.linux.CmdDf$Filesystem) -> a
    63:63:java.lang.Long access$100(com.kbdunn.nimbus.server.linux.CmdDf$Filesystem) -> b
    63:63:java.lang.Long access$200(com.kbdunn.nimbus.server.linux.CmdDf$Filesystem) -> c
    63:63:java.lang.String access$002(com.kbdunn.nimbus.server.linux.CmdDf$Filesystem,java.lang.String) -> a
    63:63:java.lang.Long access$102(com.kbdunn.nimbus.server.linux.CmdDf$Filesystem,java.lang.Long) -> a
    63:63:java.lang.Long access$202(com.kbdunn.nimbus.server.linux.CmdDf$Filesystem,java.lang.Long) -> b
    63:63:java.lang.String access$302(com.kbdunn.nimbus.server.linux.CmdDf$Filesystem,java.lang.String) -> b
com.kbdunn.nimbus.server.linux.CmdPmount -> server.D:
    org.apache.log4j.Logger log -> a
    8:8:void <init>() -> <init>
    13:23:boolean mount(com.kbdunn.nimbus.api.model.HardDrive) -> a
    10:10:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.linux.CmdPumount -> server.E:
    org.apache.log4j.Logger log -> a
    8:8:void <init>() -> <init>
    13:13:boolean unmount(com.kbdunn.nimbus.api.model.HardDrive) -> b
    17:28:boolean unmount(java.lang.String) -> p
    10:10:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.linux.MemInfo -> server.F:
    java.lang.String PROP_MEM_TOTAL -> R
    java.lang.String PROP_MEM_FREE -> S
    org.apache.log4j.Logger log -> a
    10:10:void <init>() -> <init>
    17:19:java.lang.Long getUsed() -> I
    23:24:java.lang.Long getTotal() -> Q
    28:50:java.util.Properties execute() -> R
    14:14:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.security.PasswordHash -> server.G:
    java.lang.String PBKDF2_ALGORITHM -> T
    int SALT_BYTE_SIZE -> U
    int HASH_BYTE_SIZE -> V
    int PBKDF2_ITERATIONS -> W
    int ITERATION_INDEX -> X
    int SALT_INDEX -> Y
    int PBKDF2_INDEX -> Z
    15:15:void <init>() -> <init>
    35:35:java.lang.String createHash(java.lang.String) -> q
    46:53:java.lang.String createHash(char[]) -> a
    64:64:boolean validatePassword(java.lang.String,java.lang.String) -> b
    75:88:boolean validatePassword(char[],java.lang.String) -> a
    101:104:boolean slowEquals(byte[],byte[]) -> a
    117:119:byte[] pbkdf2(char[],byte[],int,int) -> a
    129:133:byte[] fromHex(java.lang.String) -> r
    143:149:java.lang.String toHex(byte[]) -> a
com.kbdunn.nimbus.server.security.ResetPassword -> server.H:
    18:18:void <init>() -> <init>
    21:41:void main(java.lang.String[]) -> main
    44:66:com.kbdunn.nimbus.api.model.NimbusUser promptUserSelect(java.sql.Connection) -> a
    70:80:java.lang.String promptNewPassword() -> S
    85:86:void outln(java.lang.String) -> s
    89:96:java.lang.String readln() -> T
    101:104:java.lang.Integer numeric(java.lang.String) -> t
    112:112:void setLogLevel() -> U
    115:139:java.util.List getAdmins(java.sql.Connection) -> b
    143:163:boolean update(com.kbdunn.nimbus.api.model.NimbusUser,java.sql.Connection) -> a
com.kbdunn.nimbus.server.service.LocalAsyncService -> server.I:
    org.apache.log4j.Logger log -> a
    com.kbdunn.nimbus.server.service.LocalUserService userService -> d
    37:37:void <init>() -> <init>
    40:41:void initialize(com.kbdunn.nimbus.server.NimbusContext) -> a
    45:48:void startAsyncOperation(com.kbdunn.nimbus.api.async.AsyncOperation) -> b
    52:58:com.kbdunn.nimbus.api.async.AsyncOperationQueue buildAsyncOperationQueue(java.lang.String,java.util.List) -> a
    63:65:com.kbdunn.nimbus.api.async.AsyncOperation copyFile(com.kbdunn.nimbus.api.async.AsyncConfiguration,com.kbdunn.nimbus.api.model.NimbusFile,com.kbdunn.nimbus.api.model.NimbusFile,boolean) -> a
    71:73:com.kbdunn.nimbus.api.async.AsyncOperation copyFile(com.kbdunn.nimbus.api.async.AsyncConfiguration,com.kbdunn.nimbus.api.model.NimbusFile,com.kbdunn.nimbus.api.model.NimbusFile,java.util.List,boolean) -> a
    78:80:com.kbdunn.nimbus.api.async.AsyncOperation copyFiles(com.kbdunn.nimbus.api.async.AsyncConfiguration,java.util.List,com.kbdunn.nimbus.api.model.NimbusFile,boolean) -> a
    86:88:com.kbdunn.nimbus.api.async.AsyncOperation copyFiles(com.kbdunn.nimbus.api.async.AsyncConfiguration,java.util.List,com.kbdunn.nimbus.api.model.NimbusFile,java.util.List,boolean) -> a
    93:95:com.kbdunn.nimbus.api.async.AsyncOperation moveFile(com.kbdunn.nimbus.api.async.AsyncConfiguration,com.kbdunn.nimbus.api.model.NimbusFile,com.kbdunn.nimbus.api.model.NimbusFile,boolean) -> b
    101:103:com.kbdunn.nimbus.api.async.AsyncOperation moveFile(com.kbdunn.nimbus.api.async.AsyncConfiguration,com.kbdunn.nimbus.api.model.NimbusFile,com.kbdunn.nimbus.api.model.NimbusFile,java.util.List,boolean) -> b
    109:111:com.kbdunn.nimbus.api.async.AsyncOperation moveFiles(com.kbdunn.nimbus.api.async.AsyncConfiguration,java.util.List,com.kbdunn.nimbus.api.model.NimbusFile,boolean) -> b
    117:119:com.kbdunn.nimbus.api.async.AsyncOperation moveFiles(com.kbdunn.nimbus.api.async.AsyncConfiguration,java.util.List,com.kbdunn.nimbus.api.model.NimbusFile,java.util.List,boolean) -> b
    124:126:com.kbdunn.nimbus.api.async.AsyncOperation reconcileStorageDevice(com.kbdunn.nimbus.api.async.AsyncConfiguration,com.kbdunn.nimbus.api.model.StorageDevice,boolean) -> a
    131:132:void pauseStorageDeviceReconciliations() -> aM
    136:137:void resumeStorageDeviceReconciliations() -> aN
    141:143:com.kbdunn.nimbus.api.async.AsyncOperation updateMediaLibrary(com.kbdunn.nimbus.api.async.AsyncConfiguration,com.kbdunn.nimbus.api.model.NimbusUser,boolean) -> a
    148:148:com.kbdunn.nimbus.server.async.VaadinUploadOperation uploadFile(java.lang.String,long,com.kbdunn.nimbus.api.async.UploadActionProcessor) -> b
    153:153:com.kbdunn.nimbus.server.async.VaadinUploadOperation uploadFile(com.kbdunn.nimbus.api.async.UploadActionProcessor) -> b
    158:164:com.kbdunn.nimbus.api.async.AsyncOperation sendEmail(com.kbdunn.nimbus.api.async.AsyncConfiguration,com.kbdunn.nimbus.api.model.Email,boolean) -> a
    170:213:com.kbdunn.nimbus.api.async.AsyncOperation sendInvitationEmail(com.kbdunn.nimbus.api.async.AsyncConfiguration,com.kbdunn.nimbus.api.model.NimbusUser,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    219:266:com.kbdunn.nimbus.api.async.AsyncOperation sendPasswordResetEmail(com.kbdunn.nimbus.api.async.AsyncConfiguration,com.kbdunn.nimbus.api.model.NimbusUser,java.lang.String,java.lang.String,java.lang.String,com.kbdunn.nimbus.api.model.NimbusUser,boolean) -> a
    32:32:com.kbdunn.nimbus.api.async.VaadinUploadOperation uploadFile(com.kbdunn.nimbus.api.async.UploadActionProcessor) -> a
    32:32:com.kbdunn.nimbus.api.async.VaadinUploadOperation uploadFile(java.lang.String,long,com.kbdunn.nimbus.api.async.UploadActionProcessor) -> a
    252:264:void lambda$sendPasswordResetEmail$1(com.kbdunn.nimbus.api.model.NimbusUser,java.lang.String,com.kbdunn.nimbus.api.async.AsyncOperation) -> a
    205:211:void lambda$sendInvitationEmail$0(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.async.AsyncOperation) -> a
    34:34:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.service.LocalFileService -> server.J:
    org.apache.log4j.Logger log -> a
    java.lang.String MUSIC_FORMATS -> aa
    java.lang.String VIDEO_FORMATS -> ab
    java.lang.String IMAGE_FORMATS -> ac
    com.kbdunn.nimbus.server.service.LocalMediaLibraryService mediaLibraryService -> g
    com.kbdunn.nimbus.server.service.LocalUserService userService -> d
    com.kbdunn.nimbus.server.service.LocalStorageService storageService -> f
    49:49:void <init>() -> <init>
    52:55:void initialize(com.kbdunn.nimbus.server.NimbusContext) -> a
    63:64:com.kbdunn.nimbus.api.model.NimbusFile getFileCopy(com.kbdunn.nimbus.api.model.NimbusFile) -> d
    68:111:void setFileAttributes(com.kbdunn.nimbus.api.model.NimbusFile) -> D
    118:118:com.kbdunn.nimbus.api.model.NimbusFile getFileById(long) -> b
    126:126:com.kbdunn.nimbus.api.model.NimbusFile getFileByPath(java.nio.file.Path) -> a
    134:134:com.kbdunn.nimbus.api.model.NimbusFile getFileByPath(java.lang.String) -> v
    142:148:com.kbdunn.nimbus.api.model.NimbusFile getFileByPath(java.lang.String,boolean) -> a
    156:156:long getTotalFileCount() -> aO
    164:169:com.kbdunn.nimbus.api.model.StorageDevice getStorageDevice(com.kbdunn.nimbus.api.model.NimbusFile) -> e
    177:177:boolean fileExistsOnDisk(com.kbdunn.nimbus.api.model.NimbusFile) -> f
    186:192:java.util.Date getLastModifiedDate(com.kbdunn.nimbus.api.model.NimbusFile) -> g
    201:204:java.lang.String getFileSizeString(com.kbdunn.nimbus.api.model.NimbusFile) -> h
    208:209:java.lang.String getRecursiveFileSizeString(com.kbdunn.nimbus.api.model.NimbusFile) -> E
    217:218:long getRecursiveContentSize(com.kbdunn.nimbus.api.model.NimbusFile) -> i
    227:227:com.kbdunn.nimbus.api.model.NimbusFile getParentFile(com.kbdunn.nimbus.api.model.NimbusFile) -> j
    235:237:int getContentCount(com.kbdunn.nimbus.api.model.NimbusFile) -> k
    246:247:int getRecursiveContentCount(com.kbdunn.nimbus.api.model.NimbusFile) -> l
    256:267:boolean folderHasContents(com.kbdunn.nimbus.api.model.NimbusFile) -> m
    276:289:boolean folderContentsContainsFolder(com.kbdunn.nimbus.api.model.NimbusFile) -> n
    298:303:boolean fileIsChildOf(com.kbdunn.nimbus.api.model.NimbusFile,com.kbdunn.nimbus.api.model.NimbusFile) -> a
    314:317:java.util.List getContents(com.kbdunn.nimbus.api.model.NimbusFile) -> o
    325:328:java.util.List getContents(com.kbdunn.nimbus.api.model.NimbusFile,int,int) -> a
    336:339:java.util.List getFileContents(com.kbdunn.nimbus.api.model.NimbusFile) -> p
    347:350:java.util.List getFolderContents(com.kbdunn.nimbus.api.model.NimbusFile) -> q
    358:361:java.util.List getImageContents(com.kbdunn.nimbus.api.model.NimbusFile) -> r
    366:378:java.util.List getContentsFromDisk(com.kbdunn.nimbus.api.model.NimbusFile) -> F
    387:394:java.util.List getRecursiveFolderContents(com.kbdunn.nimbus.api.model.NimbusFile) -> s
    403:430:com.kbdunn.nimbus.api.model.NimbusFile resolveRelativePath(com.kbdunn.nimbus.api.model.NimbusFile,java.lang.String) -> a
    438:441:java.lang.String getRelativePath(com.kbdunn.nimbus.api.model.NimbusFile,com.kbdunn.nimbus.api.model.NimbusFile) -> b
    449:454:boolean save(com.kbdunn.nimbus.api.model.NimbusFile) -> t
    459:465:boolean insert(com.kbdunn.nimbus.api.model.NimbusFile) -> B
    470:473:boolean update(com.kbdunn.nimbus.api.model.NimbusFile) -> C
    482:491:boolean delete(com.kbdunn.nimbus.api.model.NimbusFile) -> u
    500:514:boolean createDirectory(com.kbdunn.nimbus.api.model.NimbusFile) -> v
    523:535:boolean touchFile(com.kbdunn.nimbus.api.model.NimbusFile) -> w
    544:552:boolean renameFile(com.kbdunn.nimbus.api.model.NimbusFile,java.lang.String) -> b
    561:561:boolean fileMoveDestinationIsValid(com.kbdunn.nimbus.api.model.NimbusFile,com.kbdunn.nimbus.api.model.NimbusFile) -> c
    569:569:boolean moveFileTo(com.kbdunn.nimbus.api.model.NimbusFile,com.kbdunn.nimbus.api.model.NimbusFile) -> d
    578:593:boolean moveFile(com.kbdunn.nimbus.api.model.NimbusFile,java.lang.String) -> c
    603:632:com.kbdunn.nimbus.api.model.NimbusFile copyFileTo(com.kbdunn.nimbus.api.model.NimbusFile,com.kbdunn.nimbus.api.model.NimbusFile) -> e
    641:653:java.util.List checkConflicts(com.kbdunn.nimbus.api.model.NimbusFile,com.kbdunn.nimbus.api.model.NimbusFile) -> f
    662:712:boolean batchCopy(java.util.List,com.kbdunn.nimbus.api.model.NimbusFile,java.util.List) -> a
    720:749:boolean reconcileFolder(com.kbdunn.nimbus.api.model.NimbusFile) -> x
    758:766:boolean reconcile(com.kbdunn.nimbus.api.model.NimbusFile) -> y
    772:781:com.kbdunn.nimbus.api.model.NimbusFile checkInstantiation(com.kbdunn.nimbus.api.model.NimbusFile) -> G
    786:809:com.kbdunn.nimbus.api.model.NimbusFile getFileConflictResolution(com.kbdunn.nimbus.api.model.FileConflict) -> a
    835:835:java.io.InputStream getZipComressedInputStream(java.util.List) -> c
    36:36:int getRecursiveContentCount(com.kbdunn.nimbus.api.model.FileContainer) -> g
    36:36:int getContentCount(com.kbdunn.nimbus.api.model.FileContainer) -> f
    36:36:long getRecursiveContentSize(com.kbdunn.nimbus.api.model.FileContainer) -> e
    36:36:com.kbdunn.nimbus.api.model.NimbusFile resolveRelativePath(com.kbdunn.nimbus.api.model.FileContainer,java.lang.String) -> a
    36:36:java.lang.String getRelativePath(com.kbdunn.nimbus.api.model.FileContainer,com.kbdunn.nimbus.api.model.NimbusFile) -> a
    36:36:java.util.List getImageContents(com.kbdunn.nimbus.api.model.FileContainer) -> d
    36:36:java.util.List getFileContents(com.kbdunn.nimbus.api.model.FileContainer) -> c
    36:36:java.util.List getFolderContents(com.kbdunn.nimbus.api.model.FileContainer) -> b
    36:36:java.util.List getContents(com.kbdunn.nimbus.api.model.FileContainer,int,int) -> a
    36:36:java.util.List getContents(com.kbdunn.nimbus.api.model.FileContainer) -> a
    38:38:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.service.LocalFileShareService -> server.K:
    org.apache.log4j.Logger log -> a
    int TOKEN_LENGTH -> ad
    java.lang.String SHARE_UPLOAD_DIRNAME -> ae
    java.util.Random RANDOM -> af
    com.kbdunn.nimbus.server.service.LocalUserService userService -> d
    com.kbdunn.nimbus.server.service.LocalFileService fileService -> e
    com.kbdunn.nimbus.server.service.LocalStorageService storageService -> f
    38:43:void <init>() -> <init>
    46:49:void initialize(com.kbdunn.nimbus.server.NimbusContext) -> a
    62:62:com.kbdunn.nimbus.api.model.ShareBlock getShareBlockById(long) -> c
    70:71:com.kbdunn.nimbus.api.model.ShareBlock getShareBlockByToken(java.lang.String) -> w
    79:80:java.util.List getShareBlocks(com.kbdunn.nimbus.api.model.NimbusUser) -> d
    88:89:java.util.List getAccessibleShareBlocks(com.kbdunn.nimbus.api.model.NimbusUser) -> e
    97:100:boolean shareBlockNameExistsForUser(com.kbdunn.nimbus.api.model.NimbusUser,java.lang.String,com.kbdunn.nimbus.api.model.ShareBlock) -> a
    108:109:boolean shareBlockNameExistsForUser(com.kbdunn.nimbus.api.model.ShareBlock,java.lang.String) -> a
    117:118:boolean save(com.kbdunn.nimbus.api.model.ShareBlock) -> b
    122:128:boolean insertShareBlock(com.kbdunn.nimbus.api.model.ShareBlock) -> t
    132:150:boolean updateShareBlock(com.kbdunn.nimbus.api.model.ShareBlock) -> u
    158:159:boolean delete(com.kbdunn.nimbus.api.model.ShareBlock) -> c
    163:172:java.lang.String generateToken() -> V
    180:182:void incrementVisitCount(com.kbdunn.nimbus.api.model.ShareBlock) -> d
    189:190:com.kbdunn.nimbus.api.model.NimbusUser getShareBlockOwner(com.kbdunn.nimbus.api.model.ShareBlock) -> e
    205:207:java.util.List getShareBlockFiles(com.kbdunn.nimbus.api.model.ShareBlock) -> f
    215:222:com.kbdunn.nimbus.api.model.ShareBlockFile getShareBlockFileByPath(com.kbdunn.nimbus.api.model.ShareBlock,java.lang.String) -> b
    230:232:com.kbdunn.nimbus.api.model.ShareBlockFile getShareBlockFile(com.kbdunn.nimbus.api.model.ShareBlock,com.kbdunn.nimbus.api.model.NimbusFile) -> a
    240:249:com.kbdunn.nimbus.api.model.NimbusFile getShareBlockWorkingFolder(com.kbdunn.nimbus.api.model.ShareBlock) -> g
    253:264:java.util.List getAllShareBlockWorkingFolders(com.kbdunn.nimbus.api.model.ShareBlock) -> v
    270:288:com.kbdunn.nimbus.api.model.StorageDevice getFavoredStorageDevice(com.kbdunn.nimbus.api.model.ShareBlock,com.kbdunn.nimbus.api.model.NimbusUser) -> b
    330:333:java.util.List getContents(com.kbdunn.nimbus.api.model.ShareBlock) -> h
    341:341:java.util.List getContents(com.kbdunn.nimbus.api.model.ShareBlock,int,int) -> a
    349:354:java.util.List getFolderContents(com.kbdunn.nimbus.api.model.ShareBlock) -> i
    362:367:java.util.List getFileContents(com.kbdunn.nimbus.api.model.ShareBlock) -> j
    375:380:java.util.List getImageContents(com.kbdunn.nimbus.api.model.ShareBlock) -> k
    388:395:java.lang.String getRelativePath(com.kbdunn.nimbus.api.model.ShareBlock,com.kbdunn.nimbus.api.model.NimbusFile) -> b
    403:420:com.kbdunn.nimbus.api.model.NimbusFile resolveRelativePath(com.kbdunn.nimbus.api.model.ShareBlock,java.lang.String) -> c
    428:435:long getRecursiveContentSize(com.kbdunn.nimbus.api.model.ShareBlock) -> l
    444:444:int getContentCount(com.kbdunn.nimbus.api.model.ShareBlock) -> m
    452:459:int getRecursiveContentCount(com.kbdunn.nimbus.api.model.ShareBlock) -> n
    467:471:int getFolderCount(com.kbdunn.nimbus.api.model.ShareBlock) -> o
    479:487:int getFileCount(com.kbdunn.nimbus.api.model.ShareBlock) -> p
    495:502:boolean saveShareBlockNimbusFiles(com.kbdunn.nimbus.api.model.ShareBlock,java.util.List) -> a
    510:511:boolean saveShareBlockFiles(com.kbdunn.nimbus.api.model.ShareBlock,java.util.List) -> b
    519:520:boolean removeSharedFile(com.kbdunn.nimbus.api.model.ShareBlockFile) -> a
    528:528:boolean addFileToShareBlock(com.kbdunn.nimbus.api.model.ShareBlock,com.kbdunn.nimbus.api.model.NimbusFile) -> c
    536:539:boolean addFileToShareBlock(com.kbdunn.nimbus.api.model.ShareBlock,com.kbdunn.nimbus.api.model.NimbusFile,java.lang.String) -> a
    547:551:boolean removeFileFromShareBlock(com.kbdunn.nimbus.api.model.ShareBlock,com.kbdunn.nimbus.api.model.NimbusFile) -> d
    565:569:com.kbdunn.nimbus.api.model.ShareBlockAccess getShareBlockAccess(com.kbdunn.nimbus.api.model.ShareBlock,com.kbdunn.nimbus.api.model.NimbusUser) -> a
    577:578:boolean saveShareBlockAccess(com.kbdunn.nimbus.api.model.ShareBlock,java.util.List) -> c
    586:587:boolean save(com.kbdunn.nimbus.api.model.ShareBlockAccess) -> a
    591:596:boolean insertShareBlockAccess(com.kbdunn.nimbus.api.model.ShareBlockAccess) -> b
    600:602:boolean updateShareBlockAccess(com.kbdunn.nimbus.api.model.ShareBlockAccess) -> c
    609:610:java.util.List getShareBlockAccess(com.kbdunn.nimbus.api.model.ShareBlock) -> q
    618:622:com.kbdunn.nimbus.api.model.ShareBlockAccess getUserAccessToShareBlock(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.model.ShareBlock) -> a
    631:632:com.kbdunn.nimbus.api.model.ShareBlockAccess getOwnerAccess(com.kbdunn.nimbus.api.model.ShareBlock) -> r
    640:648:boolean setAccess(com.kbdunn.nimbus.api.model.ShareBlock,com.kbdunn.nimbus.api.model.NimbusUser,boolean,boolean,boolean) -> a
    662:663:java.util.List getRecipients(com.kbdunn.nimbus.api.model.ShareBlock) -> s
    671:672:boolean setRecipients(com.kbdunn.nimbus.api.model.ShareBlock,java.util.List) -> d
    680:681:boolean addRecipient(com.kbdunn.nimbus.api.model.ShareBlockRecipient) -> a
    689:689:boolean addRecipients(java.util.List) -> d
    31:31:int getRecursiveContentCount(com.kbdunn.nimbus.api.model.FileContainer) -> g
    31:31:int getContentCount(com.kbdunn.nimbus.api.model.FileContainer) -> f
    31:31:long getRecursiveContentSize(com.kbdunn.nimbus.api.model.FileContainer) -> e
    31:31:com.kbdunn.nimbus.api.model.NimbusFile resolveRelativePath(com.kbdunn.nimbus.api.model.FileContainer,java.lang.String) -> a
    31:31:java.lang.String getRelativePath(com.kbdunn.nimbus.api.model.FileContainer,com.kbdunn.nimbus.api.model.NimbusFile) -> a
    31:31:java.util.List getImageContents(com.kbdunn.nimbus.api.model.FileContainer) -> d
    31:31:java.util.List getFileContents(com.kbdunn.nimbus.api.model.FileContainer) -> c
    31:31:java.util.List getFolderContents(com.kbdunn.nimbus.api.model.FileContainer) -> b
    31:31:java.util.List getContents(com.kbdunn.nimbus.api.model.FileContainer,int,int) -> a
    31:31:java.util.List getContents(com.kbdunn.nimbus.api.model.FileContainer) -> a
    34:34:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.service.LocalMediaLibraryService -> server.L:
    org.apache.log4j.Logger log -> a
    com.kbdunn.nimbus.server.service.LocalFileService fileService -> e
    38:38:void <init>() -> <init>
    41:42:void initialize(com.kbdunn.nimbus.server.NimbusContext) -> a
    55:145:void setSongAttributes(com.kbdunn.nimbus.api.model.Song) -> a
    186:198:void saveId3(com.kbdunn.nimbus.api.model.Song) -> c
    205:219:boolean save(com.kbdunn.nimbus.api.model.Song) -> b
    227:228:java.util.List getSongs(com.kbdunn.nimbus.api.model.NimbusUser) -> f
    236:237:java.util.List getSongs(com.kbdunn.nimbus.api.model.NimbusUser,int,int) -> a
    245:246:int getSongCount(com.kbdunn.nimbus.api.model.NimbusUser) -> g
    261:264:void setVideoAttributes(com.kbdunn.nimbus.api.model.Video) -> a
    271:272:java.util.List getVideos(com.kbdunn.nimbus.api.model.NimbusUser) -> h
    280:281:java.util.List getVideos(com.kbdunn.nimbus.api.model.NimbusUser,int,int) -> b
    289:290:int getVideoCount(com.kbdunn.nimbus.api.model.NimbusUser) -> i
    304:305:java.util.List getPlaylists(com.kbdunn.nimbus.api.model.NimbusUser) -> j
    313:314:java.util.List getPlaylists(com.kbdunn.nimbus.api.model.NimbusUser,int,int) -> c
    322:323:int getPlaylistCount(com.kbdunn.nimbus.api.model.NimbusUser) -> k
    331:333:com.kbdunn.nimbus.api.model.Playlist getPlaylistByName(com.kbdunn.nimbus.api.model.NimbusUser,java.lang.String) -> a
    341:342:boolean save(com.kbdunn.nimbus.api.model.Playlist) -> b
    346:351:boolean insert(com.kbdunn.nimbus.api.model.Playlist) -> g
    355:357:boolean update(com.kbdunn.nimbus.api.model.Playlist) -> h
    365:366:boolean delete(com.kbdunn.nimbus.api.model.Playlist) -> c
    374:376:boolean setPlaylistSongs(com.kbdunn.nimbus.api.model.Playlist,java.util.List) -> a
    384:385:java.util.List getPlaylistSongs(com.kbdunn.nimbus.api.model.Playlist) -> d
    393:394:java.util.List getPlaylistSongs(com.kbdunn.nimbus.api.model.Playlist,int,int) -> a
    402:403:int getPlaylistSongCount(com.kbdunn.nimbus.api.model.Playlist) -> e
    417:420:com.kbdunn.nimbus.api.model.Album getAlbumByName(com.kbdunn.nimbus.api.model.NimbusUser,java.lang.String,java.lang.String) -> a
    428:429:java.util.List getAlbums(com.kbdunn.nimbus.api.model.NimbusUser) -> l
    437:438:java.util.List getAlbums(com.kbdunn.nimbus.api.model.NimbusUser,int,int) -> d
    446:447:int getAlbumCount(com.kbdunn.nimbus.api.model.NimbusUser) -> m
    455:456:java.util.List getAlbumSongs(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.model.Album) -> a
    464:465:java.util.List getAlbumSongs(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.model.Album,int,int) -> a
    473:474:int getAlbumSongCount(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.model.Album) -> b
    488:490:com.kbdunn.nimbus.api.model.Artist getArtistByName(com.kbdunn.nimbus.api.model.NimbusUser,java.lang.String) -> b
    498:499:java.util.List getArtists(com.kbdunn.nimbus.api.model.NimbusUser) -> n
    507:508:java.util.List getArtists(com.kbdunn.nimbus.api.model.NimbusUser,int,int) -> e
    516:517:int getArtistCount(com.kbdunn.nimbus.api.model.NimbusUser) -> o
    525:526:java.util.List getArtistAlbums(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.model.Artist) -> a
    534:535:java.util.List getArtistSongs(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.model.Artist) -> b
    543:544:java.util.List getArtistSongs(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.model.Artist,int,int) -> a
    552:553:int getArtistSongCount(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.model.Artist) -> c
    34:34:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.service.LocalOAuthService -> server.M:
    org.apache.log4j.Logger log -> a
    com.kbdunn.nimbus.server.service.LocalUserService userService -> d
    30:30:void <init>() -> <init>
    33:34:void initialize(com.kbdunn.nimbus.server.NimbusContext) -> a
    38:40:com.kbdunn.nimbus.api.model.OAuthCredential getOAuthCredential(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.security.OAuthAPIService$Type) -> a
    45:46:java.util.List getOAuthCredentials(com.kbdunn.nimbus.api.model.NimbusUser) -> p
    51:58:com.kbdunn.nimbus.api.security.OAuthAPIService getOAuthAPIService(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.security.OAuthAPIService$Type) -> b
    63:76:boolean save(com.kbdunn.nimbus.api.model.OAuthCredential) -> a
    80:94:boolean delete(com.kbdunn.nimbus.api.model.OAuthCredential) -> b
    99:101:boolean delete(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.security.OAuthAPIService$Type) -> c
    106:120:com.github.scribejava.core.model.OAuth2AccessToken refreshAccessToken(com.kbdunn.nimbus.api.security.OAuth20API) -> a
    26:26:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.service.LocalPropertiesService -> server.N:
    org.apache.log4j.Logger log -> a
    java.lang.String NIMBUS_HOME_PARM -> ag
    java.lang.Boolean DEV_MODE -> ah
    java.lang.Boolean DEMO_MODE -> ai
    java.lang.String nimbusHome -> aj
    java.lang.String dbDriver -> ak
    java.lang.String dbConnectString -> al
    java.lang.String dbUser -> am
    java.lang.String dbPassword -> an
    java.lang.Integer httpPort -> ao
    java.lang.Boolean sslEnabled -> ap
    java.lang.String keystorePassword -> aq
    java.lang.String keystorePath -> ar
    java.lang.String truststorePath -> as
    java.lang.String truststorePassword -> at
    java.lang.String keyManagerPassword -> au
    java.lang.Integer httpsPort -> av
    boolean autoScan -> aw
    17:17:void <init>() -> <init>
    82:96:java.util.Properties loadNimbusProperties() -> W
    100:101:java.lang.String getStringProperty(java.util.Properties,java.lang.String) -> a
    105:106:java.lang.Boolean getBooleanProperty(java.util.Properties,java.lang.String) -> b
    110:114:java.lang.Integer getIntegerProperty(java.util.Properties,java.lang.String) -> c
    123:123:boolean isDevMode() -> aP
    131:131:boolean isDemoMode() -> aQ
    136:136:java.lang.String getDemoUsername() -> aR
    144:144:java.lang.String getNimbusHome() -> aS
    152:152:java.lang.String getDbDriver() -> aT
    160:160:java.lang.String getDbConnectString() -> aU
    168:168:java.lang.String getDbUser() -> aV
    176:176:java.lang.String getDbPassword() -> aW
    184:184:java.lang.Integer getHttpPort() -> aX
    192:192:java.lang.Boolean isSslEnabled() -> aY
    200:200:java.lang.String getKeystorePassword() -> aZ
    208:208:java.lang.String getKeystorePath() -> ba
    216:216:java.lang.String getTruststorePath() -> bb
    224:224:java.lang.String getTruststorePassword() -> bc
    232:232:java.lang.String getKeyManagerPassword() -> bd
    240:240:java.lang.Integer getHttpsPort() -> be
    245:245:java.lang.String getNimbusVersion() -> bf
    255:256:boolean isAutoScan() -> bg
    264:266:void setAutoScan(boolean) -> d
    269:270:void save() -> save
    19:79:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.service.LocalStorageService -> server.O:
    org.apache.log4j.Logger log -> a
    com.kbdunn.nimbus.server.service.LocalFileService fileService -> e
    com.kbdunn.nimbus.server.service.LocalUserService userService -> d
    com.kbdunn.nimbus.server.service.LocalPropertiesService propertiesService -> i
    34:34:void <init>() -> <init>
    37:40:void initialize(com.kbdunn.nimbus.server.NimbusContext) -> a
    44:45:com.kbdunn.nimbus.api.model.HardDrive getHardDriveByUuid(java.lang.String) -> x
    50:50:com.kbdunn.nimbus.api.model.StorageDevice getStorageDeviceById(long) -> d
    55:56:com.kbdunn.nimbus.api.model.StorageDevice getStorageDeviceByPath(java.lang.String) -> y
    61:62:long getUsedBytes(com.kbdunn.nimbus.api.model.StorageDevice) -> c
    68:73:boolean storageDeviceIsAvailable(com.kbdunn.nimbus.api.model.StorageDevice) -> d
    78:84:boolean isValidNewFilesystemLocationPath(java.lang.String) -> z
    88:89:boolean pathIsReadable(java.lang.String) -> u
    93:94:boolean pathIsWritable(java.lang.String) -> D
    99:107:com.kbdunn.nimbus.api.model.HardDrive getDriveFromBlock(com.kbdunn.nimbus.api.model.BlkidBlock) -> a
    112:112:java.util.List getAllStorageDevices() -> bh
    132:133:java.util.List getStorageDevicesAssignedToUser(com.kbdunn.nimbus.api.model.NimbusUser) -> q
    138:139:boolean delete(com.kbdunn.nimbus.api.model.StorageDevice) -> f
    144:156:boolean save(com.kbdunn.nimbus.api.model.StorageDevice) -> g
    162:171:boolean assignDriveToUser(com.kbdunn.nimbus.api.model.StorageDevice,com.kbdunn.nimbus.api.model.NimbusUser) -> a
    176:182:boolean setAssignedUserStorageDevices(com.kbdunn.nimbus.api.model.NimbusUser,java.util.List) -> a
    187:199:boolean activateUserDrive(com.kbdunn.nimbus.api.model.StorageDevice,com.kbdunn.nimbus.api.model.NimbusUser) -> c
    204:222:boolean createUserDirectories(com.kbdunn.nimbus.api.model.StorageDevice,com.kbdunn.nimbus.api.model.NimbusUser) -> d
    227:233:boolean revokeDriveFromUser(com.kbdunn.nimbus.api.model.StorageDevice,com.kbdunn.nimbus.api.model.NimbusUser) -> b
    239:240:java.util.List getUsersAssignedToStorageDevice(com.kbdunn.nimbus.api.model.StorageDevice) -> e
    246:246:java.util.List getAssignedStorageDevices() -> bi
    252:252:java.util.List getConnectedHardDrives() -> bj
    258:258:java.util.List getAvailableHardDrives() -> bk
    269:400:void scanAndMountUSBHardDrives() -> bl
    404:405:void resetReconciliation() -> bm
    28:28:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.service.LocalUserService -> server.P:
    org.apache.log4j.Logger log -> a
    java.lang.String TEMP_FILE_DIR -> ax
    int TEMP_PASSWORD_LENGTH -> ay
    java.lang.String TEMP_PASSWORD_CHARS -> az
    com.kbdunn.nimbus.server.service.LocalFileService fileService -> e
    com.kbdunn.nimbus.server.service.LocalStorageService storageService -> f
    com.kbdunn.nimbus.server.service.LocalOAuthService oAuthService -> k
    40:40:void <init>() -> <init>
    43:46:void initialize(com.kbdunn.nimbus.server.NimbusContext) -> a
    50:50:java.lang.Integer getUserCount() -> bn
    55:55:java.util.List getAllUsers() -> bo
    60:61:com.kbdunn.nimbus.api.model.NimbusUser getUserById(java.lang.Long) -> k
    66:66:com.kbdunn.nimbus.api.model.NimbusUser getUserByNameOrEmail(java.lang.String) -> A
    71:71:com.kbdunn.nimbus.api.model.NimbusUser getUserByApiToken(java.lang.String) -> B
    77:79:com.kbdunn.nimbus.api.model.NimbusFile resolveRelativePath(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.model.StorageDevice,java.lang.String) -> a
    84:84:com.kbdunn.nimbus.api.model.SMTPSettings getSmtpSettings(com.kbdunn.nimbus.api.model.NimbusUser) -> r
    89:95:void updateSmtpSettings(com.kbdunn.nimbus.api.model.SMTPSettings) -> a
    99:101:java.lang.String getUserRootFolderPath(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.model.StorageDevice) -> a
    106:108:java.lang.String getUserHomeFolderPath(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.model.StorageDevice) -> b
    113:115:com.kbdunn.nimbus.api.model.NimbusFile getUserRootFolder(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.model.StorageDevice) -> c
    120:122:com.kbdunn.nimbus.api.model.NimbusFile getUserHomeFolder(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.model.StorageDevice) -> d
    127:127:java.lang.String getTempFolderPath(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.model.StorageDevice) -> e
    132:132:com.kbdunn.nimbus.api.model.NimbusFile getTempFolder(com.kbdunn.nimbus.api.model.NimbusUser,com.kbdunn.nimbus.api.model.StorageDevice) -> f
    137:144:java.util.List getAllTempFolders(com.kbdunn.nimbus.api.model.NimbusUser) -> s
    153:154:java.lang.Boolean hasDuplicateEmail(com.kbdunn.nimbus.api.model.NimbusUser) -> t
    159:160:java.lang.Boolean hasDuplicateName(com.kbdunn.nimbus.api.model.NimbusUser) -> u
    165:172:java.lang.String generateTemporaryPassword() -> bp
    177:185:java.lang.String getDigestedPassword(java.lang.String) -> C
    191:194:boolean validatePassword(java.lang.String,java.lang.String) -> b
    200:211:boolean save(com.kbdunn.nimbus.api.model.NimbusUser) -> v
    215:221:boolean insert(com.kbdunn.nimbus.api.model.NimbusUser) -> B
    225:244:boolean update(com.kbdunn.nimbus.api.model.NimbusUser) -> C
    249:251:boolean delete(com.kbdunn.nimbus.api.model.NimbusUser) -> w
    256:265:com.kbdunn.nimbus.api.async.EmailTransport getEmailTransport(com.kbdunn.nimbus.api.model.NimbusUser) -> x
    31:31:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.util.DatabaseCleaner -> server.Q:
    org.apache.log4j.Logger log -> a
    16:16:void <init>() -> <init>
    21:22:void main(java.lang.String[]) -> main
    25:55:com.kbdunn.nimbus.server.util.DatabaseCleaner clean(boolean) -> c
    18:18:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.util.DemoModePrimer -> server.R:
    org.apache.log4j.Logger log -> a
    35:35:void <init>() -> <init>
    56:176:void go() -> go
    37:53:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.util.DevModePrimer -> server.S:
    org.apache.log4j.Logger log -> a
    24:24:void <init>() -> <init>
    30:233:void go() -> go
    26:26:void <clinit>() -> <clinit>
com.kbdunn.nimbus.server.util.ZipCompress -> server.T:
    long MAX_IN_MEMORY_SIZE -> aA
    com.kbdunn.nimbus.server.service.LocalFileService fileService -> e
    java.util.HashMap fileMap -> aB
    long totalSize -> aC
    26:32:void <init>(java.util.List) -> <init>
    35:38:java.io.InputStream getInputStream() -> getInputStream
    43:70:java.io.InputStream buildArchiveInMemory() -> X
    76:76:java.io.InputStream buildArchiveOnDisk() -> Y
    80:90:void addZipEntry(com.kbdunn.nimbus.api.model.NimbusFile,java.lang.String) -> d
