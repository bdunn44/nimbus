CREATE SCHEMA NIMBUS AUTHORIZATION DBA
	CREATE CACHED TABLE SYS (
		ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
		VERSION VARCHAR(50),
		IS_AUTO_SCAN BOOLEAN,
		CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE
	)
	CREATE CACHED TABLE STORAGE (
		ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
		TYPE VARCHAR(10),
		NAME VARCHAR(50),
		PATH VARCHAR(50),
		DEVICE_PATH VARCHAR(100),
		LABEL VARCHAR(50),
		UUID VARCHAR(50),
		IS_CONNECTED BOOLEAN,
		IS_MOUNTED BOOLEAN,
		IS_RECONCILED BOOLEAN,
		IS_AUTONOMOUS BOOLEAN,
		SIZE BIGINT,
		USED BIGINT,
		CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE
	)
	CREATE INDEX IDX_STORAGE_NAME ON STORAGE (NAME)
	CREATE INDEX IDX_STORAGE_TYPE ON STORAGE (TYPE)
	CREATE INDEX IDX_STORAGE_PATH ON STORAGE (PATH)
	CREATE CACHED TABLE USER (
		ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
		NAME VARCHAR(50) NOT NULL,
		EMAIL VARCHAR(75) NOT NULL,
		PW_DIGEST VARCHAR(255) NOT NULL,
		API_TOKEN VARCHAR(64) NOT NULL,
		HAS_TEMP_PW BOOLEAN NOT NULL,
		IS_ADMIN BOOLEAN,
		SMTP_PW VARCHAR(75),
		SMTP_SERVER VARCHAR(75),
		SMTP_PORT VARCHAR(5),
		SMTP_SSL_ENABLED BOOLEAN,
		SMTP_SSL_PORT VARCHAR(5),
		OAUTH_EMAIL_SERVICE_NAME VARCHAR(50),
		CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		CONSTRAINT USER_UNQ_NAME UNIQUE(NAME),
		CONSTRAINT USER_UNQ_EMAIL UNIQUE(EMAIL)
	)
	CREATE INDEX IDX_USER_NAME ON USER (NAME)
	CREATE INDEX IDX_USER_EMAIL ON USER (EMAIL)
	CREATE CACHED TABLE USER_OAUTH (
		ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
		USER_ID BIGINT,
		SERVICE_NAME VARCHAR(50) NOT NULL,
		ACCESS_TOKEN VARCHAR(2000),
		REFRESH_TOKEN VARCHAR(2000),
		EXPIRES_IN INT,
		LAST_REFRESH BIGINT,
		TOKEN_TYPE VARCHAR(255),
		OAUTH1_PUBLIC_TOKEN VARCHAR(2000),
		SCOPE VARCHAR(2000),
		CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		CONSTRAINT USER_OAUTH_UNQ_USER_API UNIQUE(USER_ID, SERVICE_NAME),
		CONSTRAINT USER_OAUTH_FK_USER FOREIGN KEY (USER_ID) REFERENCES USER(ID) ON DELETE CASCADE
	)
	CREATE INDEX IDX_USER_SERVICE_NAME ON USER_OAUTH (SERVICE_NAME)
	CREATE CACHED TABLE USER_STORAGE (
		ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
		USER_ID BIGINT,
		STORAGE_ID BIGINT,
		SYNC_ROOT BOOLEAN,
		CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		CONSTRAINT USER_STORAGE_UNQ_USER_STORAGE UNIQUE(USER_ID, STORAGE_ID),
		CONSTRAINT USER_STORAGE_FK_STORAGE FOREIGN KEY (STORAGE_ID) REFERENCES STORAGE(ID) ON DELETE CASCADE,
		CONSTRAINT USER_STORAGE_FK_USER FOREIGN KEY (USER_ID) REFERENCES USER(ID) ON DELETE CASCADE
	)
	CREATE CACHED TABLE FILE (
		ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
		USER_STORAGE_ID BIGINT NOT NULL,
		PATH VARCHAR(1000) NOT NULL,
		NAME VARCHAR(100) GENERATED ALWAYS AS (REVERSE(SUBSTR(REVERSE(PATH), 0, INSTR(REVERSE(PATH), '/')))),
		PARENT_PATH VARCHAR(1000) GENERATED ALWAYS AS (REVERSE(SUBSTR(REVERSE(PATH), INSTR(REVERSE(PATH), '/')+1))),
		SIZE BIGINT, 
		IS_DIRECTORY BOOLEAN NOT NULL,
		IS_RECONCILED BOOLEAN NOT NULL,
		LAST_RECONCILED BIGINT,
		IS_SONG BOOLEAN NOT NULL,
		IS_VIDEO BOOLEAN NOT NULL,
		IS_IMAGE BOOLEAN NOT NULL,
		TITLE VARCHAR(200),
		SEC_LENGTH INT,
		TRACK_NO INT,
		ARTIST VARCHAR(200),
		ALBUM VARCHAR(200),
		ALBUM_YEAR VARCHAR(200),
		IS_LIBRARY_REMOVED BOOLEAN,
		MD5 VARCHAR(32),
		LAST_HASHED BIGINT,
		LAST_MODIFIED BIGINT,
		CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		CONSTRAINT FILE_UNQ_PATH UNIQUE (PATH),
		CONSTRAINT FILE_FK_USER_STORAGE FOREIGN KEY (USER_STORAGE_ID) REFERENCES USER_STORAGE(ID) ON DELETE CASCADE
	)
	CREATE INDEX IDX_FILE_PATH ON FILE (PATH)
	CREATE INDEX IDX_FILE_PRNT_PATH ON FILE (PARENT_PATH)
	CREATE INDEX IDX_FILE_DIR ON FILE (IS_DIRECTORY)
	CREATE INDEX IDX_FILE_SNG ON FILE (IS_SONG)
	CREATE INDEX IDX_FILE_VID ON FILE (IS_VIDEO)
	CREATE INDEX IDX_FILE_IMG ON FILE (IS_IMAGE)
	CREATE INDEX IDX_FILE_ART ON FILE (ARTIST)
	CREATE INDEX IDX_FILE_ALB ON FILE (ALBUM)
	CREATE CACHED TABLE PLAYLIST (
		ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
		USER_ID BIGINT,
		NAME VARCHAR(200) NOT NULL,
		CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		CONSTRAINT PLAYLIST_UNQ UNIQUE(USER_ID, NAME),
		CONSTRAINT PLAYLIST_FK_USER FOREIGN KEY (USER_ID) REFERENCES USER(ID) ON DELETE CASCADE
	)
	CREATE CACHED TABLE PLAYLIST_FILE (
		ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
		PLAYLIST_ID BIGINT NOT NULL,
		FILE_ID BIGINT NOT NULL,
		PLAY_ORDER INT,
		CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		CONSTRAINT PLAYLIST_F_UNQ UNIQUE(PLAYLIST_ID, FILE_ID),
		CONSTRAINT PLAYLIST_F_FK_PLAYLIST FOREIGN KEY (PLAYLIST_ID) REFERENCES PLAYLIST(ID) ON DELETE CASCADE,
		CONSTRAINT PLAYLIST_F_FK_FILE FOREIGN KEY (FILE_ID) REFERENCES FILE(ID) ON DELETE CASCADE
	)
	CREATE CACHED TABLE SHARE_BLOCK (
		ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
		USER_ID BIGINT NOT NULL,
		IS_EXTERNAL BOOLEAN NOT NULL,
		ALLOW_EXT_UPLOAD BOOLEAN,
		TOKEN VARCHAR(50) NOT NULL,
		NAME VARCHAR(50),
		MSG VARCHAR(500),
		VISIT_COUNT INT,
		EXP_DATE TIMESTAMP(2) WITH TIME ZONE,
		PW_DIGEST VARCHAR(255),
		CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		CONSTRAINT SHARE_BLOCK_FK_USER FOREIGN KEY (USER_ID) REFERENCES USER(ID) ON DELETE CASCADE,
		CONSTRAINT SHARE_BLOCK_UNQ_TOKEN UNIQUE (TOKEN),
		CONSTRAINT SHARE_BLOCK_UNQ_NAME UNIQUE (USER_ID, NAME)
	)
	CREATE INDEX IDX_SB_TOKEN ON SHARE_BLOCK (TOKEN)
	CREATE CACHED TABLE SHARE_BLOCK_FILE (
		ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
		SHARE_BLOCK_ID BIGINT NOT NULL,
		FILE_ID BIGINT NOT NULL,
		NOTE VARCHAR(100),
		CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		CONSTRAINT SHARE_BLOCK_FILE_FK_BLOCK FOREIGN KEY (SHARE_BLOCK_ID) REFERENCES SHARE_BLOCK(ID) ON DELETE CASCADE,
		CONSTRAINT SHARE_BLOCK_FILE_FK_FILE FOREIGN KEY (FILE_ID) REFERENCES FILE(ID) ON DELETE CASCADE,
		CONSTRAINT SHARE_BLOCK_FILE_UNQ UNIQUE (SHARE_BLOCK_ID, FILE_ID)
	)
	CREATE CACHED TABLE SHARE_BLOCK_ACCESS (
		ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
		SHARE_BLOCK_ID BIGINT NOT NULL,
		USER_ID BIGINT NOT NULL,
		CAN_CREATE BOOLEAN NOT NULL,
		CAN_UPDATE BOOLEAN NOT NULL,
		CAN_DELETE BOOLEAN NOT NULL,
		CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		CONSTRAINT SHARE_BLOCK_ACCESS_FK_BLOCK FOREIGN KEY (SHARE_BLOCK_ID) REFERENCES SHARE_BLOCK(ID) ON DELETE CASCADE,
		CONSTRAINT SHARE_BLOCK_ACCESS_FK_USER FOREIGN KEY (USER_ID) REFERENCES USER(ID) ON DELETE CASCADE,
		CONSTRAINT SHARE_BLOCK_ACCESS_UNQ UNIQUE (SHARE_BLOCK_ID, USER_ID)
	)
	CREATE CACHED TABLE SHARE_BLOCK_RECIP (
		ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
		SHARE_BLOCK_ID BIGINT NOT NULL,
		EMAIL VARCHAR(255) NOT NULL,
		CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		CONSTRAINT BLOCK_RECIP_FK_BLOCK FOREIGN KEY (SHARE_BLOCK_ID) REFERENCES SHARE_BLOCK(ID) ON DELETE CASCADE
	)
	CREATE CACHED TABLE MSG (
		ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
		USER_ID BIGINT,  -- a message from a User.
		SHARE_BLOCK_ID BIGINT, -- can be a message posted to a Share, or...
		USER_ID_RECIP BIGINT,  -- a message to another user.
		--PARENT_MSG_ID BIGINT, -- The immediate parent message that was replied to (if any)
		IS_ANON BOOLEAN, -- Only used to indicate a message posted to a share is from an anonymous user
		IP VARCHAR(50), -- IP address, if anon
		--SUBJECT VARCHAR(50),
		MESSAGE VARCHAR(2000),
		CREATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		LAST_UPDATE_DATE TIMESTAMP(2) WITH TIME ZONE,
		CONSTRAINT SHARE_BLOCK_MSG_FK_SHARE FOREIGN KEY (SHARE_BLOCK_ID) REFERENCES SHARE_BLOCK(ID) ON DELETE CASCADE,
		CONSTRAINT SHARE_BLOCK_MSG_FK_USER FOREIGN KEY (USER_ID) REFERENCES USER(ID) ON DELETE CASCADE,
		CONSTRAINT SHARE_BLOCK_MSG_FK_USER_RECIP FOREIGN KEY (USER_ID_RECIP) REFERENCES USER(ID) ON DELETE CASCADE
		--CONSTRAINT SHARE_BLOCK_MSG_FK_PARENT FOREIGN KEY (PARENT_MSG_ID) REFERENCES MSG(ID) ON DELETE CASCADE
	);

INSERT INTO NIMBUS.SYS (VERSION, IS_AUTO_SCAN, CREATE_DATE, LAST_UPDATE_DATE) VALUES ('0.7.0-beta', TRUE,  SYSDATE, SYSDATE);
COMMIT;